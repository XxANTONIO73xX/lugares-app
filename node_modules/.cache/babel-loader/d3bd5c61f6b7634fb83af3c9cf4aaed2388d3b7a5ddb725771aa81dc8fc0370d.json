{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar TaskActionsList;\nvar TaskActionsPage;\nvar TaskActionsInstance;\nvar TaskActionsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n * @param {string} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsList = function TaskActionsList(version, assistantSid, taskSid) {\n  /* jshint ignore:start */\n  /**\n   * @function taskActions\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  function TaskActionsListInstance(sid) {\n    return TaskActionsListInstance.get(sid);\n  }\n  TaskActionsListInstance._version = version;\n  // Path Solution\n  TaskActionsListInstance._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_actions\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.get = function get() {\n    return new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  TaskActionsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return TaskActionsListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskActionsSolution} solution - Path solution\n *\n * @returns TaskActionsPage\n */\n/* jshint ignore:end */\nTaskActionsPage = function TaskActionsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(TaskActionsPage.prototype, Page.prototype);\nTaskActionsPage.prototype.constructor = TaskActionsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskActionsInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @param {TaskActionsPayload} payload - Payload response from the API\n *\n * @returns TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskActionsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} taskSid - The unique ID of the Task.\n * @property {string} url - The url\n * @property {string} data - The data\n *\n * @param {Understand} version - Version of the resource\n * @param {TaskActionsPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsInstance = function TaskActionsInstance(version, payload, assistantSid, taskSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n  this.taskSid = payload.task_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n};\nObject.defineProperty(TaskActionsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskActionsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsContext = function TaskActionsContext(version, assistantSid, taskSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n  this._uri = _.template('/Assistants/<%= assistantSid %>/Tasks/<%= taskSid %>/Actions' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Actions': serialize.object(_.get(opts, 'actions'))\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nTaskActionsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  TaskActionsList: TaskActionsList,\n  TaskActionsPage: TaskActionsPage,\n  TaskActionsInstance: TaskActionsInstance,\n  TaskActionsContext: TaskActionsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","TaskActionsList","TaskActionsPage","TaskActionsInstance","TaskActionsContext","version","assistantSid","taskSid","TaskActionsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","assistant_sid","task_sid","url","data","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","template","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","of","object","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/understand/assistant/task/taskActions.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskActionsList;\nvar TaskActionsPage;\nvar TaskActionsInstance;\nvar TaskActionsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n * @param {string} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsList = function TaskActionsList(version, assistantSid, taskSid) {\n  /* jshint ignore:start */\n  /**\n   * @function taskActions\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  function TaskActionsListInstance(sid) {\n    return TaskActionsListInstance.get(sid);\n  }\n\n  TaskActionsListInstance._version = version;\n  // Path Solution\n  TaskActionsListInstance._solution = {assistantSid: assistantSid, taskSid: taskSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_actions\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.get = function get() {\n    return new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskActionsListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskActionsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskActionsSolution} solution - Path solution\n *\n * @returns TaskActionsPage\n */\n/* jshint ignore:end */\nTaskActionsPage = function TaskActionsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskActionsPage.prototype, Page.prototype);\nTaskActionsPage.prototype.constructor = TaskActionsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskActionsInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @param {TaskActionsPayload} payload - Payload response from the API\n *\n * @returns TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskActionsInstance(\n    this._version,\n    payload,\n    this._solution.assistantSid,\n    this._solution.taskSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskActionsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} taskSid - The unique ID of the Task.\n * @property {string} url - The url\n * @property {string} data - The data\n *\n * @param {Understand} version - Version of the resource\n * @param {TaskActionsPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsInstance = function TaskActionsInstance(version, payload,\n                                                    assistantSid, taskSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n  this.taskSid = payload.task_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {assistantSid: assistantSid, taskSid: taskSid, };\n};\n\nObject.defineProperty(TaskActionsInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new TaskActionsContext(\n        this._version,\n        this._solution.assistantSid,\n        this._solution.taskSid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskActionsInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsContext = function TaskActionsContext(version, assistantSid, taskSid)\n                                                  {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {assistantSid: assistantSid, taskSid: taskSid, };\n  this._uri = _.template(\n    '/Assistants/<%= assistantSid %>/Tasks/<%= taskSid %>/Actions' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskActionsInstance(\n      this._version,\n      payload,\n      this._solution.assistantSid,\n      this._solution.taskSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Actions': serialize.object(_.get(opts, 'actions'))});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskActionsInstance(\n      this._version,\n      payload,\n      this._solution.assistantSid,\n      this._solution.taskSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskActionsContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskActionsList: TaskActionsList,\n  TaskActionsPage: TaskActionsPage,\n  TaskActionsInstance: TaskActionsInstance,\n  TaskActionsContext: TaskActionsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}