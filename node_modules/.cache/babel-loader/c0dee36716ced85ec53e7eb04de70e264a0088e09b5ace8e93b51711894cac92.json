{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar SyncMapItemList;\nvar SyncMapItemPage;\nvar SyncMapItemInstance;\nvar SyncMapItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n * @param {string} mapSid - The map_sid\n */\n/* jshint ignore:end */\nSyncMapItemList = function SyncMapItemList(version, serviceSid, mapSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncMapItems\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncMapItemListInstance(sid) {\n    return SyncMapItemListInstance.get(sid);\n  }\n  SyncMapItemListInstance._version = version;\n  // Path Solution\n  SyncMapItemListInstance._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid\n  };\n  SyncMapItemListInstance._uri = _.template('/Services/<%= serviceSid %>/Maps/<%= mapSid %>/Items' // jshint ignore:line\n  )(SyncMapItemListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a SyncMapItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.key - The key\n   * @param {string} opts.data - The data\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncMapItemInstance\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.key)) {\n      throw new Error('Required parameter \"opts.key\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'Key': _.get(opts, 'key'),\n      'Data': serialize.object(_.get(opts, 'data'))\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncMapItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncMapItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_map_item\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} key - The key\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.get = function get(key) {\n    return new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, key);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SyncMapItemListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SyncMapItemListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncMapItemSolution} solution - Path solution\n *\n * @returns SyncMapItemPage\n */\n/* jshint ignore:end */\nSyncMapItemPage = function SyncMapItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SyncMapItemPage.prototype, Page.prototype);\nSyncMapItemPage.prototype.constructor = SyncMapItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncMapItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @param {SyncMapItemPayload} payload - Payload response from the API\n *\n * @returns SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncMapItemPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance\n *\n * @property {string} key - The key\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {string} mapSid - The map_sid\n * @property {string} url - The url\n * @property {string} revision - The revision\n * @property {string} data - The data\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} createdBy - The created_by\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncMapItemPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n * @param {sid} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemInstance = function SyncMapItemInstance(version, payload, serviceSid, mapSid, key) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.key = payload.key; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.mapSid = payload.map_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid,\n    key: key || this.key\n  };\n};\nObject.defineProperty(SyncMapItemInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, this._solution.key);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.data - The data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncMapItemInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemContext = function SyncMapItemContext(version, serviceSid, mapSid, key) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    mapSid: mapSid,\n    key: key\n  };\n  this._uri = _.template('/Services/<%= serviceSid %>/Maps/<%= mapSid %>/Items/<%= key %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.data - The data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.data)) {\n    throw new Error('Required parameter \"opts.data\" missing.');\n  }\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data'))\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncMapItemInstance(this._version, payload, this._solution.serviceSid, this._solution.mapSid, this._solution.key));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nSyncMapItemContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SyncMapItemList: SyncMapItemList,\n  SyncMapItemPage: SyncMapItemPage,\n  SyncMapItemInstance: SyncMapItemInstance,\n  SyncMapItemContext: SyncMapItemContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","SyncMapItemList","SyncMapItemPage","SyncMapItemInstance","SyncMapItemContext","version","serviceSid","mapSid","SyncMapItemListInstance","sid","get","_version","_solution","_uri","template","create","opts","callback","isUndefined","Error","key","data","deferred","defer","of","object","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","pageLimit","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","startsWith","accountSid","account_sid","service_sid","map_sid","url","revision","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","createdBy","created_by","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/sync/service/syncMap/syncMapItem.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncMapItemList;\nvar SyncMapItemPage;\nvar SyncMapItemInstance;\nvar SyncMapItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n * @param {string} mapSid - The map_sid\n */\n/* jshint ignore:end */\nSyncMapItemList = function SyncMapItemList(version, serviceSid, mapSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncMapItems\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncMapItemListInstance(sid) {\n    return SyncMapItemListInstance.get(sid);\n  }\n\n  SyncMapItemListInstance._version = version;\n  // Path Solution\n  SyncMapItemListInstance._solution = {serviceSid: serviceSid, mapSid: mapSid};\n  SyncMapItemListInstance._uri = _.template(\n    '/Services/<%= serviceSid %>/Maps/<%= mapSid %>/Items' // jshint ignore:line\n  )(SyncMapItemListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a SyncMapItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.key - The key\n   * @param {string} opts.data - The data\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncMapItemInstance\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.key)) {\n      throw new Error('Required parameter \"opts.key\" missing.');\n    }\n    if (_.isUndefined(opts.data)) {\n      throw new Error('Required parameter \"opts.data\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'Key': _.get(opts, 'key'), 'Data': serialize.object(_.get(opts, 'data'))});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.mapSid,\n        this._solution.key\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncMapItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncMapItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_map_item.query_result_order} [opts.order] - The order\n   * @param {string} [opts.from] - The from\n   * @param {sync_map_item.query_from_bound_type} [opts.bounds] - The bounds\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncMapItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncMapItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_map_item\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @param {string} key - The key\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext}\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.get = function get(key) {\n    return new SyncMapItemContext(this._version, this._solution.serviceSid, this._solution.mapSid, key);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncMapItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncMapItemListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncMapItemListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncMapItemSolution} solution - Path solution\n *\n * @returns SyncMapItemPage\n */\n/* jshint ignore:end */\nSyncMapItemPage = function SyncMapItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncMapItemPage.prototype, Page.prototype);\nSyncMapItemPage.prototype.constructor = SyncMapItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncMapItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @param {SyncMapItemPayload} payload - Payload response from the API\n *\n * @returns SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncMapItemInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.mapSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncMapItemPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance\n *\n * @property {string} key - The key\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {string} mapSid - The map_sid\n * @property {string} url - The url\n * @property {string} revision - The revision\n * @property {string} data - The data\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} createdBy - The created_by\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncMapItemPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n * @param {sid} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemInstance = function SyncMapItemInstance(version, payload, serviceSid,\n                                                    mapSid, key) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.key = payload.key; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.mapSid = payload.map_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, mapSid: mapSid, key: key || this.key, };\n};\n\nObject.defineProperty(SyncMapItemInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new SyncMapItemContext(\n        this._version,\n        this._solution.serviceSid,\n        this._solution.mapSid,\n        this._solution.key\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.data - The data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncMapItemInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncMapItemContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} mapSid - The map_sid\n * @param {string} key - The key\n */\n/* jshint ignore:end */\nSyncMapItemContext = function SyncMapItemContext(version, serviceSid, mapSid,\n                                                  key) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, mapSid: mapSid, key: key, };\n  this._uri = _.template(\n    '/Services/<%= serviceSid %>/Maps/<%= mapSid %>/Items/<%= key %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncMapItemInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncMapItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.mapSid,\n      this._solution.key\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncMapItemInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncMapItemInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.data - The data\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncMapItemInstance\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.data)) {\n    throw new Error('Required parameter \"opts.data\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({'Data': serialize.object(_.get(opts, 'data'))});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncMapItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.mapSid,\n      this._solution.key\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncMapContext.SyncMapItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncMapItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncMapItemContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncMapItemList: SyncMapItemList,\n  SyncMapItemPage: SyncMapItemPage,\n  SyncMapItemInstance: SyncMapItemInstance,\n  SyncMapItemContext: SyncMapItemContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}