{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar ActivityList = require('./workspace/activity').ActivityList;\nvar EventList = require('./workspace/event').EventList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar TaskChannelList = require('./workspace/taskChannel').TaskChannelList;\nvar TaskList = require('./workspace/task').TaskList;\nvar TaskQueueList = require('./workspace/taskQueue').TaskQueueList;\nvar WorkerList = require('./workspace/worker').WorkerList;\nvar WorkflowList = require('./workspace/workflow').WorkflowList;\nvar WorkspaceCumulativeStatisticsList = require('./workspace/workspaceCumulativeStatistics').WorkspaceCumulativeStatisticsList;\nvar WorkspaceRealTimeStatisticsList = require('./workspace/workspaceRealTimeStatistics').WorkspaceRealTimeStatisticsList;\nvar WorkspaceStatisticsList = require('./workspace/workspaceStatistics').WorkspaceStatisticsList;\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar WorkspaceList;\nvar WorkspacePage;\nvar WorkspaceInstance;\nvar WorkspaceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWorkspaceList = function WorkspaceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function workspaces\n   * @memberof Twilio.Taskrouter.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  function WorkspaceListInstance(sid) {\n    return WorkspaceListInstance.get(sid);\n  }\n  WorkspaceListInstance._version = version;\n  // Path Solution\n  WorkspaceListInstance._solution = {};\n  WorkspaceListInstance._uri = _.template('/Workspaces' // jshint ignore:line\n  )(WorkspaceListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams WorkspaceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists WorkspaceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a WorkspaceInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - Human readable description of this workspace\n   * @param {string} [opts.eventCallbackUrl] -\n   *          If provided, the Workspace will publish events to this URL.\n   * @param {string} [opts.eventsFilter] -\n   *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n   * @param {boolean} [opts.multiTaskEnabled] -\n   *          Multi tasking allows workers to handle multiple tasks simultaneously.\n   * @param {string} [opts.template] - One of the available template names.\n   * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n   *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkspaceInstance\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n      'EventsFilter': _.get(opts, 'eventsFilter'),\n      'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n      'Template': _.get(opts, 'template'),\n      'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a workspace\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.get = function get(sid) {\n    return new WorkspaceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  WorkspaceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return WorkspaceListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspacePage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspacePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceSolution} solution - Path solution\n *\n * @returns WorkspacePage\n */\n/* jshint ignore:end */\nWorkspacePage = function WorkspacePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(WorkspacePage.prototype, Page.prototype);\nWorkspacePage.prototype.constructor = WorkspacePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkspaceInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @param {WorkspacePayload} payload - Payload response from the API\n *\n * @returns WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkspacePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceInstance\n *\n * @property {string} accountSid - The ID of the account that owns this Workflow\n * @property {Date} dateCreated -\n *          The time the Workspace was created, given as GMT in ISO 8601 format.\n * @property {Date} dateUpdated -\n *          The time the Workspace was last updated, given as GMT in ISO 8601 format.\n * @property {string} defaultActivityName -\n *          The human readable name of the default activity.\n * @property {string} defaultActivitySid -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @property {string} eventCallbackUrl -\n *          If provided, the Workspace will publish events to this URL.\n * @property {string} eventsFilter -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @property {string} friendlyName - Filter by a workspace's friendly name.\n * @property {boolean} multiTaskEnabled -\n *          Multi tasking allows workers to handle multiple tasks simultaneously.\n * @property {string} sid - The unique ID of the Workspace\n * @property {string} timeoutActivityName -\n *          The human readable name of the timeout activity.\n * @property {string} timeoutActivitySid -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @property {workspace.queue_order} prioritizeQueueOrder -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspacePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nWorkspaceInstance = function WorkspaceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.defaultActivityName = payload.default_activity_name; // jshint ignore:line\n  this.defaultActivitySid = payload.default_activity_sid; // jshint ignore:line\n  this.eventCallbackUrl = payload.event_callback_url; // jshint ignore:line\n  this.eventsFilter = payload.events_filter; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.multiTaskEnabled = payload.multi_task_enabled; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.timeoutActivityName = payload.timeout_activity_name; // jshint ignore:line\n  this.timeoutActivitySid = payload.timeout_activity_sid; // jshint ignore:line\n  this.prioritizeQueueOrder = payload.prioritize_queue_order; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(WorkspaceInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkspaceContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @param {string} [opts.eventCallbackUrl] -\n *          The Workspace will publish events to this URL.\n * @param {string} [opts.eventsFilter] -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @param {string} [opts.friendlyName] -\n *          Human readable description of this workspace\n * @param {boolean} [opts.multiTaskEnabled] -\n *          Enable or Disable Multitasking by passing either true or False with the POST request.\n * @param {string} [opts.timeoutActivitySid] -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the activities\n *\n * @function activities\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.activities = function activities() {\n  return this._proxy.activities;\n};\n\n/* jshint ignore:start */\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.EventList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskQueues\n *\n * @function taskQueues\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskQueues = function taskQueues() {\n  return this._proxy.taskQueues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workers\n *\n * @function workers\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workers = function workers() {\n  return this._proxy.workers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workflows\n *\n * @function workflows\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workflows = function workflows() {\n  return this._proxy.workflows;\n};\n\n/* jshint ignore:start */\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.cumulativeStatistics = function cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskChannels\n *\n * @function taskChannels\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskChannels = function taskChannels() {\n  return this._proxy.taskChannels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkspaceInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList} activities -\n *          activities resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.EventList} events -\n *          events resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList} taskQueues -\n *          taskQueues resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList} workers -\n *          workers resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList} workflows -\n *          workflows resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList} taskChannels -\n *          taskChannels resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nWorkspaceContext = function WorkspaceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/Workspaces/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._activities = undefined;\n  this._events = undefined;\n  this._tasks = undefined;\n  this._taskQueues = undefined;\n  this._workers = undefined;\n  this._workflows = undefined;\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n  this._taskChannels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @param {string} [opts.eventCallbackUrl] -\n *          The Workspace will publish events to this URL.\n * @param {string} [opts.eventsFilter] -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @param {string} [opts.friendlyName] -\n *          Human readable description of this workspace\n * @param {boolean} [opts.multiTaskEnabled] -\n *          Enable or Disable Multitasking by passing either true or False with the POST request.\n * @param {string} [opts.timeoutActivitySid] -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultActivitySid': _.get(opts, 'defaultActivitySid'),\n    'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n    'EventsFilter': _.get(opts, 'eventsFilter'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n    'TimeoutActivitySid': _.get(opts, 'timeoutActivitySid'),\n    'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(WorkspaceContext.prototype, 'activities', {\n  get: function () {\n    if (!this._activities) {\n      this._activities = new ActivityList(this._version, this._solution.sid);\n    }\n    return this._activities;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'events', {\n  get: function () {\n    if (!this._events) {\n      this._events = new EventList(this._version, this._solution.sid);\n    }\n    return this._events;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'tasks', {\n  get: function () {\n    if (!this._tasks) {\n      this._tasks = new TaskList(this._version, this._solution.sid);\n    }\n    return this._tasks;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'taskQueues', {\n  get: function () {\n    if (!this._taskQueues) {\n      this._taskQueues = new TaskQueueList(this._version, this._solution.sid);\n    }\n    return this._taskQueues;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'workers', {\n  get: function () {\n    if (!this._workers) {\n      this._workers = new WorkerList(this._version, this._solution.sid);\n    }\n    return this._workers;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'workflows', {\n  get: function () {\n    if (!this._workflows) {\n      this._workflows = new WorkflowList(this._version, this._solution.sid);\n    }\n    return this._workflows;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'statistics', {\n  get: function () {\n    if (!this._statistics) {\n      this._statistics = new WorkspaceStatisticsList(this._version, this._solution.sid);\n    }\n    return this._statistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'realTimeStatistics', {\n  get: function () {\n    if (!this._realTimeStatistics) {\n      this._realTimeStatistics = new WorkspaceRealTimeStatisticsList(this._version, this._solution.sid);\n    }\n    return this._realTimeStatistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'cumulativeStatistics', {\n  get: function () {\n    if (!this._cumulativeStatistics) {\n      this._cumulativeStatistics = new WorkspaceCumulativeStatisticsList(this._version, this._solution.sid);\n    }\n    return this._cumulativeStatistics;\n  }\n});\nObject.defineProperty(WorkspaceContext.prototype, 'taskChannels', {\n  get: function () {\n    if (!this._taskChannels) {\n      this._taskChannels = new TaskChannelList(this._version, this._solution.sid);\n    }\n    return this._taskChannels;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nWorkspaceContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  WorkspaceList: WorkspaceList,\n  WorkspacePage: WorkspacePage,\n  WorkspaceInstance: WorkspaceInstance,\n  WorkspaceContext: WorkspaceContext\n};","map":{"version":3,"names":["Q","require","_","util","ActivityList","EventList","Page","TaskChannelList","TaskList","TaskQueueList","WorkerList","WorkflowList","WorkspaceCumulativeStatisticsList","WorkspaceRealTimeStatisticsList","WorkspaceStatisticsList","deserialize","serialize","values","WorkspaceList","WorkspacePage","WorkspaceInstance","WorkspaceContext","version","WorkspaceListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","friendlyName","bool","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","defaultActivityName","default_activity_name","defaultActivitySid","default_activity_sid","eventCallbackUrl","event_callback_url","eventsFilter","events_filter","friendly_name","multiTaskEnabled","multi_task_enabled","timeoutActivityName","timeout_activity_name","timeoutActivitySid","timeout_activity_sid","prioritizeQueueOrder","prioritize_queue_order","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","activities","events","tasks","taskQueues","workers","workflows","statistics","realTimeStatistics","cumulativeStatistics","taskChannels","_activities","_events","_tasks","_taskQueues","_workers","_workflows","_statistics","_realTimeStatistics","_cumulativeStatistics","_taskChannels","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/taskrouter/v1/workspace.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar ActivityList = require('./workspace/activity').ActivityList;\nvar EventList = require('./workspace/event').EventList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar TaskChannelList = require('./workspace/taskChannel').TaskChannelList;\nvar TaskList = require('./workspace/task').TaskList;\nvar TaskQueueList = require('./workspace/taskQueue').TaskQueueList;\nvar WorkerList = require('./workspace/worker').WorkerList;\nvar WorkflowList = require('./workspace/workflow').WorkflowList;\nvar WorkspaceCumulativeStatisticsList = require(\n    './workspace/workspaceCumulativeStatistics').WorkspaceCumulativeStatisticsList;\nvar WorkspaceRealTimeStatisticsList = require(\n    './workspace/workspaceRealTimeStatistics').WorkspaceRealTimeStatisticsList;\nvar WorkspaceStatisticsList = require(\n    './workspace/workspaceStatistics').WorkspaceStatisticsList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar WorkspaceList;\nvar WorkspacePage;\nvar WorkspaceInstance;\nvar WorkspaceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWorkspaceList = function WorkspaceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function workspaces\n   * @memberof Twilio.Taskrouter.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  function WorkspaceListInstance(sid) {\n    return WorkspaceListInstance.get(sid);\n  }\n\n  WorkspaceListInstance._version = version;\n  // Path Solution\n  WorkspaceListInstance._solution = {};\n  WorkspaceListInstance._uri = _.template(\n    '/Workspaces' // jshint ignore:line\n  )(WorkspaceListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams WorkspaceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists WorkspaceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - Filter by a workspace's friendly name.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of WorkspaceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspacePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a WorkspaceInstance\n   *\n   * @function create\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - Human readable description of this workspace\n   * @param {string} [opts.eventCallbackUrl] -\n   *          If provided, the Workspace will publish events to this URL.\n   * @param {string} [opts.eventsFilter] -\n   *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n   * @param {boolean} [opts.multiTaskEnabled] -\n   *          Multi tasking allows workers to handle multiple tasks simultaneously.\n   * @param {string} [opts.template] - One of the available template names.\n   * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n   *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed WorkspaceInstance\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n      'EventsFilter': _.get(opts, 'eventsFilter'),\n      'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n      'Template': _.get(opts, 'template'),\n      'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a workspace\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext}\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.get = function get(sid) {\n    return new WorkspaceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkspaceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkspaceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkspaceListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspacePage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspacePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkspaceSolution} solution - Path solution\n *\n * @returns WorkspacePage\n */\n/* jshint ignore:end */\nWorkspacePage = function WorkspacePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkspacePage.prototype, Page.prototype);\nWorkspacePage.prototype.constructor = WorkspacePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkspaceInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @param {WorkspacePayload} payload - Payload response from the API\n *\n * @returns WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.getInstance = function getInstance(payload) {\n  return new WorkspaceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspacePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspacePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspacePage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceInstance\n *\n * @property {string} accountSid - The ID of the account that owns this Workflow\n * @property {Date} dateCreated -\n *          The time the Workspace was created, given as GMT in ISO 8601 format.\n * @property {Date} dateUpdated -\n *          The time the Workspace was last updated, given as GMT in ISO 8601 format.\n * @property {string} defaultActivityName -\n *          The human readable name of the default activity.\n * @property {string} defaultActivitySid -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @property {string} eventCallbackUrl -\n *          If provided, the Workspace will publish events to this URL.\n * @property {string} eventsFilter -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @property {string} friendlyName - Filter by a workspace's friendly name.\n * @property {boolean} multiTaskEnabled -\n *          Multi tasking allows workers to handle multiple tasks simultaneously.\n * @property {string} sid - The unique ID of the Workspace\n * @property {string} timeoutActivityName -\n *          The human readable name of the timeout activity.\n * @property {string} timeoutActivitySid -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @property {workspace.queue_order} prioritizeQueueOrder -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {WorkspacePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nWorkspaceInstance = function WorkspaceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.defaultActivityName = payload.default_activity_name; // jshint ignore:line\n  this.defaultActivitySid = payload.default_activity_sid; // jshint ignore:line\n  this.eventCallbackUrl = payload.event_callback_url; // jshint ignore:line\n  this.eventsFilter = payload.events_filter; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.multiTaskEnabled = payload.multi_task_enabled; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.timeoutActivityName = payload.timeout_activity_name; // jshint ignore:line\n  this.timeoutActivitySid = payload.timeout_activity_sid; // jshint ignore:line\n  this.prioritizeQueueOrder = payload.prioritize_queue_order; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(WorkspaceInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new WorkspaceContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @param {string} [opts.eventCallbackUrl] -\n *          The Workspace will publish events to this URL.\n * @param {string} [opts.eventsFilter] -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @param {string} [opts.friendlyName] -\n *          Human readable description of this workspace\n * @param {boolean} [opts.multiTaskEnabled] -\n *          Enable or Disable Multitasking by passing either true or False with the POST request.\n * @param {string} [opts.timeoutActivitySid] -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the activities\n *\n * @function activities\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.activities = function activities() {\n  return this._proxy.activities;\n};\n\n/* jshint ignore:start */\n/**\n * Access the events\n *\n * @function events\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.EventList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.events = function events() {\n  return this._proxy.events;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tasks\n *\n * @function tasks\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.tasks = function tasks() {\n  return this._proxy.tasks;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskQueues\n *\n * @function taskQueues\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskQueues = function taskQueues() {\n  return this._proxy.taskQueues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workers\n *\n * @function workers\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workers = function workers() {\n  return this._proxy.workers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the workflows\n *\n * @function workflows\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.workflows = function workflows() {\n  return this._proxy.workflows;\n};\n\n/* jshint ignore:start */\n/**\n * Access the statistics\n *\n * @function statistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.statistics = function statistics() {\n  return this._proxy.statistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the realTimeStatistics\n *\n * @function realTimeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.realTimeStatistics = function realTimeStatistics() {\n  return this._proxy.realTimeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the cumulativeStatistics\n *\n * @function cumulativeStatistics\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.cumulativeStatistics = function\n    cumulativeStatistics() {\n  return this._proxy.cumulativeStatistics;\n};\n\n/* jshint ignore:start */\n/**\n * Access the taskChannels\n *\n * @function taskChannels\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList}\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.taskChannels = function taskChannels() {\n  return this._proxy.taskChannels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkspaceInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkspaceContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext\n *\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.ActivityList} activities -\n *          activities resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.EventList} events -\n *          events resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskList} tasks -\n *          tasks resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueList} taskQueues -\n *          taskQueues resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkerList} workers -\n *          workers resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkflowList} workflows -\n *          workflows resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceStatisticsList} statistics -\n *          statistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceRealTimeStatisticsList} realTimeStatistics -\n *          realTimeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.WorkspaceCumulativeStatisticsList} cumulativeStatistics -\n *          cumulativeStatistics resource\n * @property {Twilio.Taskrouter.V1.WorkspaceContext.TaskChannelList} taskChannels -\n *          taskChannels resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nWorkspaceContext = function WorkspaceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/Workspaces/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._activities = undefined;\n  this._events = undefined;\n  this._tasks = undefined;\n  this._taskQueues = undefined;\n  this._workers = undefined;\n  this._workflows = undefined;\n  this._statistics = undefined;\n  this._realTimeStatistics = undefined;\n  this._cumulativeStatistics = undefined;\n  this._taskChannels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkspaceInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WorkspaceInstance\n *\n * @function update\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.defaultActivitySid] -\n *          The ID of the Activity that will be used when new Workers are created in this Workspace.\n * @param {string} [opts.eventCallbackUrl] -\n *          The Workspace will publish events to this URL.\n * @param {string} [opts.eventsFilter] -\n *          Use this parameter to receive webhooks on EventCallbackUrl for specific events on a workspace.\n * @param {string} [opts.friendlyName] -\n *          Human readable description of this workspace\n * @param {boolean} [opts.multiTaskEnabled] -\n *          Enable or Disable Multitasking by passing either true or False with the POST request.\n * @param {string} [opts.timeoutActivitySid] -\n *          The ID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.\n * @param {workspace.queue_order} [opts.prioritizeQueueOrder] -\n *          Use this parameter to configure whether to prioritize LIFO or FIFO when workers are receiving Tasks from combination of LIFO and FIFO TaskQueues.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'DefaultActivitySid': _.get(opts, 'defaultActivitySid'),\n    'EventCallbackUrl': _.get(opts, 'eventCallbackUrl'),\n    'EventsFilter': _.get(opts, 'eventsFilter'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'MultiTaskEnabled': serialize.bool(_.get(opts, 'multiTaskEnabled')),\n    'TimeoutActivitySid': _.get(opts, 'timeoutActivitySid'),\n    'PrioritizeQueueOrder': _.get(opts, 'prioritizeQueueOrder')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkspaceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a WorkspaceInstance\n *\n * @function remove\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkspaceInstance\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'activities', {\n  get: function() {\n    if (!this._activities) {\n      this._activities = new ActivityList(this._version, this._solution.sid);\n    }\n    return this._activities;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'events', {\n  get: function() {\n    if (!this._events) {\n      this._events = new EventList(this._version, this._solution.sid);\n    }\n    return this._events;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'tasks', {\n  get: function() {\n    if (!this._tasks) {\n      this._tasks = new TaskList(this._version, this._solution.sid);\n    }\n    return this._tasks;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'taskQueues', {\n  get: function() {\n    if (!this._taskQueues) {\n      this._taskQueues = new TaskQueueList(this._version, this._solution.sid);\n    }\n    return this._taskQueues;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'workers', {\n  get: function() {\n    if (!this._workers) {\n      this._workers = new WorkerList(this._version, this._solution.sid);\n    }\n    return this._workers;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'workflows', {\n  get: function() {\n    if (!this._workflows) {\n      this._workflows = new WorkflowList(this._version, this._solution.sid);\n    }\n    return this._workflows;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'statistics', {\n  get: function() {\n    if (!this._statistics) {\n      this._statistics = new WorkspaceStatisticsList(this._version, this._solution.sid);\n    }\n    return this._statistics;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'realTimeStatistics', {\n  get: function() {\n    if (!this._realTimeStatistics) {\n      this._realTimeStatistics = new WorkspaceRealTimeStatisticsList(this._version, this._solution.sid);\n    }\n    return this._realTimeStatistics;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'cumulativeStatistics', {\n  get: function() {\n    if (!this._cumulativeStatistics) {\n      this._cumulativeStatistics = new WorkspaceCumulativeStatisticsList(\n        this._version,\n        this._solution.sid\n      );\n    }\n    return this._cumulativeStatistics;\n  }\n});\n\nObject.defineProperty(WorkspaceContext.prototype,\n  'taskChannels', {\n  get: function() {\n    if (!this._taskChannels) {\n      this._taskChannels = new TaskChannelList(this._version, this._solution.sid);\n    }\n    return this._taskChannels;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkspaceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkspaceContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkspaceList: WorkspaceList,\n  WorkspacePage: WorkspacePage,\n  WorkspaceInstance: WorkspaceInstance,\n  WorkspaceContext: WorkspaceContext\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7B,IAAIG,YAAY,GAAGH,OAAO,CAAC,sBAAsB,CAAC,CAACG,YAAY;AAC/D,IAAIC,SAAS,GAAGJ,OAAO,CAAC,mBAAmB,CAAC,CAACI,SAAS;AACtD,IAAIC,IAAI,GAAGL,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAE;AAC3C,IAAIM,eAAe,GAAGN,OAAO,CAAC,yBAAyB,CAAC,CAACM,eAAe;AACxE,IAAIC,QAAQ,GAAGP,OAAO,CAAC,kBAAkB,CAAC,CAACO,QAAQ;AACnD,IAAIC,aAAa,GAAGR,OAAO,CAAC,uBAAuB,CAAC,CAACQ,aAAa;AAClE,IAAIC,UAAU,GAAGT,OAAO,CAAC,oBAAoB,CAAC,CAACS,UAAU;AACzD,IAAIC,YAAY,GAAGV,OAAO,CAAC,sBAAsB,CAAC,CAACU,YAAY;AAC/D,IAAIC,iCAAiC,GAAGX,OAAO,CAC3C,2CAA2C,CAAC,CAACW,iCAAiC;AAClF,IAAIC,+BAA+B,GAAGZ,OAAO,CACzC,yCAAyC,CAAC,CAACY,+BAA+B;AAC9E,IAAIC,uBAAuB,GAAGb,OAAO,CACjC,iCAAiC,CAAC,CAACa,uBAAuB;AAC9D,IAAIC,WAAW,GAAGd,OAAO,CACrB,2BAA2B,CAAC,CAAC,CAAE;AACnC,IAAIe,SAAS,GAAGf,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAE;AACrD,IAAIgB,MAAM,GAAGhB,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAE;;AAE/C,IAAIiB,aAAa;AACjB,IAAIC,aAAa;AACjB,IAAIC,iBAAiB;AACrB,IAAIC,gBAAgB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,aAAa,GAAG,SAASA,aAAaA,CAACI,OAAO,EAAE;EAC9C;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,SAASC,qBAAqBA,CAACC,GAAG,EAAE;IAClC,OAAOD,qBAAqB,CAACE,GAAG,CAACD,GAAG,CAAC;EACvC;EAEAD,qBAAqB,CAACG,QAAQ,GAAGJ,OAAO;EACxC;EACAC,qBAAqB,CAACI,SAAS,GAAG,CAAC,CAAC;EACpCJ,qBAAqB,CAACK,IAAI,GAAG1B,CAAC,CAAC2B,QAAQ,CACrC,aAAa,CAAC;EAChB,CAAC,CAACN,qBAAqB,CAACI,SAAS,CAAC;EAClC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAJ,qBAAqB,CAACO,IAAI,GAAG,SAASA,IAAIA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACzD,IAAI9B,CAAC,CAAC+B,UAAU,CAACF,IAAI,CAAC,EAAE;MACtBC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACjBA,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC1B;IACA,IAAI9B,CAAC,CAACgC,WAAW,CAACF,QAAQ,CAAC,EAAE;MAC3B,MAAM,IAAIG,KAAK,CAAC,oCAAoC,CAAC;IACvD;IAEA,IAAIC,IAAI,GAAG,KAAK;IAChB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,MAAM,GAAG,IAAI,CAACb,QAAQ,CAACc,UAAU,CAAC;MACpCC,KAAK,EAAEV,IAAI,CAACU,KAAK;MACjBC,QAAQ,EAAEX,IAAI,CAACW;IACjB,CAAC,CAAC;IAEF,SAASC,UAAUA,CAACC,KAAK,EAAE;MACzBR,IAAI,GAAG,IAAI;MACX,IAAIlC,CAAC,CAAC+B,UAAU,CAACF,IAAI,CAACK,IAAI,CAAC,EAAE;QAC3BL,IAAI,CAACK,IAAI,CAACQ,KAAK,CAAC;MAClB;IACF;IAEA,SAASC,aAAaA,CAACC,EAAE,EAAE;MACzB,IAAIC,OAAO,GAAGD,EAAE,CAAC,CAAC;MAClB,IAAI5C,CAAC,CAACgC,WAAW,CAACa,OAAO,CAAC,EAAE;QAC1BJ,UAAU,CAAC,CAAC;QACZ;MACF;MAEAI,OAAO,CAACC,IAAI,CAAC,UAASC,IAAI,EAAE;QAC1B/C,CAAC,CAAC4B,IAAI,CAACmB,IAAI,CAACC,SAAS,EAAE,UAASC,QAAQ,EAAE;UACxC,IAAIf,IAAI,IAAK,CAAClC,CAAC,CAACgC,WAAW,CAACH,IAAI,CAACU,KAAK,CAAC,IAAIH,eAAe,IAAIP,IAAI,CAACU,KAAM,EAAE;YACzEL,IAAI,GAAG,IAAI;YACX,OAAO,KAAK;UACd;UAEAE,eAAe,EAAE;UACjBN,QAAQ,CAACmB,QAAQ,EAAER,UAAU,CAAC;QAChC,CAAC,CAAC;QAEF,IAAKJ,MAAM,CAACa,SAAS,IAAIb,MAAM,CAACa,SAAS,IAAIf,WAAW,EAAG;UACzDM,UAAU,CAAC,CAAC;QACd,CAAC,MAAM,IAAI,CAACP,IAAI,EAAE;UAChBC,WAAW,EAAE;UACbQ,aAAa,CAAC3C,CAAC,CAACmD,IAAI,CAACJ,IAAI,CAACK,QAAQ,EAAEL,IAAI,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC;MAEFF,OAAO,CAACQ,KAAK,CAACZ,UAAU,CAAC;IAC3B;IAEAE,aAAa,CAAC3C,CAAC,CAACmD,IAAI,CAAC,IAAI,CAACJ,IAAI,EAAE,IAAI,EAAE/C,CAAC,CAACsD,KAAK,CAACzB,IAAI,EAAEQ,MAAM,CAAC,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAhB,qBAAqB,CAACkC,IAAI,GAAG,SAASA,IAAIA,CAAC1B,IAAI,EAAEC,QAAQ,EAAE;IACzD,IAAI9B,CAAC,CAAC+B,UAAU,CAACF,IAAI,CAAC,EAAE;MACtBC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,IAAI2B,QAAQ,GAAG1D,CAAC,CAAC2D,KAAK,CAAC,CAAC;IACxB,IAAIC,YAAY,GAAG,EAAE;IACrB7B,IAAI,CAACC,QAAQ,GAAG,UAAS6B,QAAQ,EAAEzB,IAAI,EAAE;MACvCwB,YAAY,CAACE,IAAI,CAACD,QAAQ,CAAC;MAE3B,IAAI,CAAC3D,CAAC,CAACgC,WAAW,CAACH,IAAI,CAACU,KAAK,CAAC,IAAImB,YAAY,CAACG,MAAM,KAAKhC,IAAI,CAACU,KAAK,EAAE;QACpEL,IAAI,CAAC,CAAC;MACR;IACF,CAAC;IAEDL,IAAI,CAACK,IAAI,GAAG,UAASQ,KAAK,EAAE;MAC1B,IAAI1C,CAAC,CAACgC,WAAW,CAACU,KAAK,CAAC,EAAE;QACxBc,QAAQ,CAACM,OAAO,CAACJ,YAAY,CAAC;MAChC,CAAC,MAAM;QACLF,QAAQ,CAACO,MAAM,CAACrB,KAAK,CAAC;MACxB;IACF,CAAC;IAED,IAAI1C,CAAC,CAAC+B,UAAU,CAACD,QAAQ,CAAC,EAAE;MAC1B0B,QAAQ,CAACX,OAAO,CAACmB,OAAO,CAAClC,QAAQ,CAAC;IACpC;IAEA,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC;IACf,OAAO2B,QAAQ,CAACX,OAAO;EACzB,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAxB,qBAAqB,CAAC0B,IAAI,GAAG,SAASA,IAAIA,CAAClB,IAAI,EAAEC,QAAQ,EAAE;IACzD,IAAI9B,CAAC,CAAC+B,UAAU,CAACF,IAAI,CAAC,EAAE;MACtBC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IAEjB,IAAI2B,QAAQ,GAAG1D,CAAC,CAAC2D,KAAK,CAAC,CAAC;IACxB,IAAIQ,IAAI,GAAGlD,MAAM,CAACmD,EAAE,CAAC;MACnB,cAAc,EAAElE,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,cAAc,CAAC;MAC3C,WAAW,EAAEA,IAAI,CAACsC,SAAS;MAC3B,MAAM,EAAEtC,IAAI,CAACuC,UAAU;MACvB,UAAU,EAAEvC,IAAI,CAACW;IACnB,CAAC,CAAC;IAEF,IAAIK,OAAO,GAAG,IAAI,CAACrB,QAAQ,CAACuB,IAAI,CAAC;MAACsB,GAAG,EAAE,IAAI,CAAC3C,IAAI;MAAE4C,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAEN;IAAI,CAAC,CAAC;IAE/EpB,OAAO,GAAGA,OAAO,CAACC,IAAI,CAAC,UAAS0B,OAAO,EAAE;MACvChB,QAAQ,CAACM,OAAO,CAAC,IAAI7C,aAAa,CAAC,IAAI,CAACO,QAAQ,EAAEgD,OAAO,EAAE,IAAI,CAAC/C,SAAS,CAAC,CAAC;IAC7E,CAAC,CAAC0B,IAAI,CAAC,IAAI,CAAC,CAAC;IAEbN,OAAO,CAACQ,KAAK,CAAC,UAASX,KAAK,EAAE;MAC5Bc,QAAQ,CAACO,MAAM,CAACrB,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI1C,CAAC,CAAC+B,UAAU,CAACD,QAAQ,CAAC,EAAE;MAC1B0B,QAAQ,CAACX,OAAO,CAACmB,OAAO,CAAClC,QAAQ,CAAC;IACpC;IAEA,OAAO0B,QAAQ,CAACX,OAAO;EACzB,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAxB,qBAAqB,CAACoD,OAAO,GAAG,SAASA,OAAOA,CAACC,SAAS,EAAE5C,QAAQ,EAAE;IACpE,IAAI0B,QAAQ,GAAG1D,CAAC,CAAC2D,KAAK,CAAC,CAAC;IAExB,IAAIZ,OAAO,GAAG,IAAI,CAACrB,QAAQ,CAACmD,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC;MAACP,MAAM,EAAE,KAAK;MAAED,GAAG,EAAEK;IAAS,CAAC,CAAC;IAEnF7B,OAAO,GAAGA,OAAO,CAACC,IAAI,CAAC,UAAS0B,OAAO,EAAE;MACvChB,QAAQ,CAACM,OAAO,CAAC,IAAI7C,aAAa,CAAC,IAAI,CAACO,QAAQ,EAAEgD,OAAO,EAAE,IAAI,CAAC/C,SAAS,CAAC,CAAC;IAC7E,CAAC,CAAC0B,IAAI,CAAC,IAAI,CAAC,CAAC;IAEbN,OAAO,CAACQ,KAAK,CAAC,UAASX,KAAK,EAAE;MAC5Bc,QAAQ,CAACO,MAAM,CAACrB,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI1C,CAAC,CAAC+B,UAAU,CAACD,QAAQ,CAAC,EAAE;MAC1B0B,QAAQ,CAACX,OAAO,CAACmB,OAAO,CAAClC,QAAQ,CAAC;IACpC;IAEA,OAAO0B,QAAQ,CAACX,OAAO;EACzB,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAxB,qBAAqB,CAACyD,MAAM,GAAG,SAASA,MAAMA,CAACjD,IAAI,EAAEC,QAAQ,EAAE;IAC7D,IAAI9B,CAAC,CAACgC,WAAW,CAACH,IAAI,CAAC,EAAE;MACvB,MAAM,IAAII,KAAK,CAAC,oCAAoC,CAAC;IACvD;IACA,IAAIjC,CAAC,CAACgC,WAAW,CAACH,IAAI,CAACkD,YAAY,CAAC,EAAE;MACpC,MAAM,IAAI9C,KAAK,CAAC,iDAAiD,CAAC;IACpE;IAEA,IAAIuB,QAAQ,GAAG1D,CAAC,CAAC2D,KAAK,CAAC,CAAC;IACxB,IAAIQ,IAAI,GAAGlD,MAAM,CAACmD,EAAE,CAAC;MACnB,cAAc,EAAElE,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,cAAc,CAAC;MAC3C,kBAAkB,EAAE7B,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,kBAAkB,CAAC;MACnD,cAAc,EAAE7B,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,cAAc,CAAC;MAC3C,kBAAkB,EAAEf,SAAS,CAACkE,IAAI,CAAChF,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,kBAAkB,CAAC,CAAC;MACnE,UAAU,EAAE7B,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,UAAU,CAAC;MACnC,sBAAsB,EAAE7B,CAAC,CAACuB,GAAG,CAACM,IAAI,EAAE,sBAAsB;IAC5D,CAAC,CAAC;IAEF,IAAIgB,OAAO,GAAG,IAAI,CAACrB,QAAQ,CAACsD,MAAM,CAAC;MAACT,GAAG,EAAE,IAAI,CAAC3C,IAAI;MAAE4C,MAAM,EAAE,MAAM;MAAEL,IAAI,EAAEA;IAAI,CAAC,CAAC;IAEhFpB,OAAO,GAAGA,OAAO,CAACC,IAAI,CAAC,UAAS0B,OAAO,EAAE;MACvChB,QAAQ,CAACM,OAAO,CAAC,IAAI5C,iBAAiB,CAAC,IAAI,CAACM,QAAQ,EAAEgD,OAAO,EAAE,IAAI,CAAC/C,SAAS,CAACH,GAAG,CAAC,CAAC;IACrF,CAAC,CAAC6B,IAAI,CAAC,IAAI,CAAC,CAAC;IAEbN,OAAO,CAACQ,KAAK,CAAC,UAASX,KAAK,EAAE;MAC5Bc,QAAQ,CAACO,MAAM,CAACrB,KAAK,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI1C,CAAC,CAAC+B,UAAU,CAACD,QAAQ,CAAC,EAAE;MAC1B0B,QAAQ,CAACX,OAAO,CAACmB,OAAO,CAAClC,QAAQ,CAAC;IACpC;IAEA,OAAO0B,QAAQ,CAACX,OAAO;EACzB,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAxB,qBAAqB,CAACE,GAAG,GAAG,SAASA,GAAGA,CAACD,GAAG,EAAE;IAC5C,OAAO,IAAIH,gBAAgB,CAAC,IAAI,CAACK,QAAQ,EAAEF,GAAG,CAAC;EACjD,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAD,qBAAqB,CAAC4D,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC/C,OAAO,IAAI,CAACxD,SAAS;EACvB,CAAC;EAEDJ,qBAAqB,CAACpB,IAAI,CAACiF,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAAEC,OAAO,EAAE;IAC5E,OAAOpF,IAAI,CAACiF,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;EAC7C,CAAC;EAED,OAAOhE,qBAAqB;AAC9B,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,aAAa,GAAG,SAASA,aAAaA,CAACG,OAAO,EAAEkE,QAAQ,EAAEC,QAAQ,EAAE;EAClE;EACA,IAAI,CAAC9D,SAAS,GAAG8D,QAAQ;EAEzBnF,IAAI,CAACoF,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,EAAEtE,OAAO,EAAEkE,QAAQ,EAAE,IAAI,CAAC7D,SAAS,CAAC;AAC1E,CAAC;AAEDzB,CAAC,CAAC2F,MAAM,CAAC1E,aAAa,CAACuE,SAAS,EAAEpF,IAAI,CAACoF,SAAS,CAAC;AACjDvE,aAAa,CAACuE,SAAS,CAACC,WAAW,GAAGxE,aAAa;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,aAAa,CAACuE,SAAS,CAACI,WAAW,GAAG,SAASA,WAAWA,CAACpB,OAAO,EAAE;EAClE,OAAO,IAAItD,iBAAiB,CAAC,IAAI,CAACM,QAAQ,EAAEgD,OAAO,CAAC;AACtD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvD,aAAa,CAACuE,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACjD,IAAIY,KAAK,GAAG,CAAC,CAAC;EACd7F,CAAC,CAAC8F,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAAChG,CAAC,CAACiG,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAEhG,CAAC,CAAC+B,UAAU,CAACgE,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAED5E,aAAa,CAACuE,SAAS,CAACvF,IAAI,CAACiF,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAAEC,OAAO,EAC1E;EACF,OAAOpF,IAAI,CAACiF,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnE,iBAAiB,GAAG,SAASA,iBAAiBA,CAACE,OAAO,EAAEoD,OAAO,EAAElD,GAAG,EAAE;EACpE,IAAI,CAACE,QAAQ,GAAGJ,OAAO;;EAEvB;EACA,IAAI,CAAC8E,UAAU,GAAG1B,OAAO,CAAC2B,WAAW,CAAC,CAAC;EACvC,IAAI,CAACC,WAAW,GAAGvF,WAAW,CAACwF,eAAe,CAAC7B,OAAO,CAAC8B,YAAY,CAAC,CAAC,CAAC;EACtE,IAAI,CAACC,WAAW,GAAG1F,WAAW,CAACwF,eAAe,CAAC7B,OAAO,CAACgC,YAAY,CAAC,CAAC,CAAC;EACtE,IAAI,CAACC,mBAAmB,GAAGjC,OAAO,CAACkC,qBAAqB,CAAC,CAAC;EAC1D,IAAI,CAACC,kBAAkB,GAAGnC,OAAO,CAACoC,oBAAoB,CAAC,CAAC;EACxD,IAAI,CAACC,gBAAgB,GAAGrC,OAAO,CAACsC,kBAAkB,CAAC,CAAC;EACpD,IAAI,CAACC,YAAY,GAAGvC,OAAO,CAACwC,aAAa,CAAC,CAAC;EAC3C,IAAI,CAACjC,YAAY,GAAGP,OAAO,CAACyC,aAAa,CAAC,CAAC;EAC3C,IAAI,CAACC,gBAAgB,GAAG1C,OAAO,CAAC2C,kBAAkB,CAAC,CAAC;EACpD,IAAI,CAAC7F,GAAG,GAAGkD,OAAO,CAAClD,GAAG,CAAC,CAAC;EACxB,IAAI,CAAC8F,mBAAmB,GAAG5C,OAAO,CAAC6C,qBAAqB,CAAC,CAAC;EAC1D,IAAI,CAACC,kBAAkB,GAAG9C,OAAO,CAAC+C,oBAAoB,CAAC,CAAC;EACxD,IAAI,CAACC,oBAAoB,GAAGhD,OAAO,CAACiD,sBAAsB,CAAC,CAAC;EAC5D,IAAI,CAACC,GAAG,GAAGlD,OAAO,CAACkD,GAAG,CAAC,CAAC;EACxB,IAAI,CAACC,KAAK,GAAGnD,OAAO,CAACmD,KAAK,CAAC,CAAC;;EAE5B;EACA,IAAI,CAACC,QAAQ,GAAGC,SAAS;EACzB,IAAI,CAACpG,SAAS,GAAG;IAACH,GAAG,EAAEA,GAAG,IAAI,IAAI,CAACA;EAAK,CAAC;AAC3C,CAAC;AAEDwG,MAAM,CAACC,cAAc,CAAC7G,iBAAiB,CAACsE,SAAS,EAC/C,QAAQ,EAAE;EACVjE,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAACqG,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAIzG,gBAAgB,CAAC,IAAI,CAACK,QAAQ,EAAE,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;IACzE;IAEA,OAAO,IAAI,CAACsG,QAAQ;EACtB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1G,iBAAiB,CAACsE,SAAS,CAACwC,KAAK,GAAG,SAASA,KAAKA,CAAClG,QAAQ,EAAE;EAC3D,OAAO,IAAI,CAACmG,MAAM,CAACD,KAAK,CAAClG,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,iBAAiB,CAACsE,SAAS,CAAC0C,MAAM,GAAG,SAASA,MAAMA,CAACrG,IAAI,EAAEC,QAAQ,EAAE;EACnE,OAAO,IAAI,CAACmG,MAAM,CAACC,MAAM,CAACrG,IAAI,EAAEC,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,iBAAiB,CAACsE,SAAS,CAAC2C,MAAM,GAAG,SAASA,MAAMA,CAACrG,QAAQ,EAAE;EAC7D,OAAO,IAAI,CAACmG,MAAM,CAACE,MAAM,CAACrG,QAAQ,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,iBAAiB,CAACsE,SAAS,CAAC4C,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACH,MAAM,CAACG,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlH,iBAAiB,CAACsE,SAAS,CAAC6C,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACrD,OAAO,IAAI,CAACJ,MAAM,CAACI,MAAM;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnH,iBAAiB,CAACsE,SAAS,CAAC8C,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;EACnD,OAAO,IAAI,CAACL,MAAM,CAACK,KAAK;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApH,iBAAiB,CAACsE,SAAS,CAAC+C,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACN,MAAM,CAACM,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArH,iBAAiB,CAACsE,SAAS,CAACgD,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;EACvD,OAAO,IAAI,CAACP,MAAM,CAACO,OAAO;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtH,iBAAiB,CAACsE,SAAS,CAACiD,SAAS,GAAG,SAASA,SAASA,CAAA,EAAG;EAC3D,OAAO,IAAI,CAACR,MAAM,CAACQ,SAAS;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvH,iBAAiB,CAACsE,SAAS,CAACkD,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACT,MAAM,CAACS,UAAU;AAC/B,CAAC;;AAED;AACA;AACA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}