{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar SyncListPermissionList;\nvar SyncListPermissionPage;\nvar SyncListPermissionInstance;\nvar SyncListPermissionContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - Sync Service Instance SID.\n * @param {string} listSid - Sync List SID.\n */\n/* jshint ignore:end */\nSyncListPermissionList = function SyncListPermissionList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListPermissions\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  function SyncListPermissionListInstance(sid) {\n    return SyncListPermissionListInstance.get(sid);\n  }\n  SyncListPermissionListInstance._version = version;\n  // Path Solution\n  SyncListPermissionListInstance._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid\n  };\n  SyncListPermissionListInstance._uri = _.template('/Services/<%= serviceSid %>/Lists/<%= listSid %>/Permissions' // jshint ignore:line\n  )(SyncListPermissionListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListPermissionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListPermissionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListPermissionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListPermissionInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_permission\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} identity -\n   *          Identity of the user to whom the Sync List Permission applies.\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.get = function get(identity) {\n    return new SyncListPermissionContext(this._version, this._solution.serviceSid, this._solution.listSid, identity);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  SyncListPermissionListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return SyncListPermissionListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListPermissionSolution} solution - Path solution\n *\n * @returns SyncListPermissionPage\n */\n/* jshint ignore:end */\nSyncListPermissionPage = function SyncListPermissionPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(SyncListPermissionPage.prototype, Page.prototype);\nSyncListPermissionPage.prototype.constructor = SyncListPermissionPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListPermissionInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @param {SyncListPermissionPayload} payload - Payload response from the API\n *\n * @returns SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListPermissionPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance\n *\n * @property {string} accountSid - Twilio Account SID.\n * @property {string} serviceSid - Sync Service Instance SID.\n * @property {string} listSid - Sync List SID.\n * @property {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n * @property {boolean} read - Read access.\n * @property {boolean} write - Write access.\n * @property {boolean} manage - Manage access.\n * @property {string} url - URL of this Sync List Permission.\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncListPermissionPayload} payload - The instance payload\n * @param {sid} serviceSid - Sync Service Instance SID.\n * @param {sid} listSid - Sync List SID.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionInstance = function SyncListPermissionInstance(version, payload, serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.read = payload.read; // jshint ignore:line\n  this.write = payload.write; // jshint ignore:line\n  this.manage = payload.manage; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    identity: identity || this.identity\n  };\n};\nObject.defineProperty(SyncListPermissionInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncListPermissionContext(this._version, this._solution.serviceSid, this._solution.listSid, this._solution.identity);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nSyncListPermissionInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} listSid - Sync List SID or unique name.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionContext = function SyncListPermissionContext(version, serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    identity: identity\n  };\n  this._uri = _.template('/Services/<%= serviceSid %>/Lists/<%= listSid %>/Permissions/<%= identity %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.identity));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.read)) {\n    throw new Error('Required parameter \"opts.read\" missing.');\n  }\n  if (_.isUndefined(opts.write)) {\n    throw new Error('Required parameter \"opts.write\" missing.');\n  }\n  if (_.isUndefined(opts.manage)) {\n    throw new Error('Required parameter \"opts.manage\" missing.');\n  }\n  var deferred = Q.defer();\n  var data = values.of({\n    'Read': serialize.bool(_.get(opts, 'read')),\n    'Write': serialize.bool(_.get(opts, 'write')),\n    'Manage': serialize.bool(_.get(opts, 'manage'))\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.identity));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nSyncListPermissionContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  SyncListPermissionList: SyncListPermissionList,\n  SyncListPermissionPage: SyncListPermissionPage,\n  SyncListPermissionInstance: SyncListPermissionInstance,\n  SyncListPermissionContext: SyncListPermissionContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","SyncListPermissionList","SyncListPermissionPage","SyncListPermissionInstance","SyncListPermissionContext","version","serviceSid","listSid","SyncListPermissionListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","identity","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","service_sid","list_sid","read","write","manage","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","bool","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/sync/service/syncList/syncListPermission.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncListPermissionList;\nvar SyncListPermissionPage;\nvar SyncListPermissionInstance;\nvar SyncListPermissionContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - Sync Service Instance SID.\n * @param {string} listSid - Sync List SID.\n */\n/* jshint ignore:end */\nSyncListPermissionList = function SyncListPermissionList(version, serviceSid,\n                                                          listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListPermissions\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  function SyncListPermissionListInstance(sid) {\n    return SyncListPermissionListInstance.get(sid);\n  }\n\n  SyncListPermissionListInstance._version = version;\n  // Path Solution\n  SyncListPermissionListInstance._solution = {serviceSid: serviceSid, listSid: listSid};\n  SyncListPermissionListInstance._uri = _.template(\n    '/Services/<%= serviceSid %>/Lists/<%= listSid %>/Permissions' // jshint ignore:line\n  )(SyncListPermissionListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListPermissionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListPermissionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListPermissionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListPermissionInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_permission\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} identity -\n   *          Identity of the user to whom the Sync List Permission applies.\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.get = function get(identity) {\n    return new SyncListPermissionContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      identity\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListPermissionListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListPermissionListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListPermissionSolution} solution - Path solution\n *\n * @returns SyncListPermissionPage\n */\n/* jshint ignore:end */\nSyncListPermissionPage = function SyncListPermissionPage(version, response,\n                                                          solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListPermissionPage.prototype, Page.prototype);\nSyncListPermissionPage.prototype.constructor = SyncListPermissionPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListPermissionInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @param {SyncListPermissionPayload} payload - Payload response from the API\n *\n * @returns SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListPermissionInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.listSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListPermissionPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance\n *\n * @property {string} accountSid - Twilio Account SID.\n * @property {string} serviceSid - Sync Service Instance SID.\n * @property {string} listSid - Sync List SID.\n * @property {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n * @property {boolean} read - Read access.\n * @property {boolean} write - Write access.\n * @property {boolean} manage - Manage access.\n * @property {string} url - URL of this Sync List Permission.\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncListPermissionPayload} payload - The instance payload\n * @param {sid} serviceSid - Sync Service Instance SID.\n * @param {sid} listSid - Sync List SID.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionInstance = function SyncListPermissionInstance(version,\n    payload, serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.read = payload.read; // jshint ignore:line\n  this.write = payload.write; // jshint ignore:line\n  this.manage = payload.manage; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, listSid: listSid, identity: identity || this.identity, };\n};\n\nObject.defineProperty(SyncListPermissionInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new SyncListPermissionContext(\n        this._version,\n        this._solution.serviceSid,\n        this._solution.listSid,\n        this._solution.identity\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListPermissionInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} listSid - Sync List SID or unique name.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionContext = function SyncListPermissionContext(version,\n    serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, listSid: listSid, identity: identity, };\n  this._uri = _.template(\n    '/Services/<%= serviceSid %>/Lists/<%= listSid %>/Permissions/<%= identity %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListPermissionInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.identity\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.read)) {\n    throw new Error('Required parameter \"opts.read\" missing.');\n  }\n  if (_.isUndefined(opts.write)) {\n    throw new Error('Required parameter \"opts.write\" missing.');\n  }\n  if (_.isUndefined(opts.manage)) {\n    throw new Error('Required parameter \"opts.manage\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Read': serialize.bool(_.get(opts, 'read')),\n    'Write': serialize.bool(_.get(opts, 'write')),\n    'Manage': serialize.bool(_.get(opts, 'manage'))\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListPermissionInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.identity\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListPermissionContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListPermissionList: SyncListPermissionList,\n  SyncListPermissionPage: SyncListPermissionPage,\n  SyncListPermissionInstance: SyncListPermissionInstance,\n  SyncListPermissionContext: SyncListPermissionContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}