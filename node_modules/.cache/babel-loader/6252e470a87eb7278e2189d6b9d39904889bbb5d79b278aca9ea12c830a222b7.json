{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar TaskQueueRealTimeStatisticsList;\nvar TaskQueueRealTimeStatisticsPage;\nvar TaskQueueRealTimeStatisticsInstance;\nvar TaskQueueRealTimeStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsList = function TaskQueueRealTimeStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueRealTimeStatisticsListInstance(sid) {\n    return TaskQueueRealTimeStatisticsListInstance.get(sid);\n  }\n  TaskQueueRealTimeStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.get = function get() {\n    return new TaskQueueRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  TaskQueueRealTimeStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return TaskQueueRealTimeStatisticsListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueRealTimeStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage = function TaskQueueRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(TaskQueueRealTimeStatisticsPage.prototype, Page.prototype);\nTaskQueueRealTimeStatisticsPage.prototype.constructor = TaskQueueRealTimeStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @param {TaskQueueRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskQueueRealTimeStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} activityStatistics -\n *          The current Worker status count breakdown by Activity\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {string} taskQueueSid - The task_queue_sid\n * @property {string} tasksByPriority - The Tasks broken down by priority\n * @property {string} tasksByStatus - The Tasks broken down by status\n * @property {number} totalAvailableWorkers -\n *          The total number of Workers available for Tasks in this TaskQueue\n * @property {number} totalEligibleWorkers -\n *          The total number of Workers eligible for Tasks in this TaskQueue, irrespective of Activity state.\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance = function TaskQueueRealTimeStatisticsInstance(version, payload, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n  this.totalAvailableWorkers = deserialize.integer(payload.total_available_workers); // jshint ignore:line\n  this.totalEligibleWorkers = deserialize.integer(payload.total_eligible_workers); // jshint ignore:line\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n};\nObject.defineProperty(TaskQueueRealTimeStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskQueueRealTimeStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskQueueRealTimeStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext = function TaskQueueRealTimeStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  this._uri = _.template('/Workspaces/<%= workspaceSid %>/TaskQueues/<%= taskQueueSid %>/RealTimeStatistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskQueueRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nTaskQueueRealTimeStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  TaskQueueRealTimeStatisticsList: TaskQueueRealTimeStatisticsList,\n  TaskQueueRealTimeStatisticsPage: TaskQueueRealTimeStatisticsPage,\n  TaskQueueRealTimeStatisticsInstance: TaskQueueRealTimeStatisticsInstance,\n  TaskQueueRealTimeStatisticsContext: TaskQueueRealTimeStatisticsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","TaskQueueRealTimeStatisticsList","TaskQueueRealTimeStatisticsPage","TaskQueueRealTimeStatisticsInstance","TaskQueueRealTimeStatisticsContext","version","workspaceSid","taskQueueSid","TaskQueueRealTimeStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","activityStatistics","activity_statistics","longestTaskWaitingAge","integer","longest_task_waiting_age","longestTaskWaitingSid","longest_task_waiting_sid","task_queue_sid","tasksByPriority","tasks_by_priority","tasksByStatus","tasks_by_status","totalAvailableWorkers","total_available_workers","totalEligibleWorkers","total_eligible_workers","totalTasks","total_tasks","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","template","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue/taskQueueRealTimeStatistics.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskQueueRealTimeStatisticsList;\nvar TaskQueueRealTimeStatisticsPage;\nvar TaskQueueRealTimeStatisticsInstance;\nvar TaskQueueRealTimeStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsList = function\n    TaskQueueRealTimeStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueRealTimeStatisticsListInstance(sid) {\n    return TaskQueueRealTimeStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueRealTimeStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.get = function get() {\n    return new TaskQueueRealTimeStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueRealTimeStatisticsListInstance[util.inspect.custom] = function\n      inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueRealTimeStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueRealTimeStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage = function\n    TaskQueueRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueRealTimeStatisticsPage.prototype, Page.prototype);\nTaskQueueRealTimeStatisticsPage.prototype.constructor = TaskQueueRealTimeStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @param {TaskQueueRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.getInstance = function\n    getInstance(payload) {\n  return new TaskQueueRealTimeStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.taskQueueSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} activityStatistics -\n *          The current Worker status count breakdown by Activity\n * @property {number} longestTaskWaitingAge - The age of the longest waiting Task\n * @property {string} longestTaskWaitingSid - The SID of the longest waiting Task\n * @property {string} taskQueueSid - The task_queue_sid\n * @property {string} tasksByPriority - The Tasks broken down by priority\n * @property {string} tasksByStatus - The Tasks broken down by status\n * @property {number} totalAvailableWorkers -\n *          The total number of Workers available for Tasks in this TaskQueue\n * @property {number} totalEligibleWorkers -\n *          The total number of Workers eligible for Tasks in this TaskQueue, irrespective of Activity state.\n * @property {number} totalTasks - The total number of Tasks\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance = function\n    TaskQueueRealTimeStatisticsInstance(version, payload, workspaceSid,\n    taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n  this.longestTaskWaitingAge = deserialize.integer(payload.longest_task_waiting_age); // jshint ignore:line\n  this.longestTaskWaitingSid = payload.longest_task_waiting_sid; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.tasksByPriority = payload.tasks_by_priority; // jshint ignore:line\n  this.tasksByStatus = payload.tasks_by_status; // jshint ignore:line\n  this.totalAvailableWorkers = deserialize.integer(payload.total_available_workers); // jshint ignore:line\n  this.totalEligibleWorkers = deserialize.integer(payload.total_eligible_workers); // jshint ignore:line\n  this.totalTasks = deserialize.integer(payload.total_tasks); // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n};\n\nObject.defineProperty(TaskQueueRealTimeStatisticsInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new TaskQueueRealTimeStatisticsContext(\n        this._version,\n        this._solution.workspaceSid,\n        this._solution.taskQueueSid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.fetch = function fetch(opts,\n    callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueRealTimeStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext = function\n    TaskQueueRealTimeStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n  this._uri = _.template(\n    '/Workspaces/<%= workspaceSid %>/TaskQueues/<%= taskQueueSid %>/RealTimeStatistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueRealTimeStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.fetch = function fetch(opts,\n    callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'TaskChannel': _.get(opts, 'taskChannel')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskQueueRealTimeStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueRealTimeStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueRealTimeStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueRealTimeStatisticsList: TaskQueueRealTimeStatisticsList,\n  TaskQueueRealTimeStatisticsPage: TaskQueueRealTimeStatisticsPage,\n  TaskQueueRealTimeStatisticsInstance: TaskQueueRealTimeStatisticsInstance,\n  TaskQueueRealTimeStatisticsContext: TaskQueueRealTimeStatisticsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}