{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar WebhookList;\nvar WebhookPage;\nvar WebhookInstance;\nvar WebhookContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookList = function WebhookList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function webhooks\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.WebhookContext}\n   */\n  /* jshint ignore:end */\n  function WebhookListInstance(sid) {\n    return WebhookListInstance.get(sid);\n  }\n  WebhookListInstance._version = version;\n  // Path Solution\n  WebhookListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a webhook\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.WebhookList#\n   *\n   * @returns {Twilio.Messaging.V1.WebhookContext}\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.get = function get() {\n    return new WebhookContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.WebhookList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  WebhookListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return WebhookListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WebhookSolution} solution - Path solution\n *\n * @returns WebhookPage\n */\n/* jshint ignore:end */\nWebhookPage = function WebhookPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(WebhookPage.prototype, Page.prototype);\nWebhookPage.prototype.constructor = WebhookPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WebhookInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.WebhookPage#\n *\n * @param {WebhookPayload} payload - Payload response from the API\n *\n * @returns WebhookInstance\n */\n/* jshint ignore:end */\nWebhookPage.prototype.getInstance = function getInstance(payload) {\n  return new WebhookInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWebhookPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookInstance\n *\n * @property {string} accountSid -\n *          The unique id of the Account responsible for this session.\n * @property {string} serviceSid -\n *          The unique id of the Chat Service this session belongs to.\n * @property {string} webhookMethod -\n *          The HTTP method to be used when sending a webhook request.\n * @property {string} webhookFilters -\n *          The list of webhook event triggers that are enabled for this Service.\n * @property {string} preWebhookUrl -\n *          The absolute url the pre-event webhook request should be sent to.\n * @property {string} postWebhookUrl -\n *          The absolute url the post-event webhook request should be sent to.\n * @property {number} preWebhookRetryCount -\n *          The number of retries in case of pre-event webhook request failures.\n * @property {number} postWebhookRetryCount -\n *          The number of retries in case of post-event webhook request failures.\n * @property {webhook.target} target - The routing target of the webhook.\n * @property {string} url - An absolute URL for this webhook.\n *\n * @param {V1} version - Version of the resource\n * @param {WebhookPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nWebhookInstance = function WebhookInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.webhookFilters = payload.webhook_filters; // jshint ignore:line\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n  this.preWebhookRetryCount = deserialize.integer(payload.pre_webhook_retry_count); // jshint ignore:line\n  this.postWebhookRetryCount = deserialize.integer(payload.post_webhook_retry_count); // jshint ignore:line\n  this.target = payload.target; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\nObject.defineProperty(WebhookInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WebhookContext(this._version);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.webhookMethod] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.webhookFilters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {number} [opts.preWebhookRetryCount] -\n *          The number of retries in case of pre-event webhook request failures.\n * @param {number} [opts.postWebhookRetryCount] -\n *          The number of retries in case of post-event webhook request failures.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWebhookInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookContext = function WebhookContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = _.template('/Sessions/Webhooks' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.webhookMethod] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.webhookFilters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {number} [opts.preWebhookRetryCount] -\n *          The number of retries in case of pre-event webhook request failures.\n * @param {number} [opts.postWebhookRetryCount] -\n *          The number of retries in case of post-event webhook request failures.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'WebhookMethod': _.get(opts, 'webhookMethod'),\n    'WebhookFilters': serialize.map(_.get(opts, 'webhookFilters'), function (e) {\n      return e;\n    }),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'PreWebhookRetryCount': _.get(opts, 'preWebhookRetryCount'),\n    'PostWebhookRetryCount': _.get(opts, 'postWebhookRetryCount'),\n    'Target': _.get(opts, 'target')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nWebhookContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  WebhookList: WebhookList,\n  WebhookPage: WebhookPage,\n  WebhookInstance: WebhookInstance,\n  WebhookContext: WebhookContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","WebhookList","WebhookPage","WebhookInstance","WebhookContext","version","WebhookListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","serviceSid","service_sid","webhookMethod","webhook_method","webhookFilters","webhook_filters","preWebhookUrl","pre_webhook_url","postWebhookUrl","post_webhook_url","preWebhookRetryCount","integer","pre_webhook_retry_count","postWebhookRetryCount","post_webhook_retry_count","target","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","template","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","map","e","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/messaging/v1/webhook.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar WebhookList;\nvar WebhookPage;\nvar WebhookInstance;\nvar WebhookContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookList = function WebhookList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function webhooks\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.WebhookContext}\n   */\n  /* jshint ignore:end */\n  function WebhookListInstance(sid) {\n    return WebhookListInstance.get(sid);\n  }\n\n  WebhookListInstance._version = version;\n  // Path Solution\n  WebhookListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a webhook\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.WebhookList#\n   *\n   * @returns {Twilio.Messaging.V1.WebhookContext}\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.get = function get() {\n    return new WebhookContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.WebhookList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WebhookListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WebhookListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WebhookListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WebhookSolution} solution - Path solution\n *\n * @returns WebhookPage\n */\n/* jshint ignore:end */\nWebhookPage = function WebhookPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WebhookPage.prototype, Page.prototype);\nWebhookPage.prototype.constructor = WebhookPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WebhookInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.WebhookPage#\n *\n * @param {WebhookPayload} payload - Payload response from the API\n *\n * @returns WebhookInstance\n */\n/* jshint ignore:end */\nWebhookPage.prototype.getInstance = function getInstance(payload) {\n  return new WebhookInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWebhookPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookInstance\n *\n * @property {string} accountSid -\n *          The unique id of the Account responsible for this session.\n * @property {string} serviceSid -\n *          The unique id of the Chat Service this session belongs to.\n * @property {string} webhookMethod -\n *          The HTTP method to be used when sending a webhook request.\n * @property {string} webhookFilters -\n *          The list of webhook event triggers that are enabled for this Service.\n * @property {string} preWebhookUrl -\n *          The absolute url the pre-event webhook request should be sent to.\n * @property {string} postWebhookUrl -\n *          The absolute url the post-event webhook request should be sent to.\n * @property {number} preWebhookRetryCount -\n *          The number of retries in case of pre-event webhook request failures.\n * @property {number} postWebhookRetryCount -\n *          The number of retries in case of post-event webhook request failures.\n * @property {webhook.target} target - The routing target of the webhook.\n * @property {string} url - An absolute URL for this webhook.\n *\n * @param {V1} version - Version of the resource\n * @param {WebhookPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nWebhookInstance = function WebhookInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.webhookMethod = payload.webhook_method; // jshint ignore:line\n  this.webhookFilters = payload.webhook_filters; // jshint ignore:line\n  this.preWebhookUrl = payload.pre_webhook_url; // jshint ignore:line\n  this.postWebhookUrl = payload.post_webhook_url; // jshint ignore:line\n  this.preWebhookRetryCount = deserialize.integer(payload.pre_webhook_retry_count); // jshint ignore:line\n  this.postWebhookRetryCount = deserialize.integer(payload.post_webhook_retry_count); // jshint ignore:line\n  this.target = payload.target; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(WebhookInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new WebhookContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.webhookMethod] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.webhookFilters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {number} [opts.preWebhookRetryCount] -\n *          The number of retries in case of pre-event webhook request failures.\n * @param {number} [opts.postWebhookRetryCount] -\n *          The number of retries in case of post-event webhook request failures.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWebhookInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WebhookContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Messaging.V1.WebhookContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nWebhookContext = function WebhookContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = _.template(\n    '/Sessions/Webhooks' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WebhookInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a WebhookInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.webhookMethod] -\n *          The HTTP method to be used when sending a webhook request.\n * @param {string|list} [opts.webhookFilters] -\n *          The list of webhook event triggers that are enabled for this Service.\n * @param {string} [opts.preWebhookUrl] -\n *          The absolute url the pre-event webhook request should be sent to.\n * @param {string} [opts.postWebhookUrl] -\n *          The absolute url the post-event webhook request should be sent to.\n * @param {number} [opts.preWebhookRetryCount] -\n *          The number of retries in case of pre-event webhook request failures.\n * @param {number} [opts.postWebhookRetryCount] -\n *          The number of retries in case of post-event webhook request failures.\n * @param {webhook.target} [opts.target] - The routing target of the webhook.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WebhookInstance\n */\n/* jshint ignore:end */\nWebhookContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'WebhookMethod': _.get(opts, 'webhookMethod'),\n    'WebhookFilters': serialize.map(_.get(opts, 'webhookFilters'), function(e) { return e; }),\n    'PreWebhookUrl': _.get(opts, 'preWebhookUrl'),\n    'PostWebhookUrl': _.get(opts, 'postWebhookUrl'),\n    'PreWebhookRetryCount': _.get(opts, 'preWebhookRetryCount'),\n    'PostWebhookRetryCount': _.get(opts, 'postWebhookRetryCount'),\n    'Target': _.get(opts, 'target')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WebhookInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.WebhookContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWebhookContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWebhookContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WebhookList: WebhookList,\n  WebhookPage: WebhookPage,\n  WebhookInstance: WebhookInstance,\n  WebhookContext: WebhookContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}