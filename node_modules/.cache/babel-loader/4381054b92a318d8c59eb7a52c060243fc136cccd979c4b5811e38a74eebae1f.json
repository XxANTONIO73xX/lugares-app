{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar AuthRegistrationsCredentialListMappingList = require('./authRegistrationsMapping/authRegistrationsCredentialListMapping').AuthRegistrationsCredentialListMappingList;\nvar AuthTypeRegistrationsList;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthTypeRegistrationsList\n *\n * @constructor Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} domainSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAuthTypeRegistrationsList = function AuthTypeRegistrationsList(version, accountSid, domainSid) {\n  /* jshint ignore:start */\n  /**\n   * @function registrations\n   * @memberof Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsContext}\n   */\n  /* jshint ignore:end */\n  function AuthTypeRegistrationsListInstance(sid) {\n    return AuthTypeRegistrationsListInstance.get(sid);\n  }\n  AuthTypeRegistrationsListInstance._version = version;\n  // Path Solution\n  AuthTypeRegistrationsListInstance._solution = {\n    accountSid: accountSid,\n    domainSid: domainSid\n  };\n\n  // Components\n  AuthTypeRegistrationsListInstance._credentialListMappings = undefined;\n  Object.defineProperty(AuthTypeRegistrationsListInstance, 'credentialListMappings', {\n    get: function credentialListMappings() {\n      if (!this._credentialListMappings) {\n        this._credentialListMappings = new AuthRegistrationsCredentialListMappingList(this._version, this._solution.accountSid, this._solution.domainSid);\n      }\n      return this._credentialListMappings;\n    }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthTypeRegistrationsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  AuthTypeRegistrationsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return AuthTypeRegistrationsListInstance;\n};\nmodule.exports = {\n  AuthTypeRegistrationsList: AuthTypeRegistrationsList\n};","map":{"version":3,"names":["_","require","util","AuthRegistrationsCredentialListMappingList","AuthTypeRegistrationsList","version","accountSid","domainSid","AuthTypeRegistrationsListInstance","sid","get","_version","_solution","_credentialListMappings","undefined","Object","defineProperty","credentialListMappings","toJSON","inspect","custom","depth","options","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/api/v2010/account/sip/domain/authTypes/authRegistrationsMapping.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AuthRegistrationsCredentialListMappingList = require(\n    './authRegistrationsMapping/authRegistrationsCredentialListMapping').AuthRegistrationsCredentialListMappingList;\n\nvar AuthTypeRegistrationsList;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthTypeRegistrationsList\n *\n * @constructor Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} domainSid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nAuthTypeRegistrationsList = function AuthTypeRegistrationsList(version,\n    accountSid, domainSid) {\n  /* jshint ignore:start */\n  /**\n   * @function registrations\n   * @memberof Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsContext}\n   */\n  /* jshint ignore:end */\n  function AuthTypeRegistrationsListInstance(sid) {\n    return AuthTypeRegistrationsListInstance.get(sid);\n  }\n\n  AuthTypeRegistrationsListInstance._version = version;\n  // Path Solution\n  AuthTypeRegistrationsListInstance._solution = {accountSid: accountSid, domainSid: domainSid};\n\n  // Components\n  AuthTypeRegistrationsListInstance._credentialListMappings = undefined;\n\n  Object.defineProperty(AuthTypeRegistrationsListInstance,\n    'credentialListMappings', {\n    get: function credentialListMappings() {\n      if (!this._credentialListMappings) {\n        this._credentialListMappings = new AuthRegistrationsCredentialListMappingList(\n          this._version,\n          this._solution.accountSid,\n          this._solution.domainSid\n        );\n      }\n\n      return this._credentialListMappings;\n    }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.SipContext.DomainContext.AuthTypesContext.AuthTypeRegistrationsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthTypeRegistrationsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthTypeRegistrationsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthTypeRegistrationsListInstance;\n};\n\nmodule.exports = {\n  AuthTypeRegistrationsList: AuthTypeRegistrationsList\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;AAC5B,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7B,IAAIE,0CAA0C,GAAGF,OAAO,CACpD,mEAAmE,CAAC,CAACE,0CAA0C;AAEnH,IAAIC,yBAAyB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,yBAAyB,GAAG,SAASA,yBAAyBA,CAACC,OAAO,EAClEC,UAAU,EAAEC,SAAS,EAAE;EACzB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,SAASC,iCAAiCA,CAACC,GAAG,EAAE;IAC9C,OAAOD,iCAAiC,CAACE,GAAG,CAACD,GAAG,CAAC;EACnD;EAEAD,iCAAiC,CAACG,QAAQ,GAAGN,OAAO;EACpD;EACAG,iCAAiC,CAACI,SAAS,GAAG;IAACN,UAAU,EAAEA,UAAU;IAAEC,SAAS,EAAEA;EAAS,CAAC;;EAE5F;EACAC,iCAAiC,CAACK,uBAAuB,GAAGC,SAAS;EAErEC,MAAM,CAACC,cAAc,CAACR,iCAAiC,EACrD,wBAAwB,EAAE;IAC1BE,GAAG,EAAE,SAASO,sBAAsBA,CAAA,EAAG;MACrC,IAAI,CAAC,IAAI,CAACJ,uBAAuB,EAAE;QACjC,IAAI,CAACA,uBAAuB,GAAG,IAAIV,0CAA0C,CAC3E,IAAI,CAACQ,QAAQ,EACb,IAAI,CAACC,SAAS,CAACN,UAAU,EACzB,IAAI,CAACM,SAAS,CAACL,SACjB,CAAC;MACH;MAEA,OAAO,IAAI,CAACM,uBAAuB;IACrC;EACF,CAAC,CAAC;;EAEF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAL,iCAAiC,CAACU,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC3D,OAAO,IAAI,CAACN,SAAS;EACvB,CAAC;EAEDJ,iCAAiC,CAACN,IAAI,CAACiB,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAC3EC,OAAO,EAAE;IACX,OAAOpB,IAAI,CAACiB,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;EAC7C,CAAC;EAED,OAAOd,iCAAiC;AAC1C,CAAC;AAEDe,MAAM,CAACC,OAAO,GAAG;EACfpB,yBAAyB,EAAEA;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}