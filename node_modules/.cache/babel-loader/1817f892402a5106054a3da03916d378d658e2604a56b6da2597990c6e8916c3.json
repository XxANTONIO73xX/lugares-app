{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar AlphaSenderList = require('./service/alphaSender').AlphaSenderList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar PhoneNumberList = require('./service/phoneNumber').PhoneNumberList;\nvar ShortCodeList = require('./service/shortCode').ShortCodeList;\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar ServiceList;\nvar ServicePage;\nvar ServiceInstance;\nvar ServiceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nServiceList = function ServiceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function services\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  function ServiceListInstance(sid) {\n    return ServiceListInstance.get(sid);\n  }\n  ServiceListInstance._version = version;\n  // Path Solution\n  ServiceListInstance._solution = {};\n  ServiceListInstance._uri = _.template('/Services' // jshint ignore:line\n  )(ServiceListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a ServiceInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          A human readable descriptive text for this resource, up to 64 characters.\n   * @param {string} [opts.inboundRequestUrl] -\n   *          A webhook request is made to the Inbound Request URL when a message is received by any phone number or shortcode associated to your Messaging Service.\n   * @param {string} [opts.inboundMethod] -\n   *          The HTTP method used when making requests to the Inbound Request URL.\n   * @param {string} [opts.fallbackUrl] -\n   *          A request is made to the Fallback URL if an error occurs with retrieving or executing the TwiML from you Inbound Request URL.\n   * @param {string} [opts.fallbackMethod] -\n   *          The HTTP method used when requesting the Fallback URL.\n   * @param {string} [opts.statusCallback] -\n   *          A webhook request is made to the Status Callback to pass status updates about your messages.\n   * @param {boolean} [opts.stickySender] -\n   *          Configuration to enable or disable Sticky Sender on your Service Instance.\n   * @param {boolean} [opts.mmsConverter] -\n   *          Configuration to enable or disable MMS Converter on your Service Instance.\n   * @param {boolean} [opts.smartEncoding] -\n   *          Configuration to enable or disable Smart Encoding.\n   * @param {service.scan_message_content} [opts.scanMessageContent] -\n   *          The scan_message_content\n   * @param {boolean} [opts.fallbackToLongCode] -\n   *          Configuration to enable or disable Fallback to Long Code.\n   * @param {boolean} [opts.areaCodeGeomatch] -\n   *          Configuration to enable or disable Area Code Geomatch.\n   * @param {number} [opts.validityPeriod] -\n   *          Configuration to set the validity period of all messages sent from your Service, in seconds.\n   * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ServiceInstance\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'InboundRequestUrl': _.get(opts, 'inboundRequestUrl'),\n      'InboundMethod': _.get(opts, 'inboundMethod'),\n      'FallbackUrl': _.get(opts, 'fallbackUrl'),\n      'FallbackMethod': _.get(opts, 'fallbackMethod'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StickySender': serialize.bool(_.get(opts, 'stickySender')),\n      'MmsConverter': serialize.bool(_.get(opts, 'mmsConverter')),\n      'SmartEncoding': serialize.bool(_.get(opts, 'smartEncoding')),\n      'ScanMessageContent': _.get(opts, 'scanMessageContent'),\n      'FallbackToLongCode': serialize.bool(_.get(opts, 'fallbackToLongCode')),\n      'AreaCodeGeomatch': serialize.bool(_.get(opts, 'areaCodeGeomatch')),\n      'ValidityPeriod': _.get(opts, 'validityPeriod'),\n      'SynchronousValidation': serialize.bool(_.get(opts, 'synchronousValidation'))\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ServiceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ServiceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a service\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.get = function get(sid) {\n    return new ServiceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ServiceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ServiceListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ServicePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServicePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ServiceSolution} solution - Path solution\n *\n * @returns ServicePage\n */\n/* jshint ignore:end */\nServicePage = function ServicePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ServicePage.prototype, Page.prototype);\nServicePage.prototype.constructor = ServicePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ServiceInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServicePage#\n *\n * @param {ServicePayload} payload - Payload response from the API\n *\n * @returns ServiceInstance\n */\n/* jshint ignore:end */\nServicePage.prototype.getInstance = function getInstance(payload) {\n  return new ServiceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServicePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServicePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nServicePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceInstance\n *\n * @property {string} sid - Unique 34 character ID of the Service.\n * @property {string} accountSid -\n *          Unique 34 character ID of the Account that created this Service.\n * @property {string} friendlyName -\n *          A human readable descriptive text for this resource, up to 64 characters.\n * @property {Date} dateCreated - The date that this resource was created.\n * @property {Date} dateUpdated - The date that this resource was last updated.\n * @property {string} inboundRequestUrl -\n *          The URL Twilio will make a webhook request to when a message is received by any phone number or short code in your Service.\n * @property {string} inboundMethod -\n *          The HTTP method Twilio will use when making requests to the Inbound Request URL.\n * @property {string} fallbackUrl -\n *          The URL that Twilio will request if an error occurs when retrieving or executing the TwiML from your Inbound Request URL.\n * @property {string} fallbackMethod -\n *          The HTTP method Twilio will use when making requests to the Fallback URL.\n * @property {string} statusCallback -\n *          The URL Twilio will make a webhook request to when passing you status updates about the delivery of your messages.\n * @property {boolean} stickySender -\n *          Configuration to enable or disable Sticky Sender on your Service instance.\n * @property {boolean} mmsConverter -\n *          Configuration to enable or disable MMS Converter for messages sent through your Service instance.\n * @property {boolean} smartEncoding -\n *          Configuration to enable or disable Smart Encoding for messages sent through your Service instance.\n * @property {service.scan_message_content} scanMessageContent -\n *          The scan_message_content\n * @property {boolean} fallbackToLongCode -\n *          Configuration to enable or disable Fallback to Long Code for messages sent through your Service instance.\n * @property {boolean} areaCodeGeomatch -\n *          Configuration to enable or disable Area Code Geomatch on your Service Instance.\n * @property {boolean} synchronousValidation - The synchronous_validation\n * @property {number} validityPeriod -\n *          The number of seconds all messages sent from your Service are valid for.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {ServicePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceInstance = function ServiceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.inboundRequestUrl = payload.inbound_request_url; // jshint ignore:line\n  this.inboundMethod = payload.inbound_method; // jshint ignore:line\n  this.fallbackUrl = payload.fallback_url; // jshint ignore:line\n  this.fallbackMethod = payload.fallback_method; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.stickySender = payload.sticky_sender; // jshint ignore:line\n  this.mmsConverter = payload.mms_converter; // jshint ignore:line\n  this.smartEncoding = payload.smart_encoding; // jshint ignore:line\n  this.scanMessageContent = payload.scan_message_content; // jshint ignore:line\n  this.fallbackToLongCode = payload.fallback_to_long_code; // jshint ignore:line\n  this.areaCodeGeomatch = payload.area_code_geomatch; // jshint ignore:line\n  this.synchronousValidation = payload.synchronous_validation; // jshint ignore:line\n  this.validityPeriod = deserialize.integer(payload.validity_period); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(ServiceInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ServiceContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.inboundRequestUrl] - The inbound_request_url\n * @param {string} [opts.inboundMethod] - The inbound_method\n * @param {string} [opts.fallbackUrl] - The fallback_url\n * @param {string} [opts.fallbackMethod] - The fallback_method\n * @param {string} [opts.statusCallback] - The status_callback\n * @param {boolean} [opts.stickySender] - The sticky_sender\n * @param {boolean} [opts.mmsConverter] - The mms_converter\n * @param {boolean} [opts.smartEncoding] - The smart_encoding\n * @param {service.scan_message_content} [opts.scanMessageContent] -\n *          The scan_message_content\n * @param {boolean} [opts.fallbackToLongCode] - The fallback_to_long_code\n * @param {boolean} [opts.areaCodeGeomatch] - The area_code_geomatch\n * @param {number} [opts.validityPeriod] - The validity_period\n * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the phoneNumbers\n *\n * @function phoneNumbers\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.PhoneNumberList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.phoneNumbers = function phoneNumbers() {\n  return this._proxy.phoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.ShortCodeList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the alphaSenders\n *\n * @function alphaSenders\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.AlphaSenderList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.alphaSenders = function alphaSenders() {\n  return this._proxy.alphaSenders;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nServiceInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext\n *\n * @property {Twilio.Messaging.V1.ServiceContext.PhoneNumberList} phoneNumbers -\n *          phoneNumbers resource\n * @property {Twilio.Messaging.V1.ServiceContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Messaging.V1.ServiceContext.AlphaSenderList} alphaSenders -\n *          alphaSenders resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceContext = function ServiceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/Services/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._phoneNumbers = undefined;\n  this._shortCodes = undefined;\n  this._alphaSenders = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.inboundRequestUrl] - The inbound_request_url\n * @param {string} [opts.inboundMethod] - The inbound_method\n * @param {string} [opts.fallbackUrl] - The fallback_url\n * @param {string} [opts.fallbackMethod] - The fallback_method\n * @param {string} [opts.statusCallback] - The status_callback\n * @param {boolean} [opts.stickySender] - The sticky_sender\n * @param {boolean} [opts.mmsConverter] - The mms_converter\n * @param {boolean} [opts.smartEncoding] - The smart_encoding\n * @param {service.scan_message_content} [opts.scanMessageContent] -\n *          The scan_message_content\n * @param {boolean} [opts.fallbackToLongCode] - The fallback_to_long_code\n * @param {boolean} [opts.areaCodeGeomatch] - The area_code_geomatch\n * @param {number} [opts.validityPeriod] - The validity_period\n * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'InboundRequestUrl': _.get(opts, 'inboundRequestUrl'),\n    'InboundMethod': _.get(opts, 'inboundMethod'),\n    'FallbackUrl': _.get(opts, 'fallbackUrl'),\n    'FallbackMethod': _.get(opts, 'fallbackMethod'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StickySender': serialize.bool(_.get(opts, 'stickySender')),\n    'MmsConverter': serialize.bool(_.get(opts, 'mmsConverter')),\n    'SmartEncoding': serialize.bool(_.get(opts, 'smartEncoding')),\n    'ScanMessageContent': _.get(opts, 'scanMessageContent'),\n    'FallbackToLongCode': serialize.bool(_.get(opts, 'fallbackToLongCode')),\n    'AreaCodeGeomatch': serialize.bool(_.get(opts, 'areaCodeGeomatch')),\n    'ValidityPeriod': _.get(opts, 'validityPeriod'),\n    'SynchronousValidation': serialize.bool(_.get(opts, 'synchronousValidation'))\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(ServiceContext.prototype, 'phoneNumbers', {\n  get: function () {\n    if (!this._phoneNumbers) {\n      this._phoneNumbers = new PhoneNumberList(this._version, this._solution.sid);\n    }\n    return this._phoneNumbers;\n  }\n});\nObject.defineProperty(ServiceContext.prototype, 'shortCodes', {\n  get: function () {\n    if (!this._shortCodes) {\n      this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n    }\n    return this._shortCodes;\n  }\n});\nObject.defineProperty(ServiceContext.prototype, 'alphaSenders', {\n  get: function () {\n    if (!this._alphaSenders) {\n      this._alphaSenders = new AlphaSenderList(this._version, this._solution.sid);\n    }\n    return this._alphaSenders;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nServiceContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ServiceList: ServiceList,\n  ServicePage: ServicePage,\n  ServiceInstance: ServiceInstance,\n  ServiceContext: ServiceContext\n};","map":{"version":3,"names":["Q","require","_","util","AlphaSenderList","Page","PhoneNumberList","ShortCodeList","deserialize","serialize","values","ServiceList","ServicePage","ServiceInstance","ServiceContext","version","ServiceListInstance","sid","get","_version","_solution","_uri","template","create","opts","callback","isUndefined","Error","friendlyName","deferred","defer","data","of","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","pageLimit","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","friendly_name","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","inboundRequestUrl","inbound_request_url","inboundMethod","inbound_method","fallbackUrl","fallback_url","fallbackMethod","fallback_method","statusCallback","status_callback","stickySender","sticky_sender","mmsConverter","mms_converter","smartEncoding","smart_encoding","scanMessageContent","scan_message_content","fallbackToLongCode","fallback_to_long_code","areaCodeGeomatch","area_code_geomatch","synchronousValidation","synchronous_validation","validityPeriod","integer","validity_period","url","links","_context","undefined","Object","defineProperty","update","_proxy","fetch","remove","phoneNumbers","shortCodes","alphaSenders","_phoneNumbers","_shortCodes","_alphaSenders","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/messaging/v1/service.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AlphaSenderList = require('./service/alphaSender').AlphaSenderList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar PhoneNumberList = require('./service/phoneNumber').PhoneNumberList;\nvar ShortCodeList = require('./service/shortCode').ShortCodeList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ServiceList;\nvar ServicePage;\nvar ServiceInstance;\nvar ServiceContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nServiceList = function ServiceList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function services\n   * @memberof Twilio.Messaging.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  function ServiceListInstance(sid) {\n    return ServiceListInstance.get(sid);\n  }\n\n  ServiceListInstance._version = version;\n  // Path Solution\n  ServiceListInstance._solution = {};\n  ServiceListInstance._uri = _.template(\n    '/Services' // jshint ignore:line\n  )(ServiceListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a ServiceInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          A human readable descriptive text for this resource, up to 64 characters.\n   * @param {string} [opts.inboundRequestUrl] -\n   *          A webhook request is made to the Inbound Request URL when a message is received by any phone number or shortcode associated to your Messaging Service.\n   * @param {string} [opts.inboundMethod] -\n   *          The HTTP method used when making requests to the Inbound Request URL.\n   * @param {string} [opts.fallbackUrl] -\n   *          A request is made to the Fallback URL if an error occurs with retrieving or executing the TwiML from you Inbound Request URL.\n   * @param {string} [opts.fallbackMethod] -\n   *          The HTTP method used when requesting the Fallback URL.\n   * @param {string} [opts.statusCallback] -\n   *          A webhook request is made to the Status Callback to pass status updates about your messages.\n   * @param {boolean} [opts.stickySender] -\n   *          Configuration to enable or disable Sticky Sender on your Service Instance.\n   * @param {boolean} [opts.mmsConverter] -\n   *          Configuration to enable or disable MMS Converter on your Service Instance.\n   * @param {boolean} [opts.smartEncoding] -\n   *          Configuration to enable or disable Smart Encoding.\n   * @param {service.scan_message_content} [opts.scanMessageContent] -\n   *          The scan_message_content\n   * @param {boolean} [opts.fallbackToLongCode] -\n   *          Configuration to enable or disable Fallback to Long Code.\n   * @param {boolean} [opts.areaCodeGeomatch] -\n   *          Configuration to enable or disable Area Code Geomatch.\n   * @param {number} [opts.validityPeriod] -\n   *          Configuration to set the validity period of all messages sent from your Service, in seconds.\n   * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ServiceInstance\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'InboundRequestUrl': _.get(opts, 'inboundRequestUrl'),\n      'InboundMethod': _.get(opts, 'inboundMethod'),\n      'FallbackUrl': _.get(opts, 'fallbackUrl'),\n      'FallbackMethod': _.get(opts, 'fallbackMethod'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StickySender': serialize.bool(_.get(opts, 'stickySender')),\n      'MmsConverter': serialize.bool(_.get(opts, 'mmsConverter')),\n      'SmartEncoding': serialize.bool(_.get(opts, 'smartEncoding')),\n      'ScanMessageContent': _.get(opts, 'scanMessageContent'),\n      'FallbackToLongCode': serialize.bool(_.get(opts, 'fallbackToLongCode')),\n      'AreaCodeGeomatch': serialize.bool(_.get(opts, 'areaCodeGeomatch')),\n      'ValidityPeriod': _.get(opts, 'validityPeriod'),\n      'SynchronousValidation': serialize.bool(_.get(opts, 'synchronousValidation'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ServiceInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ServiceInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ServiceInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ServicePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a service\n   *\n   * @function get\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext}\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.get = function get(sid) {\n    return new ServiceContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ServiceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ServiceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ServiceListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServicePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServicePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ServiceSolution} solution - Path solution\n *\n * @returns ServicePage\n */\n/* jshint ignore:end */\nServicePage = function ServicePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ServicePage.prototype, Page.prototype);\nServicePage.prototype.constructor = ServicePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ServiceInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServicePage#\n *\n * @param {ServicePayload} payload - Payload response from the API\n *\n * @returns ServiceInstance\n */\n/* jshint ignore:end */\nServicePage.prototype.getInstance = function getInstance(payload) {\n  return new ServiceInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServicePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServicePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nServicePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceInstance\n *\n * @property {string} sid - Unique 34 character ID of the Service.\n * @property {string} accountSid -\n *          Unique 34 character ID of the Account that created this Service.\n * @property {string} friendlyName -\n *          A human readable descriptive text for this resource, up to 64 characters.\n * @property {Date} dateCreated - The date that this resource was created.\n * @property {Date} dateUpdated - The date that this resource was last updated.\n * @property {string} inboundRequestUrl -\n *          The URL Twilio will make a webhook request to when a message is received by any phone number or short code in your Service.\n * @property {string} inboundMethod -\n *          The HTTP method Twilio will use when making requests to the Inbound Request URL.\n * @property {string} fallbackUrl -\n *          The URL that Twilio will request if an error occurs when retrieving or executing the TwiML from your Inbound Request URL.\n * @property {string} fallbackMethod -\n *          The HTTP method Twilio will use when making requests to the Fallback URL.\n * @property {string} statusCallback -\n *          The URL Twilio will make a webhook request to when passing you status updates about the delivery of your messages.\n * @property {boolean} stickySender -\n *          Configuration to enable or disable Sticky Sender on your Service instance.\n * @property {boolean} mmsConverter -\n *          Configuration to enable or disable MMS Converter for messages sent through your Service instance.\n * @property {boolean} smartEncoding -\n *          Configuration to enable or disable Smart Encoding for messages sent through your Service instance.\n * @property {service.scan_message_content} scanMessageContent -\n *          The scan_message_content\n * @property {boolean} fallbackToLongCode -\n *          Configuration to enable or disable Fallback to Long Code for messages sent through your Service instance.\n * @property {boolean} areaCodeGeomatch -\n *          Configuration to enable or disable Area Code Geomatch on your Service Instance.\n * @property {boolean} synchronousValidation - The synchronous_validation\n * @property {number} validityPeriod -\n *          The number of seconds all messages sent from your Service are valid for.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {V1} version - Version of the resource\n * @param {ServicePayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceInstance = function ServiceInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.inboundRequestUrl = payload.inbound_request_url; // jshint ignore:line\n  this.inboundMethod = payload.inbound_method; // jshint ignore:line\n  this.fallbackUrl = payload.fallback_url; // jshint ignore:line\n  this.fallbackMethod = payload.fallback_method; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.stickySender = payload.sticky_sender; // jshint ignore:line\n  this.mmsConverter = payload.mms_converter; // jshint ignore:line\n  this.smartEncoding = payload.smart_encoding; // jshint ignore:line\n  this.scanMessageContent = payload.scan_message_content; // jshint ignore:line\n  this.fallbackToLongCode = payload.fallback_to_long_code; // jshint ignore:line\n  this.areaCodeGeomatch = payload.area_code_geomatch; // jshint ignore:line\n  this.synchronousValidation = payload.synchronous_validation; // jshint ignore:line\n  this.validityPeriod = deserialize.integer(payload.validity_period); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(ServiceInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new ServiceContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.inboundRequestUrl] - The inbound_request_url\n * @param {string} [opts.inboundMethod] - The inbound_method\n * @param {string} [opts.fallbackUrl] - The fallback_url\n * @param {string} [opts.fallbackMethod] - The fallback_method\n * @param {string} [opts.statusCallback] - The status_callback\n * @param {boolean} [opts.stickySender] - The sticky_sender\n * @param {boolean} [opts.mmsConverter] - The mms_converter\n * @param {boolean} [opts.smartEncoding] - The smart_encoding\n * @param {service.scan_message_content} [opts.scanMessageContent] -\n *          The scan_message_content\n * @param {boolean} [opts.fallbackToLongCode] - The fallback_to_long_code\n * @param {boolean} [opts.areaCodeGeomatch] - The area_code_geomatch\n * @param {number} [opts.validityPeriod] - The validity_period\n * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the phoneNumbers\n *\n * @function phoneNumbers\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.PhoneNumberList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.phoneNumbers = function phoneNumbers() {\n  return this._proxy.phoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.ShortCodeList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the alphaSenders\n *\n * @function alphaSenders\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns {Twilio.Messaging.V1.ServiceContext.AlphaSenderList}\n */\n/* jshint ignore:end */\nServiceInstance.prototype.alphaSenders = function alphaSenders() {\n  return this._proxy.alphaSenders;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nServiceInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ServiceContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext\n *\n * @property {Twilio.Messaging.V1.ServiceContext.PhoneNumberList} phoneNumbers -\n *          phoneNumbers resource\n * @property {Twilio.Messaging.V1.ServiceContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Messaging.V1.ServiceContext.AlphaSenderList} alphaSenders -\n *          alphaSenders resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The sid\n */\n/* jshint ignore:end */\nServiceContext = function ServiceContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/Services/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._phoneNumbers = undefined;\n  this._shortCodes = undefined;\n  this._alphaSenders = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a ServiceInstance\n *\n * @function update\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {string} [opts.inboundRequestUrl] - The inbound_request_url\n * @param {string} [opts.inboundMethod] - The inbound_method\n * @param {string} [opts.fallbackUrl] - The fallback_url\n * @param {string} [opts.fallbackMethod] - The fallback_method\n * @param {string} [opts.statusCallback] - The status_callback\n * @param {boolean} [opts.stickySender] - The sticky_sender\n * @param {boolean} [opts.mmsConverter] - The mms_converter\n * @param {boolean} [opts.smartEncoding] - The smart_encoding\n * @param {service.scan_message_content} [opts.scanMessageContent] -\n *          The scan_message_content\n * @param {boolean} [opts.fallbackToLongCode] - The fallback_to_long_code\n * @param {boolean} [opts.areaCodeGeomatch] - The area_code_geomatch\n * @param {number} [opts.validityPeriod] - The validity_period\n * @param {boolean} [opts.synchronousValidation] - The synchronous_validation\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'InboundRequestUrl': _.get(opts, 'inboundRequestUrl'),\n    'InboundMethod': _.get(opts, 'inboundMethod'),\n    'FallbackUrl': _.get(opts, 'fallbackUrl'),\n    'FallbackMethod': _.get(opts, 'fallbackMethod'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StickySender': serialize.bool(_.get(opts, 'stickySender')),\n    'MmsConverter': serialize.bool(_.get(opts, 'mmsConverter')),\n    'SmartEncoding': serialize.bool(_.get(opts, 'smartEncoding')),\n    'ScanMessageContent': _.get(opts, 'scanMessageContent'),\n    'FallbackToLongCode': serialize.bool(_.get(opts, 'fallbackToLongCode')),\n    'AreaCodeGeomatch': serialize.bool(_.get(opts, 'areaCodeGeomatch')),\n    'ValidityPeriod': _.get(opts, 'validityPeriod'),\n    'SynchronousValidation': serialize.bool(_.get(opts, 'synchronousValidation'))\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ServiceInstance\n *\n * @function fetch\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ServiceInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ServiceInstance\n *\n * @function remove\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ServiceInstance\n */\n/* jshint ignore:end */\nServiceContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(ServiceContext.prototype,\n  'phoneNumbers', {\n  get: function() {\n    if (!this._phoneNumbers) {\n      this._phoneNumbers = new PhoneNumberList(this._version, this._solution.sid);\n    }\n    return this._phoneNumbers;\n  }\n});\n\nObject.defineProperty(ServiceContext.prototype,\n  'shortCodes', {\n  get: function() {\n    if (!this._shortCodes) {\n      this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n    }\n    return this._shortCodes;\n  }\n});\n\nObject.defineProperty(ServiceContext.prototype,\n  'alphaSenders', {\n  get: function() {\n    if (!this._alphaSenders) {\n      this._alphaSenders = new AlphaSenderList(this._version, this._solution.sid);\n    }\n    return this._alphaSenders;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nServiceContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nServiceContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ServiceList: ServiceList,\n  ServicePage: ServicePage,\n  ServiceInstance: ServiceInstance,\n  ServiceContext: ServiceContext\n};\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArH,eAAe,CAACsE,SAAS,CAACmD,MAAM,GAAG,SAASA,MAAMA,CAAC9G,IAAI,EAAEC,QAAQ,EAAE;EACjE,OAAO,IAAI,CAAC8G,MAAM,CAACD,MAAM,CAAC9G,IAAI,EAAEC,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,eAAe,CAACsE,SAAS,CAACqD,KAAK,GAAG,SAASA,KAAKA,CAAC/G,QAAQ,EAAE;EACzD,OAAO,IAAI,CAAC8G,MAAM,CAACC,KAAK,CAAC/G,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,eAAe,CAACsE,SAAS,CAACsD,MAAM,GAAG,SAASA,MAAMA,CAAChH,QAAQ,EAAE;EAC3D,OAAO,IAAI,CAAC8G,MAAM,CAACE,MAAM,CAAChH,QAAQ,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,eAAe,CAACsE,SAAS,CAACuD,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;EAC/D,OAAO,IAAI,CAACH,MAAM,CAACG,YAAY;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA7H,eAAe,CAACsE,SAAS,CAACwD,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC3D,OAAO,IAAI,CAACJ,MAAM,CAACI,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9H,eAAe,CAACsE,SAAS,CAACyD,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;EAC/D,OAAO,IAAI,CAACL,MAAM,CAACK,YAAY;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA/H,eAAe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"},"metadata":{},"sourceType":"script","externalDependencies":[]}