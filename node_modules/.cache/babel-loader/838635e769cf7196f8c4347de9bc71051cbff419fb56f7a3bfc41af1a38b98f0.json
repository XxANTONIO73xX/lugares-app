{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar MessageInteractionList = require('./participant/messageInteraction').MessageInteractionList;\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar ParticipantList;\nvar ParticipantPage;\nvar ParticipantInstance;\nvar ParticipantContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList\n *\n * @param {Twilio.Proxy.V1} version - Version of the resource\n * @param {string} serviceSid - Service Sid.\n * @param {string} sessionSid - Session Sid.\n */\n/* jshint ignore:end */\nParticipantList = function ParticipantList(version, serviceSid, sessionSid) {\n  /* jshint ignore:start */\n  /**\n   * @function participants\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext}\n   */\n  /* jshint ignore:end */\n  function ParticipantListInstance(sid) {\n    return ParticipantListInstance.get(sid);\n  }\n  ParticipantListInstance._version = version;\n  // Path Solution\n  ParticipantListInstance._solution = {\n    serviceSid: serviceSid,\n    sessionSid: sessionSid\n  };\n  ParticipantListInstance._uri = _.template('/Services/<%= serviceSid %>/Sessions/<%= sessionSid %>/Participants' // jshint ignore:line\n  )(ParticipantListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams ParticipantInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ParticipantInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ParticipantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ParticipantPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ParticipantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ParticipantPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a ParticipantInstance\n   *\n   * @function create\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.identifier - The phone number of this Participant.\n   * @param {string} [opts.friendlyName] -\n   *          A human-readable description of this resource.\n   * @param {string} [opts.proxyIdentifier] -\n   *          The proxy phone number to use for this Participant.\n   * @param {string} [opts.proxyIdentifierSid] - The proxy_identifier_sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ParticipantInstance\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.identifier)) {\n      throw new Error('Required parameter \"opts.identifier\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identifier': _.get(opts, 'identifier'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'ProxyIdentifier': _.get(opts, 'proxyIdentifier'),\n      'ProxyIdentifierSid': _.get(opts, 'proxyIdentifierSid')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ParticipantInstance(this._version, payload, this._solution.serviceSid, this._solution.sessionSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a participant\n   *\n   * @function get\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Participant.\n   *\n   * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext}\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.get = function get(sid) {\n    return new ParticipantContext(this._version, this._solution.serviceSid, this._solution.sessionSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ParticipantListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ParticipantListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ParticipantSolution} solution - Path solution\n *\n * @returns ParticipantPage\n */\n/* jshint ignore:end */\nParticipantPage = function ParticipantPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ParticipantPage.prototype, Page.prototype);\nParticipantPage.prototype.constructor = ParticipantPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ParticipantInstance\n *\n * @function getInstance\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage#\n *\n * @param {ParticipantPayload} payload - Payload response from the API\n *\n * @returns ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantPage.prototype.getInstance = function getInstance(payload) {\n  return new ParticipantInstance(this._version, payload, this._solution.serviceSid, this._solution.sessionSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nParticipantPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance\n *\n * @property {string} sid - A string that uniquely identifies this Participant.\n * @property {string} sessionSid - Session Sid.\n * @property {string} serviceSid - Service Sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} friendlyName - A human-readable description of this resource.\n * @property {string} identifier - The phone number of this Participant.\n * @property {string} proxyIdentifier - Proxy Identifier.\n * @property {string} proxyIdentifierSid - Proxy Identifier Sid.\n * @property {Date} dateDeleted - The date this Participant was removed\n * @property {Date} dateCreated - The date this Participant was created\n * @property {Date} dateUpdated - The date this Participant was last updated\n * @property {string} url - The URL of this resource.\n * @property {string} links - Nested resource URLs.\n *\n * @param {V1} version - Version of the resource\n * @param {ParticipantPayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {sid} sessionSid - Session Sid.\n * @param {sid} sid - A string that uniquely identifies this Participant.\n */\n/* jshint ignore:end */\nParticipantInstance = function ParticipantInstance(version, payload, serviceSid, sessionSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.sessionSid = payload.session_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identifier = payload.identifier; // jshint ignore:line\n  this.proxyIdentifier = payload.proxy_identifier; // jshint ignore:line\n  this.proxyIdentifierSid = payload.proxy_identifier_sid; // jshint ignore:line\n  this.dateDeleted = deserialize.iso8601DateTime(payload.date_deleted); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    sessionSid: sessionSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(ParticipantInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ParticipantContext(this._version, this._solution.serviceSid, this._solution.sessionSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ParticipantInstance\n *\n * @function fetch\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ParticipantInstance\n *\n * @function remove\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the messageInteractions\n *\n * @function messageInteractions\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext.MessageInteractionList}\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.messageInteractions = function messageInteractions() {\n  return this._proxy.messageInteractions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nParticipantInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext\n *\n * @property {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext.MessageInteractionList} messageInteractions -\n *          messageInteractions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {sid} sessionSid - Session Sid.\n * @param {sid} sid - A string that uniquely identifies this Participant.\n */\n/* jshint ignore:end */\nParticipantContext = function ParticipantContext(version, serviceSid, sessionSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    sessionSid: sessionSid,\n    sid: sid\n  };\n  this._uri = _.template('/Services/<%= serviceSid %>/Sessions/<%= sessionSid %>/Participants/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._messageInteractions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ParticipantInstance\n *\n * @function fetch\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ParticipantInstance(this._version, payload, this._solution.serviceSid, this._solution.sessionSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ParticipantInstance\n *\n * @function remove\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(ParticipantContext.prototype, 'messageInteractions', {\n  get: function () {\n    if (!this._messageInteractions) {\n      this._messageInteractions = new MessageInteractionList(this._version, this._solution.serviceSid, this._solution.sessionSid, this._solution.sid);\n    }\n    return this._messageInteractions;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nParticipantContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ParticipantList: ParticipantList,\n  ParticipantPage: ParticipantPage,\n  ParticipantInstance: ParticipantInstance,\n  ParticipantContext: ParticipantContext\n};","map":{"version":3,"names":["Q","require","_","util","MessageInteractionList","Page","deserialize","values","ParticipantList","ParticipantPage","ParticipantInstance","ParticipantContext","version","serviceSid","sessionSid","ParticipantListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","identifier","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","session_sid","service_sid","accountSid","account_sid","friendlyName","friendly_name","proxyIdentifier","proxy_identifier","proxyIdentifierSid","proxy_identifier_sid","dateDeleted","iso8601DateTime","date_deleted","dateCreated","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","remove","messageInteractions","_messageInteractions","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/proxy/v1/service/session/participant.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar MessageInteractionList = require(\n    './participant/messageInteraction').MessageInteractionList;\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar ParticipantList;\nvar ParticipantPage;\nvar ParticipantInstance;\nvar ParticipantContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList\n *\n * @param {Twilio.Proxy.V1} version - Version of the resource\n * @param {string} serviceSid - Service Sid.\n * @param {string} sessionSid - Session Sid.\n */\n/* jshint ignore:end */\nParticipantList = function ParticipantList(version, serviceSid, sessionSid) {\n  /* jshint ignore:start */\n  /**\n   * @function participants\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext}\n   */\n  /* jshint ignore:end */\n  function ParticipantListInstance(sid) {\n    return ParticipantListInstance.get(sid);\n  }\n\n  ParticipantListInstance._version = version;\n  // Path Solution\n  ParticipantListInstance._solution = {serviceSid: serviceSid, sessionSid: sessionSid};\n  ParticipantListInstance._uri = _.template(\n    '/Services/<%= serviceSid %>/Sessions/<%= sessionSid %>/Participants' // jshint ignore:line\n  )(ParticipantListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams ParticipantInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ParticipantInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ParticipantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ParticipantPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ParticipantInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ParticipantPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a ParticipantInstance\n   *\n   * @function create\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.identifier - The phone number of this Participant.\n   * @param {string} [opts.friendlyName] -\n   *          A human-readable description of this resource.\n   * @param {string} [opts.proxyIdentifier] -\n   *          The proxy phone number to use for this Participant.\n   * @param {string} [opts.proxyIdentifierSid] - The proxy_identifier_sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ParticipantInstance\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.identifier)) {\n      throw new Error('Required parameter \"opts.identifier\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identifier': _.get(opts, 'identifier'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'ProxyIdentifier': _.get(opts, 'proxyIdentifier'),\n      'ProxyIdentifierSid': _.get(opts, 'proxyIdentifierSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ParticipantInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.sessionSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a participant\n   *\n   * @function get\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @param {string} sid - A string that uniquely identifies this Participant.\n   *\n   * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext}\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.get = function get(sid) {\n    return new ParticipantContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.sessionSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ParticipantListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ParticipantListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ParticipantListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ParticipantSolution} solution - Path solution\n *\n * @returns ParticipantPage\n */\n/* jshint ignore:end */\nParticipantPage = function ParticipantPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ParticipantPage.prototype, Page.prototype);\nParticipantPage.prototype.constructor = ParticipantPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ParticipantInstance\n *\n * @function getInstance\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage#\n *\n * @param {ParticipantPayload} payload - Payload response from the API\n *\n * @returns ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantPage.prototype.getInstance = function getInstance(payload) {\n  return new ParticipantInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.sessionSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nParticipantPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance\n *\n * @property {string} sid - A string that uniquely identifies this Participant.\n * @property {string} sessionSid - Session Sid.\n * @property {string} serviceSid - Service Sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} friendlyName - A human-readable description of this resource.\n * @property {string} identifier - The phone number of this Participant.\n * @property {string} proxyIdentifier - Proxy Identifier.\n * @property {string} proxyIdentifierSid - Proxy Identifier Sid.\n * @property {Date} dateDeleted - The date this Participant was removed\n * @property {Date} dateCreated - The date this Participant was created\n * @property {Date} dateUpdated - The date this Participant was last updated\n * @property {string} url - The URL of this resource.\n * @property {string} links - Nested resource URLs.\n *\n * @param {V1} version - Version of the resource\n * @param {ParticipantPayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {sid} sessionSid - Session Sid.\n * @param {sid} sid - A string that uniquely identifies this Participant.\n */\n/* jshint ignore:end */\nParticipantInstance = function ParticipantInstance(version, payload, serviceSid,\n                                                    sessionSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.sessionSid = payload.session_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identifier = payload.identifier; // jshint ignore:line\n  this.proxyIdentifier = payload.proxy_identifier; // jshint ignore:line\n  this.proxyIdentifierSid = payload.proxy_identifier_sid; // jshint ignore:line\n  this.dateDeleted = deserialize.iso8601DateTime(payload.date_deleted); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, sessionSid: sessionSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(ParticipantInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new ParticipantContext(\n        this._version,\n        this._solution.serviceSid,\n        this._solution.sessionSid,\n        this._solution.sid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ParticipantInstance\n *\n * @function fetch\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ParticipantInstance\n *\n * @function remove\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the messageInteractions\n *\n * @function messageInteractions\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @returns {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext.MessageInteractionList}\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.messageInteractions = function\n    messageInteractions() {\n  return this._proxy.messageInteractions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nParticipantInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ParticipantContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext\n *\n * @property {Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext.MessageInteractionList} messageInteractions -\n *          messageInteractions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {sid} sessionSid - Session Sid.\n * @param {sid} sid - A string that uniquely identifies this Participant.\n */\n/* jshint ignore:end */\nParticipantContext = function ParticipantContext(version, serviceSid,\n                                                  sessionSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, sessionSid: sessionSid, sid: sid, };\n  this._uri = _.template(\n    '/Services/<%= serviceSid %>/Sessions/<%= sessionSid %>/Participants/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._messageInteractions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ParticipantInstance\n *\n * @function fetch\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ParticipantInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sessionSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ParticipantInstance\n *\n * @function remove\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ParticipantInstance\n */\n/* jshint ignore:end */\nParticipantContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(ParticipantContext.prototype,\n  'messageInteractions', {\n  get: function() {\n    if (!this._messageInteractions) {\n      this._messageInteractions = new MessageInteractionList(\n        this._version,\n        this._solution.serviceSid,\n        this._solution.sessionSid,\n        this._solution.sid\n      );\n    }\n    return this._messageInteractions;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Proxy.V1.ServiceContext.SessionContext.ParticipantContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nParticipantContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nParticipantContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ParticipantList: ParticipantList,\n  ParticipantPage: ParticipantPage,\n  ParticipantInstance: ParticipantInstance,\n  ParticipantContext: ParticipantContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}