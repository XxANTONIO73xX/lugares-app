{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar DependentHostedNumberOrderList = require('./authorizationDocument/dependentHostedNumberOrder').DependentHostedNumberOrderList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar AuthorizationDocumentList;\nvar AuthorizationDocumentPage;\nvar AuthorizationDocumentInstance;\nvar AuthorizationDocumentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nAuthorizationDocumentList = function AuthorizationDocumentList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function authorizationDocuments\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  function AuthorizationDocumentListInstance(sid) {\n    return AuthorizationDocumentListInstance.get(sid);\n  }\n  AuthorizationDocumentListInstance._version = version;\n  // Path Solution\n  AuthorizationDocumentListInstance._solution = {};\n  AuthorizationDocumentListInstance._uri = _.template('/AuthorizationDocuments' // jshint ignore:line\n  )(AuthorizationDocumentListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams AuthorizationDocumentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AuthorizationDocumentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AuthorizationDocumentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Email': _.get(opts, 'email'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AuthorizationDocumentInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a AuthorizationDocumentInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string|list} opts.hostedNumberOrderSids -\n   *          A list of HostedNumberOrder sids.\n   * @param {string} opts.addressSid - Address sid.\n   * @param {string} opts.email - Email.\n   * @param {string} opts.contactTitle -\n   *          Title of signee of this Authorization Document.\n   * @param {string} opts.contactPhoneNumber -\n   *          Authorization Document's signee's phone number.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.hostedNumberOrderSids)) {\n      throw new Error('Required parameter \"opts.hostedNumberOrderSids\" missing.');\n    }\n    if (_.isUndefined(opts.addressSid)) {\n      throw new Error('Required parameter \"opts.addressSid\" missing.');\n    }\n    if (_.isUndefined(opts.email)) {\n      throw new Error('Required parameter \"opts.email\" missing.');\n    }\n    if (_.isUndefined(opts.contactTitle)) {\n      throw new Error('Required parameter \"opts.contactTitle\" missing.');\n    }\n    if (_.isUndefined(opts.contactPhoneNumber)) {\n      throw new Error('Required parameter \"opts.contactPhoneNumber\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function (e) {\n        return e;\n      }),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'ContactTitle': _.get(opts, 'contactTitle'),\n      'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n        return e;\n      })\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a authorization_document\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} sid - AuthorizationDocument sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.get = function get(sid) {\n    return new AuthorizationDocumentContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  AuthorizationDocumentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return AuthorizationDocumentListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizationDocumentSolution} solution - Path solution\n *\n * @returns AuthorizationDocumentPage\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage = function AuthorizationDocumentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(AuthorizationDocumentPage.prototype, Page.prototype);\nAuthorizationDocumentPage.prototype.constructor = AuthorizationDocumentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AuthorizationDocumentInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @param {AuthorizationDocumentPayload} payload - Payload response from the API\n *\n * @returns AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.getInstance = function getInstance(payload) {\n  return new AuthorizationDocumentInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAuthorizationDocumentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance\n *\n * @property {string} sid - AuthorizationDocument sid.\n * @property {string} addressSid - Address sid.\n * @property {authorization_document.status} status -\n *          The Status of this AuthorizationDocument.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {Date} dateCreated - The date this AuthorizationDocument was created.\n * @property {Date} dateUpdated - The date this AuthorizationDocument was updated.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {AuthorizationDocumentPayload} payload - The instance payload\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance = function AuthorizationDocumentInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(AuthorizationDocumentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AuthorizationDocumentContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the dependentHostedNumberOrders\n *\n * @function dependentHostedNumberOrders\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList}\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.dependentHostedNumberOrders = function dependentHostedNumberOrders() {\n  return this._proxy.dependentHostedNumberOrders;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAuthorizationDocumentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentContext\n *\n * @property {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList} dependentHostedNumberOrders -\n *          dependentHostedNumberOrders resource\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext = function AuthorizationDocumentContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/AuthorizationDocuments/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._dependentHostedNumberOrders = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function (e) {\n      return e;\n    }),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n      return e;\n    }),\n    'Status': _.get(opts, 'status'),\n    'ContactTitle': _.get(opts, 'contactTitle'),\n    'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(AuthorizationDocumentContext.prototype, 'dependentHostedNumberOrders', {\n  get: function () {\n    if (!this._dependentHostedNumberOrders) {\n      this._dependentHostedNumberOrders = new DependentHostedNumberOrderList(this._version, this._solution.sid);\n    }\n    return this._dependentHostedNumberOrders;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nAuthorizationDocumentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  AuthorizationDocumentList: AuthorizationDocumentList,\n  AuthorizationDocumentPage: AuthorizationDocumentPage,\n  AuthorizationDocumentInstance: AuthorizationDocumentInstance,\n  AuthorizationDocumentContext: AuthorizationDocumentContext\n};","map":{"version":3,"names":["Q","require","_","util","DependentHostedNumberOrderList","Page","deserialize","serialize","values","AuthorizationDocumentList","AuthorizationDocumentPage","AuthorizationDocumentInstance","AuthorizationDocumentContext","version","AuthorizationDocumentListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","hostedNumberOrderSids","addressSid","email","contactTitle","contactPhoneNumber","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","address_sid","status","ccEmails","cc_emails","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","dependentHostedNumberOrders","_dependentHostedNumberOrders","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/hosted_numbers/authorizationDocument.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar DependentHostedNumberOrderList = require(\n    './authorizationDocument/dependentHostedNumberOrder').DependentHostedNumberOrderList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar AuthorizationDocumentList;\nvar AuthorizationDocumentPage;\nvar AuthorizationDocumentInstance;\nvar AuthorizationDocumentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nAuthorizationDocumentList = function AuthorizationDocumentList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function authorizationDocuments\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  function AuthorizationDocumentListInstance(sid) {\n    return AuthorizationDocumentListInstance.get(sid);\n  }\n\n  AuthorizationDocumentListInstance._version = version;\n  // Path Solution\n  AuthorizationDocumentListInstance._solution = {};\n  AuthorizationDocumentListInstance._uri = _.template(\n    '/AuthorizationDocuments' // jshint ignore:line\n  )(AuthorizationDocumentListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams AuthorizationDocumentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AuthorizationDocumentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AuthorizationDocumentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Email': _.get(opts, 'email'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AuthorizationDocumentInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.getPage = function getPage(targetUrl,\n      callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a AuthorizationDocumentInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string|list} opts.hostedNumberOrderSids -\n   *          A list of HostedNumberOrder sids.\n   * @param {string} opts.addressSid - Address sid.\n   * @param {string} opts.email - Email.\n   * @param {string} opts.contactTitle -\n   *          Title of signee of this Authorization Document.\n   * @param {string} opts.contactPhoneNumber -\n   *          Authorization Document's signee's phone number.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.hostedNumberOrderSids)) {\n      throw new Error('Required parameter \"opts.hostedNumberOrderSids\" missing.');\n    }\n    if (_.isUndefined(opts.addressSid)) {\n      throw new Error('Required parameter \"opts.addressSid\" missing.');\n    }\n    if (_.isUndefined(opts.email)) {\n      throw new Error('Required parameter \"opts.email\" missing.');\n    }\n    if (_.isUndefined(opts.contactTitle)) {\n      throw new Error('Required parameter \"opts.contactTitle\" missing.');\n    }\n    if (_.isUndefined(opts.contactPhoneNumber)) {\n      throw new Error('Required parameter \"opts.contactPhoneNumber\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function(e) { return e; }),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'ContactTitle': _.get(opts, 'contactTitle'),\n      'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; })\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a authorization_document\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} sid - AuthorizationDocument sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.get = function get(sid) {\n    return new AuthorizationDocumentContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthorizationDocumentListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthorizationDocumentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizationDocumentSolution} solution - Path solution\n *\n * @returns AuthorizationDocumentPage\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage = function AuthorizationDocumentPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AuthorizationDocumentPage.prototype, Page.prototype);\nAuthorizationDocumentPage.prototype.constructor = AuthorizationDocumentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AuthorizationDocumentInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @param {AuthorizationDocumentPayload} payload - Payload response from the API\n *\n * @returns AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.getInstance = function getInstance(payload)\n    {\n  return new AuthorizationDocumentInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizationDocumentPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance\n *\n * @property {string} sid - AuthorizationDocument sid.\n * @property {string} addressSid - Address sid.\n * @property {authorization_document.status} status -\n *          The Status of this AuthorizationDocument.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {Date} dateCreated - The date this AuthorizationDocument was created.\n * @property {Date} dateUpdated - The date this AuthorizationDocument was updated.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {AuthorizationDocumentPayload} payload - The instance payload\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance = function AuthorizationDocumentInstance(version,\n    payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(AuthorizationDocumentInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new AuthorizationDocumentContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.update = function update(opts, callback)\n    {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the dependentHostedNumberOrders\n *\n * @function dependentHostedNumberOrders\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList}\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.dependentHostedNumberOrders = function\n    dependentHostedNumberOrders() {\n  return this._proxy.dependentHostedNumberOrders;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizationDocumentInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentContext\n *\n * @property {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList} dependentHostedNumberOrders -\n *          dependentHostedNumberOrders resource\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext = function AuthorizationDocumentContext(version,\n    sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/AuthorizationDocuments/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._dependentHostedNumberOrders = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.update = function update(opts, callback)\n    {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function(e) { return e; }),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n    'Status': _.get(opts, 'status'),\n    'ContactTitle': _.get(opts, 'contactTitle'),\n    'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AuthorizationDocumentContext.prototype,\n  'dependentHostedNumberOrders', {\n  get: function() {\n    if (!this._dependentHostedNumberOrders) {\n      this._dependentHostedNumberOrders = new DependentHostedNumberOrderList(\n        this._version,\n        this._solution.sid\n      );\n    }\n    return this._dependentHostedNumberOrders;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAuthorizationDocumentContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AuthorizationDocumentList: AuthorizationDocumentList,\n  AuthorizationDocumentPage: AuthorizationDocumentPage,\n  AuthorizationDocumentInstance: AuthorizationDocumentInstance,\n  AuthorizationDocumentContext: AuthorizationDocumentContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}