{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar RatePlanList;\nvar RatePlanPage;\nvar RatePlanInstance;\nvar RatePlanContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanList\n *\n * @param {Twilio.Preview.Wireless} version - Version of the resource\n */\n/* jshint ignore:end */\nRatePlanList = function RatePlanList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function ratePlans\n   * @memberof Twilio.Preview.Wireless#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Wireless.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  function RatePlanListInstance(sid) {\n    return RatePlanListInstance.get(sid);\n  }\n  RatePlanListInstance._version = version;\n  // Path Solution\n  RatePlanListInstance._solution = {};\n  RatePlanListInstance._uri = _.template('/RatePlans' // jshint ignore:line\n  )(RatePlanListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams RatePlanInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists RatePlanInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a RatePlanInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] - The unique_name\n   * @param {string} [opts.friendlyName] - The friendly_name\n   * @param {boolean} [opts.dataEnabled] - The data_enabled\n   * @param {number} [opts.dataLimit] - The data_limit\n   * @param {string} [opts.dataMetering] - The data_metering\n   * @param {boolean} [opts.messagingEnabled] - The messaging_enabled\n   * @param {boolean} [opts.voiceEnabled] - The voice_enabled\n   * @param {boolean} [opts.commandsEnabled] - The commands_enabled\n   * @param {boolean} [opts.nationalRoamingEnabled] - The national_roaming_enabled\n   * @param {string|list} [opts.internationalRoaming] - The international_roaming\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RatePlanInstance\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'DataEnabled': serialize.bool(_.get(opts, 'dataEnabled')),\n      'DataLimit': _.get(opts, 'dataLimit'),\n      'DataMetering': _.get(opts, 'dataMetering'),\n      'MessagingEnabled': serialize.bool(_.get(opts, 'messagingEnabled')),\n      'VoiceEnabled': serialize.bool(_.get(opts, 'voiceEnabled')),\n      'CommandsEnabled': serialize.bool(_.get(opts, 'commandsEnabled')),\n      'NationalRoamingEnabled': serialize.bool(_.get(opts, 'nationalRoamingEnabled')),\n      'InternationalRoaming': serialize.map(_.get(opts, 'internationalRoaming'), function (e) {\n        return e;\n      })\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a rate_plan\n   *\n   * @function get\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Preview.Wireless.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.get = function get(sid) {\n    return new RatePlanContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  RatePlanListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return RatePlanListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanPage\n *\n * @param {Wireless} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RatePlanSolution} solution - Path solution\n *\n * @returns RatePlanPage\n */\n/* jshint ignore:end */\nRatePlanPage = function RatePlanPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(RatePlanPage.prototype, Page.prototype);\nRatePlanPage.prototype.constructor = RatePlanPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RatePlanInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Wireless.RatePlanPage#\n *\n * @param {RatePlanPayload} payload - Payload response from the API\n *\n * @returns RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.getInstance = function getInstance(payload) {\n  return new RatePlanInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nRatePlanPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanInstance\n *\n * @property {string} sid - The sid\n * @property {string} uniqueName - The unique_name\n * @property {string} accountSid - The account_sid\n * @property {string} friendlyName - The friendly_name\n * @property {boolean} dataEnabled - The data_enabled\n * @property {string} dataMetering - The data_metering\n * @property {number} dataLimit - The data_limit\n * @property {boolean} messagingEnabled - The messaging_enabled\n * @property {boolean} voiceEnabled - The voice_enabled\n * @property {boolean} nationalRoamingEnabled - The national_roaming_enabled\n * @property {string} internationalRoaming - The international_roaming\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} url - The url\n *\n * @param {Wireless} version - Version of the resource\n * @param {RatePlanPayload} payload - The instance payload\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nRatePlanInstance = function RatePlanInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dataEnabled = payload.data_enabled; // jshint ignore:line\n  this.dataMetering = payload.data_metering; // jshint ignore:line\n  this.dataLimit = deserialize.integer(payload.data_limit); // jshint ignore:line\n  this.messagingEnabled = payload.messaging_enabled; // jshint ignore:line\n  this.voiceEnabled = payload.voice_enabled; // jshint ignore:line\n  this.nationalRoamingEnabled = payload.national_roaming_enabled; // jshint ignore:line\n  this.internationalRoaming = payload.international_roaming; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(RatePlanInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RatePlanContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] - The unique_name\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nRatePlanInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanContext\n *\n * @param {Wireless} version - Version of the resource\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nRatePlanContext = function RatePlanContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/RatePlans/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] - The unique_name\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nRatePlanContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  RatePlanList: RatePlanList,\n  RatePlanPage: RatePlanPage,\n  RatePlanInstance: RatePlanInstance,\n  RatePlanContext: RatePlanContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","RatePlanList","RatePlanPage","RatePlanInstance","RatePlanContext","version","RatePlanListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","bool","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","uniqueName","unique_name","accountSid","account_sid","friendlyName","friendly_name","dataEnabled","data_enabled","dataMetering","data_metering","dataLimit","integer","data_limit","messagingEnabled","messaging_enabled","voiceEnabled","voice_enabled","nationalRoamingEnabled","national_roaming_enabled","internationalRoaming","international_roaming","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/wireless/ratePlan.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar RatePlanList;\nvar RatePlanPage;\nvar RatePlanInstance;\nvar RatePlanContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanList\n *\n * @param {Twilio.Preview.Wireless} version - Version of the resource\n */\n/* jshint ignore:end */\nRatePlanList = function RatePlanList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function ratePlans\n   * @memberof Twilio.Preview.Wireless#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Wireless.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  function RatePlanListInstance(sid) {\n    return RatePlanListInstance.get(sid);\n  }\n\n  RatePlanListInstance._version = version;\n  // Path Solution\n  RatePlanListInstance._solution = {};\n  RatePlanListInstance._uri = _.template(\n    '/RatePlans' // jshint ignore:line\n  )(RatePlanListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams RatePlanInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists RatePlanInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of RatePlanInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a RatePlanInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.uniqueName] - The unique_name\n   * @param {string} [opts.friendlyName] - The friendly_name\n   * @param {boolean} [opts.dataEnabled] - The data_enabled\n   * @param {number} [opts.dataLimit] - The data_limit\n   * @param {string} [opts.dataMetering] - The data_metering\n   * @param {boolean} [opts.messagingEnabled] - The messaging_enabled\n   * @param {boolean} [opts.voiceEnabled] - The voice_enabled\n   * @param {boolean} [opts.commandsEnabled] - The commands_enabled\n   * @param {boolean} [opts.nationalRoamingEnabled] - The national_roaming_enabled\n   * @param {string|list} [opts.internationalRoaming] - The international_roaming\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RatePlanInstance\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'DataEnabled': serialize.bool(_.get(opts, 'dataEnabled')),\n      'DataLimit': _.get(opts, 'dataLimit'),\n      'DataMetering': _.get(opts, 'dataMetering'),\n      'MessagingEnabled': serialize.bool(_.get(opts, 'messagingEnabled')),\n      'VoiceEnabled': serialize.bool(_.get(opts, 'voiceEnabled')),\n      'CommandsEnabled': serialize.bool(_.get(opts, 'commandsEnabled')),\n      'NationalRoamingEnabled': serialize.bool(_.get(opts, 'nationalRoamingEnabled')),\n      'InternationalRoaming': serialize.map(_.get(opts, 'internationalRoaming'), function(e) { return e; })\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a rate_plan\n   *\n   * @function get\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @param {string} sid - The sid\n   *\n   * @returns {Twilio.Preview.Wireless.RatePlanContext}\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.get = function get(sid) {\n    return new RatePlanContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Wireless.RatePlanList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RatePlanListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RatePlanListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RatePlanListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanPage\n *\n * @param {Wireless} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RatePlanSolution} solution - Path solution\n *\n * @returns RatePlanPage\n */\n/* jshint ignore:end */\nRatePlanPage = function RatePlanPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RatePlanPage.prototype, Page.prototype);\nRatePlanPage.prototype.constructor = RatePlanPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RatePlanInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Wireless.RatePlanPage#\n *\n * @param {RatePlanPayload} payload - Payload response from the API\n *\n * @returns RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.getInstance = function getInstance(payload) {\n  return new RatePlanInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRatePlanPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanInstance\n *\n * @property {string} sid - The sid\n * @property {string} uniqueName - The unique_name\n * @property {string} accountSid - The account_sid\n * @property {string} friendlyName - The friendly_name\n * @property {boolean} dataEnabled - The data_enabled\n * @property {string} dataMetering - The data_metering\n * @property {number} dataLimit - The data_limit\n * @property {boolean} messagingEnabled - The messaging_enabled\n * @property {boolean} voiceEnabled - The voice_enabled\n * @property {boolean} nationalRoamingEnabled - The national_roaming_enabled\n * @property {string} internationalRoaming - The international_roaming\n * @property {Date} dateCreated - The date_created\n * @property {Date} dateUpdated - The date_updated\n * @property {string} url - The url\n *\n * @param {Wireless} version - Version of the resource\n * @param {RatePlanPayload} payload - The instance payload\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nRatePlanInstance = function RatePlanInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.dataEnabled = payload.data_enabled; // jshint ignore:line\n  this.dataMetering = payload.data_metering; // jshint ignore:line\n  this.dataLimit = deserialize.integer(payload.data_limit); // jshint ignore:line\n  this.messagingEnabled = payload.messaging_enabled; // jshint ignore:line\n  this.voiceEnabled = payload.voice_enabled; // jshint ignore:line\n  this.nationalRoamingEnabled = payload.national_roaming_enabled; // jshint ignore:line\n  this.internationalRoaming = payload.international_roaming; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(RatePlanInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new RatePlanContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] - The unique_name\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRatePlanInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RatePlanContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.RatePlanContext\n *\n * @param {Wireless} version - Version of the resource\n * @param {sid_like} sid - The sid\n */\n/* jshint ignore:end */\nRatePlanContext = function RatePlanContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/RatePlans/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RatePlanInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a RatePlanInstance\n *\n * @function update\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] - The unique_name\n * @param {string} [opts.friendlyName] - The friendly_name\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RatePlanInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a RatePlanInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RatePlanInstance\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.RatePlanContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRatePlanContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRatePlanContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RatePlanList: RatePlanList,\n  RatePlanPage: RatePlanPage,\n  RatePlanInstance: RatePlanInstance,\n  RatePlanContext: RatePlanContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}