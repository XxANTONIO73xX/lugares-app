{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar http = require('request');\nvar Q = require('q');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\nvar RequestClient = function () {};\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n */\nRequestClient.prototype.request = function (opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n  if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n  var options = {\n    timeout: opts.timeout || 30000,\n    followRedirect: opts.allowRedirects || false,\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    forever: opts.forever === false ? false : true\n  };\n  if (!_.isNull(opts.data)) {\n    options.formData = opts.data;\n  }\n  if (!_.isNull(opts.params)) {\n    options.qs = opts.params;\n    options.useQuerystring = true;\n  }\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.qs,\n    data: options.formData,\n    headers: options.headers\n  };\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n  http(options, function (error, response) {\n    if (error) {\n      _this.lastResponse = undefined;\n      deferred.reject(error);\n    } else {\n      _this.lastResponse = new Response(response.statusCode, response.body);\n      deferred.resolve({\n        statusCode: response.statusCode,\n        body: response.body\n      });\n    }\n  });\n  return deferred.promise;\n};\nmodule.exports = RequestClient;","map":{"version":3,"names":["_","require","http","Q","Response","Request","RequestClient","prototype","request","opts","method","Error","uri","deferred","defer","headers","Connection","connection","username","password","b64Auth","Buffer","from","toString","Authorization","options","timeout","followRedirect","allowRedirects","url","forever","isNull","data","formData","params","qs","useQuerystring","optionsRequest","auth","_this","lastResponse","undefined","lastRequest","error","response","reject","statusCode","body","resolve","promise","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/base/RequestClient.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar http = require('request');\nvar Q = require('q');\nvar Response = require('../http/response');\nvar Request = require('../http/request');\n\nvar RequestClient = function() {};\n\n/**\n * Make http request\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout=30000] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n * @param {boolean} [opts.forever] - Set to true to use the forever-agent\n */\nRequestClient.prototype.request = function(opts) {\n  opts = opts || {};\n  if (!opts.method) {\n    throw new Error('http method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var deferred = Q.defer();\n  var headers = opts.headers || {};\n\n  if (!headers.Connection && !headers.connection) {\n    headers.Connection = 'close';\n  }\n\n  if (opts.username && opts.password) {\n    var b64Auth = Buffer.from(opts.username + ':' + opts.password).toString('base64');\n    headers.Authorization = 'Basic ' + b64Auth;\n  }\n\n  var options = {\n    timeout: opts.timeout || 30000,\n    followRedirect: opts.allowRedirects || false,\n    url: opts.uri,\n    method: opts.method,\n    headers: opts.headers,\n    forever: opts.forever === false ? false : true,\n  };\n\n  if (!_.isNull(opts.data)) {\n    options.formData = opts.data;\n  }\n\n  if (!_.isNull(opts.params)) {\n    options.qs = opts.params;\n    options.useQuerystring = true;\n  }\n\n  var optionsRequest = {\n    method: options.method,\n    url: options.url,\n    auth: b64Auth || null,\n    params: options.qs,\n    data: options.formData,\n    headers: options.headers,\n  };\n\n  var _this = this;\n  this.lastResponse = undefined;\n  this.lastRequest = new Request(optionsRequest);\n\n  http(options, function(error, response) {\n    if (error) {\n      _this.lastResponse = undefined;\n      deferred.reject(error);\n    } else {\n      _this.lastResponse = new Response(response.statusCode, response.body);\n      deferred.resolve({\n        statusCode: response.statusCode,\n        body: response.body,\n      });\n    }\n  });\n\n  return deferred.promise;\n};\n\nmodule.exports = RequestClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}