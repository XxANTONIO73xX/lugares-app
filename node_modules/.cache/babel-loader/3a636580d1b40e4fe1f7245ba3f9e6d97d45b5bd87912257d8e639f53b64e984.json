{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationList\n *\n * @param {Twilio.FlexApi.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function configuration\n   * @memberof Twilio.FlexApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n  ConfigurationListInstance._version = version;\n  // Path Solution\n  ConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ConfigurationListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n/* jshint ignore:end */\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ConfigurationPage.prototype, Page.prototype);\nConfigurationPage.prototype.constructor = ConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationInstance\n *\n * @property {string} accountSid -\n *          The unique id of the Account responsible for this configuration\n * @property {Date} dateCreated -\n *          The time the Configuration was created, given as GMT in ISO 8601 format\n * @property {Date} dateUpdated -\n *          The time the Configuration was last updated, given as GMT in ISO 8601 format\n * @property {string} attributes - Attiributes\n * @property {configuration.status} status - Status of the Flex onboarding\n * @property {string} taskrouterWorkspaceSid -\n *          The unique ID of the TaskRouter Workspace\n * @property {string} taskrouterTargetWorkflowSid -\n *          The unique ID of the TaskRouter Target Workflow\n * @property {string} taskrouterTargetTaskqueueSid -\n *          The unique ID of the TaskRouter Target TaskQueue\n * @property {string} taskrouterTaskqueues - Array of TaskRouter TaskQueues\n * @property {string} taskrouterSkills - Skill description for TaskRouter workers\n * @property {string} taskrouterWorkerChannels -\n *          TaskRouter default channel capacities and availability for workers\n * @property {string} taskrouterWorkerAttributes - The taskrouter_worker_attributes\n * @property {string} taskrouterOfflineActivitySid -\n *          The unique ID of the offline activity\n * @property {string} runtimeDomain - Flex resources hosting URL for the main UI\n * @property {string} messagingServiceInstanceSid -\n *          Unique 34 character ID of the Messaging Service\n * @property {string} chatServiceInstanceSid -\n *          The unique id of the Chat Service this user belongs to\n * @property {string} uiLanguage - Main language of the Flex UI\n * @property {string} uiAttributes - UI Attributes\n * @property {string} uiVersion - Pinned UI version\n * @property {string} serviceVersion - Flex Service version\n * @property {boolean} callRecordingEnabled - Call recording enabled\n * @property {string} callRecordingWebhookUrl - Call recording webhook url\n * @property {boolean} crmEnabled - Flag indicating whether CRM is present for Flex\n * @property {string} crmType - CRM Type\n * @property {string} crmCallbackUrl - CRM Callback URL\n * @property {string} crmFallbackUrl - CRM Fallback URL\n * @property {string} crmAttributes - CRM Attributes\n * @property {string} publicAttributes - Public Attributes\n * @property {string} url - The URL for this resource\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.attributes = payload.attributes; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.taskrouterWorkspaceSid = payload.taskrouter_workspace_sid; // jshint ignore:line\n  this.taskrouterTargetWorkflowSid = payload.taskrouter_target_workflow_sid; // jshint ignore:line\n  this.taskrouterTargetTaskqueueSid = payload.taskrouter_target_taskqueue_sid; // jshint ignore:line\n  this.taskrouterTaskqueues = payload.taskrouter_taskqueues; // jshint ignore:line\n  this.taskrouterSkills = payload.taskrouter_skills; // jshint ignore:line\n  this.taskrouterWorkerChannels = payload.taskrouter_worker_channels; // jshint ignore:line\n  this.taskrouterWorkerAttributes = payload.taskrouter_worker_attributes; // jshint ignore:line\n  this.taskrouterOfflineActivitySid = payload.taskrouter_offline_activity_sid; // jshint ignore:line\n  this.runtimeDomain = payload.runtime_domain; // jshint ignore:line\n  this.messagingServiceInstanceSid = payload.messaging_service_instance_sid; // jshint ignore:line\n  this.chatServiceInstanceSid = payload.chat_service_instance_sid; // jshint ignore:line\n  this.uiLanguage = payload.ui_language; // jshint ignore:line\n  this.uiAttributes = payload.ui_attributes; // jshint ignore:line\n  this.uiVersion = payload.ui_version; // jshint ignore:line\n  this.serviceVersion = payload.service_version; // jshint ignore:line\n  this.callRecordingEnabled = payload.call_recording_enabled; // jshint ignore:line\n  this.callRecordingWebhookUrl = payload.call_recording_webhook_url; // jshint ignore:line\n  this.crmEnabled = payload.crm_enabled; // jshint ignore:line\n  this.crmType = payload.crm_type; // jshint ignore:line\n  this.crmCallbackUrl = payload.crm_callback_url; // jshint ignore:line\n  this.crmFallbackUrl = payload.crm_fallback_url; // jshint ignore:line\n  this.crmAttributes = payload.crm_attributes; // jshint ignore:line\n  this.publicAttributes = payload.public_attributes; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\nObject.defineProperty(ConfigurationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ConfigurationContext(this._version);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] - Pinned UI version\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.create = function create(callback) {\n  return this._proxy.create(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.update = function update(callback) {\n  return this._proxy.update(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = _.template('/Configuration' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] - Pinned UI version\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UiVersion': _.get(opts, 'uiVersion')\n  });\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.create = function create(callback) {\n  var deferred = Q.defer();\n  var data = values.of({});\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.update = function update(callback) {\n  var deferred = Q.defer();\n  var data = values.of({});\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","ConfigurationList","ConfigurationPage","ConfigurationInstance","ConfigurationContext","version","ConfigurationListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","attributes","status","taskrouterWorkspaceSid","taskrouter_workspace_sid","taskrouterTargetWorkflowSid","taskrouter_target_workflow_sid","taskrouterTargetTaskqueueSid","taskrouter_target_taskqueue_sid","taskrouterTaskqueues","taskrouter_taskqueues","taskrouterSkills","taskrouter_skills","taskrouterWorkerChannels","taskrouter_worker_channels","taskrouterWorkerAttributes","taskrouter_worker_attributes","taskrouterOfflineActivitySid","taskrouter_offline_activity_sid","runtimeDomain","runtime_domain","messagingServiceInstanceSid","messaging_service_instance_sid","chatServiceInstanceSid","chat_service_instance_sid","uiLanguage","ui_language","uiAttributes","ui_attributes","uiVersion","ui_version","serviceVersion","service_version","callRecordingEnabled","call_recording_enabled","callRecordingWebhookUrl","call_recording_webhook_url","crmEnabled","crm_enabled","crmType","crm_type","crmCallbackUrl","crm_callback_url","crmFallbackUrl","crm_fallback_url","crmAttributes","crm_attributes","publicAttributes","public_attributes","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","create","update","_uri","template","deferred","defer","data","of","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/flexApi/v1/configuration.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ConfigurationList;\nvar ConfigurationPage;\nvar ConfigurationInstance;\nvar ConfigurationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationList\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationList\n *\n * @param {Twilio.FlexApi.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationList = function ConfigurationList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function configuration\n   * @memberof Twilio.FlexApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  function ConfigurationListInstance(sid) {\n    return ConfigurationListInstance.get(sid);\n  }\n\n  ConfigurationListInstance._version = version;\n  // Path Solution\n  ConfigurationListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a configuration\n   *\n   * @function get\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns {Twilio.FlexApi.V1.ConfigurationContext}\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.get = function get() {\n    return new ConfigurationContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FlexApi.V1.ConfigurationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConfigurationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConfigurationListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConfigurationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationPage\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConfigurationSolution} solution - Path solution\n *\n * @returns ConfigurationPage\n */\n/* jshint ignore:end */\nConfigurationPage = function ConfigurationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConfigurationPage.prototype, Page.prototype);\nConfigurationPage.prototype.constructor = ConfigurationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConfigurationInstance\n *\n * @function getInstance\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @param {ConfigurationPayload} payload - Payload response from the API\n *\n * @returns ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.getInstance = function getInstance(payload) {\n  return new ConfigurationInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationInstance\n *\n * @property {string} accountSid -\n *          The unique id of the Account responsible for this configuration\n * @property {Date} dateCreated -\n *          The time the Configuration was created, given as GMT in ISO 8601 format\n * @property {Date} dateUpdated -\n *          The time the Configuration was last updated, given as GMT in ISO 8601 format\n * @property {string} attributes - Attiributes\n * @property {configuration.status} status - Status of the Flex onboarding\n * @property {string} taskrouterWorkspaceSid -\n *          The unique ID of the TaskRouter Workspace\n * @property {string} taskrouterTargetWorkflowSid -\n *          The unique ID of the TaskRouter Target Workflow\n * @property {string} taskrouterTargetTaskqueueSid -\n *          The unique ID of the TaskRouter Target TaskQueue\n * @property {string} taskrouterTaskqueues - Array of TaskRouter TaskQueues\n * @property {string} taskrouterSkills - Skill description for TaskRouter workers\n * @property {string} taskrouterWorkerChannels -\n *          TaskRouter default channel capacities and availability for workers\n * @property {string} taskrouterWorkerAttributes - The taskrouter_worker_attributes\n * @property {string} taskrouterOfflineActivitySid -\n *          The unique ID of the offline activity\n * @property {string} runtimeDomain - Flex resources hosting URL for the main UI\n * @property {string} messagingServiceInstanceSid -\n *          Unique 34 character ID of the Messaging Service\n * @property {string} chatServiceInstanceSid -\n *          The unique id of the Chat Service this user belongs to\n * @property {string} uiLanguage - Main language of the Flex UI\n * @property {string} uiAttributes - UI Attributes\n * @property {string} uiVersion - Pinned UI version\n * @property {string} serviceVersion - Flex Service version\n * @property {boolean} callRecordingEnabled - Call recording enabled\n * @property {string} callRecordingWebhookUrl - Call recording webhook url\n * @property {boolean} crmEnabled - Flag indicating whether CRM is present for Flex\n * @property {string} crmType - CRM Type\n * @property {string} crmCallbackUrl - CRM Callback URL\n * @property {string} crmFallbackUrl - CRM Fallback URL\n * @property {string} crmAttributes - CRM Attributes\n * @property {string} publicAttributes - Public Attributes\n * @property {string} url - The URL for this resource\n *\n * @param {V1} version - Version of the resource\n * @param {ConfigurationPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nConfigurationInstance = function ConfigurationInstance(version, payload) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.attributes = payload.attributes; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.taskrouterWorkspaceSid = payload.taskrouter_workspace_sid; // jshint ignore:line\n  this.taskrouterTargetWorkflowSid = payload.taskrouter_target_workflow_sid; // jshint ignore:line\n  this.taskrouterTargetTaskqueueSid = payload.taskrouter_target_taskqueue_sid; // jshint ignore:line\n  this.taskrouterTaskqueues = payload.taskrouter_taskqueues; // jshint ignore:line\n  this.taskrouterSkills = payload.taskrouter_skills; // jshint ignore:line\n  this.taskrouterWorkerChannels = payload.taskrouter_worker_channels; // jshint ignore:line\n  this.taskrouterWorkerAttributes = payload.taskrouter_worker_attributes; // jshint ignore:line\n  this.taskrouterOfflineActivitySid = payload.taskrouter_offline_activity_sid; // jshint ignore:line\n  this.runtimeDomain = payload.runtime_domain; // jshint ignore:line\n  this.messagingServiceInstanceSid = payload.messaging_service_instance_sid; // jshint ignore:line\n  this.chatServiceInstanceSid = payload.chat_service_instance_sid; // jshint ignore:line\n  this.uiLanguage = payload.ui_language; // jshint ignore:line\n  this.uiAttributes = payload.ui_attributes; // jshint ignore:line\n  this.uiVersion = payload.ui_version; // jshint ignore:line\n  this.serviceVersion = payload.service_version; // jshint ignore:line\n  this.callRecordingEnabled = payload.call_recording_enabled; // jshint ignore:line\n  this.callRecordingWebhookUrl = payload.call_recording_webhook_url; // jshint ignore:line\n  this.crmEnabled = payload.crm_enabled; // jshint ignore:line\n  this.crmType = payload.crm_type; // jshint ignore:line\n  this.crmCallbackUrl = payload.crm_callback_url; // jshint ignore:line\n  this.crmFallbackUrl = payload.crm_fallback_url; // jshint ignore:line\n  this.crmAttributes = payload.crm_attributes; // jshint ignore:line\n  this.publicAttributes = payload.public_attributes; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(ConfigurationInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new ConfigurationContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] - Pinned UI version\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.create = function create(callback) {\n  return this._proxy.create(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.update = function update(callback) {\n  return this._proxy.update(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConfigurationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConfigurationContext\n *\n * @constructor Twilio.FlexApi.V1.ConfigurationContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nConfigurationContext = function ConfigurationContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = _.template(\n    '/Configuration' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConfigurationInstance\n *\n * @function fetch\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uiVersion] - Pinned UI version\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'UiVersion': _.get(opts, 'uiVersion')});\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * create a ConfigurationInstance\n *\n * @function create\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.create = function create(callback) {\n  var deferred = Q.defer();\n  var data = values.of({});\n\n  var promise = this._version.create({uri: this._uri, method: 'POST'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConfigurationInstance\n *\n * @function update\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConfigurationInstance\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.update = function update(callback) {\n  var deferred = Q.defer();\n  var data = values.of({});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConfigurationInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FlexApi.V1.ConfigurationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConfigurationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConfigurationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConfigurationList: ConfigurationList,\n  ConfigurationPage: ConfigurationPage,\n  ConfigurationInstance: ConfigurationInstance,\n  ConfigurationContext: ConfigurationContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}