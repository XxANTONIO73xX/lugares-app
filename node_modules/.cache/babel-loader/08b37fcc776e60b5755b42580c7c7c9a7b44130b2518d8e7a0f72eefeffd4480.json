{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\nvar FeedbackContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The unique sid that identifies this account\n * @param {string} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackList = function FeedbackList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n  FeedbackListInstance._version = version;\n  // Path Solution\n  FeedbackListInstance._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.get = function get() {\n    return new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return FeedbackListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n/* jshint ignore:end */\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(FeedbackPage.prototype, Page.prototype);\nFeedbackPage.prototype.constructor = FeedbackPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {feedback.issues} issues - Issues experienced during the call\n * @property {number} qualityScore - 1 to 5 quality score\n * @property {string} sid -\n *          A string that uniquely identifies this feedback resource\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid, callSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScore = deserialize.integer(payload.quality_score); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n};\nObject.defineProperty(FeedbackInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The call sid that uniquely identifies the call\n */\n/* jshint ignore:end */\nFeedbackContext = function FeedbackContext(version, accountSid, callSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  this._uri = _.template('/Accounts/<%= accountSid %>/Calls/<%= callSid %>/Feedback.json' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.qualityScore)) {\n    throw new Error('Required parameter \"opts.qualityScore\" missing.');\n  }\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function (e) {\n      return e;\n    })\n  });\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.qualityScore)) {\n    throw new Error('Required parameter \"opts.qualityScore\" missing.');\n  }\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function (e) {\n      return e;\n    })\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nFeedbackContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance,\n  FeedbackContext: FeedbackContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","FeedbackList","FeedbackPage","FeedbackInstance","FeedbackContext","version","accountSid","callSid","FeedbackListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","account_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","issues","qualityScore","integer","quality_score","_context","undefined","Object","defineProperty","create","opts","callback","_proxy","fetch","update","_uri","template","isUndefined","Error","deferred","defer","data","of","map","e","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/api/v2010/account/call/feedback.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\nvar FeedbackContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The unique sid that identifies this account\n * @param {string} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackList = function FeedbackList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n\n  FeedbackListInstance._version = version;\n  // Path Solution\n  FeedbackListInstance._solution = {accountSid: accountSid, callSid: callSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.get = function get() {\n    return new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n/* jshint ignore:end */\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackPage.prototype, Page.prototype);\nFeedbackPage.prototype.constructor = FeedbackPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.callSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {feedback.issues} issues - Issues experienced during the call\n * @property {number} qualityScore - 1 to 5 quality score\n * @property {string} sid -\n *          A string that uniquely identifies this feedback resource\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid,\n                                              callSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScore = deserialize.integer(payload.quality_score); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, callSid: callSid, };\n};\n\nObject.defineProperty(FeedbackInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new FeedbackContext(\n        this._version,\n        this._solution.accountSid,\n        this._solution.callSid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The call sid that uniquely identifies the call\n */\n/* jshint ignore:end */\nFeedbackContext = function FeedbackContext(version, accountSid, callSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, callSid: callSid, };\n  this._uri = _.template(\n    '/Accounts/<%= accountSid %>/Calls/<%= callSid %>/Feedback.json' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.qualityScore)) {\n    throw new Error('Required parameter \"opts.qualityScore\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function(e) { return e; })\n  });\n\n  var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts.qualityScore)) {\n    throw new Error('Required parameter \"opts.qualityScore\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function(e) { return e; })\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance,\n  FeedbackContext: FeedbackContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}