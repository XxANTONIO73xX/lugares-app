{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar AddressList = require('./account/address').AddressList;\nvar ApplicationList = require('./account/application').ApplicationList;\nvar AuthorizedConnectAppList = require('./account/authorizedConnectApp').AuthorizedConnectAppList;\nvar AvailablePhoneNumberCountryList = require('./account/availablePhoneNumber').AvailablePhoneNumberCountryList;\nvar BalanceList = require('./account/balance').BalanceList;\nvar CallList = require('./account/call').CallList;\nvar ConferenceList = require('./account/conference').ConferenceList;\nvar ConnectAppList = require('./account/connectApp').ConnectAppList;\nvar IncomingPhoneNumberList = require('./account/incomingPhoneNumber').IncomingPhoneNumberList;\nvar KeyList = require('./account/key').KeyList;\nvar MessageList = require('./account/message').MessageList;\nvar NewKeyList = require('./account/newKey').NewKeyList;\nvar NewSigningKeyList = require('./account/newSigningKey').NewSigningKeyList;\nvar NotificationList = require('./account/notification').NotificationList;\nvar OutgoingCallerIdList = require('./account/outgoingCallerId').OutgoingCallerIdList;\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar QueueList = require('./account/queue').QueueList;\nvar RecordingList = require('./account/recording').RecordingList;\nvar ShortCodeList = require('./account/shortCode').ShortCodeList;\nvar SigningKeyList = require('./account/signingKey').SigningKeyList;\nvar SipList = require('./account/sip').SipList;\nvar TokenList = require('./account/token').TokenList;\nvar TranscriptionList = require('./account/transcription').TranscriptionList;\nvar UsageList = require('./account/usage').UsageList;\nvar ValidationRequestList = require('./account/validationRequest').ValidationRequestList;\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar AccountList;\nvar AccountPage;\nvar AccountInstance;\nvar AccountContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountList\n *\n * @constructor Twilio.Api.V2010.AccountList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n */\n/* jshint ignore:end */\nAccountList = function AccountList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function accounts\n   * @memberof Twilio.Api.V2010#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  function AccountListInstance(sid) {\n    return AccountListInstance.get(sid);\n  }\n  AccountListInstance._version = version;\n  // Path Solution\n  AccountListInstance._solution = {};\n  AccountListInstance._uri = _.template('/Accounts.json' // jshint ignore:line\n  )(AccountListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a AccountInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of the account\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccountInstance\n   */\n  /* jshint ignore:end */\n  AccountListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams AccountInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AccountListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AccountInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a account\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} sid - Fetch by unique Account Sid\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  AccountListInstance.get = function get(sid) {\n    return new AccountContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AccountListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  AccountListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return AccountListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountPage\n *\n * @constructor Twilio.Api.V2010.AccountPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccountSolution} solution - Path solution\n *\n * @returns AccountPage\n */\n/* jshint ignore:end */\nAccountPage = function AccountPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(AccountPage.prototype, Page.prototype);\nAccountPage.prototype.constructor = AccountPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AccountInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @param {AccountPayload} payload - Payload response from the API\n *\n * @returns AccountInstance\n */\n/* jshint ignore:end */\nAccountPage.prototype.getInstance = function getInstance(payload) {\n  return new AccountInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAccountPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountInstance\n *\n * @property {string} authToken - The authorization token for this account\n * @property {Date} dateCreated - The date this account was created\n * @property {Date} dateUpdated - The date this account was last updated\n * @property {string} friendlyName - A human readable description of this account\n * @property {string} ownerAccountSid -\n *          The unique 34 character id representing the parent of this account\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {account.status} status - The status of this account\n * @property {string} subresourceUris - Account Instance Subresources\n * @property {account.type} type - The type of this account\n * @property {string} uri -\n *          The URI for this resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AccountPayload} payload - The instance payload\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountInstance = function AccountInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.authToken = payload.auth_token; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.ownerAccountSid = payload.owner_account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.subresourceUris = payload.subresource_uris; // jshint ignore:line\n  this.type = payload.type; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(AccountInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AccountContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the addresses\n *\n * @function addresses\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AddressList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.addresses = function addresses() {\n  return this._proxy.addresses;\n};\n\n/* jshint ignore:start */\n/**\n * Access the applications\n *\n * @function applications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ApplicationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.applications = function applications() {\n  return this._proxy.applications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the authorizedConnectApps\n *\n * @function authorizedConnectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.authorizedConnectApps = function authorizedConnectApps() {\n  return this._proxy.authorizedConnectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the availablePhoneNumbers\n *\n * @function availablePhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.availablePhoneNumbers = function availablePhoneNumbers() {\n  return this._proxy.availablePhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the balance\n *\n * @function balance\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.BalanceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.balance = function balance() {\n  return this._proxy.balance;\n};\n\n/* jshint ignore:start */\n/**\n * Access the calls\n *\n * @function calls\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.CallList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.calls = function calls() {\n  return this._proxy.calls;\n};\n\n/* jshint ignore:start */\n/**\n * Access the conferences\n *\n * @function conferences\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConferenceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.conferences = function conferences() {\n  return this._proxy.conferences;\n};\n\n/* jshint ignore:start */\n/**\n * Access the connectApps\n *\n * @function connectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.connectApps = function connectApps() {\n  return this._proxy.connectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the incomingPhoneNumbers\n *\n * @function incomingPhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.incomingPhoneNumbers = function incomingPhoneNumbers() {\n  return this._proxy.incomingPhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.KeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the messages\n *\n * @function messages\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.MessageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.messages = function messages() {\n  return this._proxy.messages;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newKeys\n *\n * @function newKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newKeys = function newKeys() {\n  return this._proxy.newKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newSigningKeys\n *\n * @function newSigningKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewSigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newSigningKeys = function newSigningKeys() {\n  return this._proxy.newSigningKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the notifications\n *\n * @function notifications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NotificationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.notifications = function notifications() {\n  return this._proxy.notifications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the outgoingCallerIds\n *\n * @function outgoingCallerIds\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.outgoingCallerIds = function outgoingCallerIds() {\n  return this._proxy.outgoingCallerIds;\n};\n\n/* jshint ignore:start */\n/**\n * Access the queues\n *\n * @function queues\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.QueueList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.queues = function queues() {\n  return this._proxy.queues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the recordings\n *\n * @function recordings\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.RecordingList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.recordings = function recordings() {\n  return this._proxy.recordings;\n};\n\n/* jshint ignore:start */\n/**\n * Access the signingKeys\n *\n * @function signingKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.signingKeys = function signingKeys() {\n  return this._proxy.signingKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the sip\n *\n * @function sip\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SipList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.sip = function sip() {\n  return this._proxy.sip;\n};\n\n/* jshint ignore:start */\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ShortCodeList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tokens\n *\n * @function tokens\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TokenList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.tokens = function tokens() {\n  return this._proxy.tokens;\n};\n\n/* jshint ignore:start */\n/**\n * Access the transcriptions\n *\n * @function transcriptions\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TranscriptionList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.transcriptions = function transcriptions() {\n  return this._proxy.transcriptions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the usage\n *\n * @function usage\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.UsageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.usage = function usage() {\n  return this._proxy.usage;\n};\n\n/* jshint ignore:start */\n/**\n * Access the validationRequests\n *\n * @function validationRequests\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ValidationRequestList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.validationRequests = function validationRequests() {\n  return this._proxy.validationRequests;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nAccountInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountContext\n *\n * @property {Twilio.Api.V2010.AccountContext.AddressList} addresses -\n *          addresses resource\n * @property {Twilio.Api.V2010.AccountContext.ApplicationList} applications -\n *          applications resource\n * @property {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList} authorizedConnectApps -\n *          authorizedConnectApps resource\n * @property {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList} availablePhoneNumbers -\n *          availablePhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.BalanceList} balance -\n *          balance resource\n * @property {Twilio.Api.V2010.AccountContext.CallList} calls - calls resource\n * @property {Twilio.Api.V2010.AccountContext.ConferenceList} conferences -\n *          conferences resource\n * @property {Twilio.Api.V2010.AccountContext.ConnectAppList} connectApps -\n *          connectApps resource\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList} incomingPhoneNumbers -\n *          incomingPhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.KeyList} keys - keys resource\n * @property {Twilio.Api.V2010.AccountContext.MessageList} messages -\n *          messages resource\n * @property {Twilio.Api.V2010.AccountContext.NewKeyList} newKeys -\n *          newKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NewSigningKeyList} newSigningKeys -\n *          newSigningKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NotificationList} notifications -\n *          notifications resource\n * @property {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList} outgoingCallerIds -\n *          outgoingCallerIds resource\n * @property {Twilio.Api.V2010.AccountContext.QueueList} queues - queues resource\n * @property {Twilio.Api.V2010.AccountContext.RecordingList} recordings -\n *          recordings resource\n * @property {Twilio.Api.V2010.AccountContext.SigningKeyList} signingKeys -\n *          signingKeys resource\n * @property {Twilio.Api.V2010.AccountContext.SipList} sip - sip resource\n * @property {Twilio.Api.V2010.AccountContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Api.V2010.AccountContext.TokenList} tokens - tokens resource\n * @property {Twilio.Api.V2010.AccountContext.TranscriptionList} transcriptions -\n *          transcriptions resource\n * @property {Twilio.Api.V2010.AccountContext.UsageList} usage - usage resource\n * @property {Twilio.Api.V2010.AccountContext.ValidationRequestList} validationRequests -\n *          validationRequests resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountContext = function AccountContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/Accounts/<%= sid %>.json' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._addresses = undefined;\n  this._applications = undefined;\n  this._authorizedConnectApps = undefined;\n  this._availablePhoneNumbers = undefined;\n  this._balance = undefined;\n  this._calls = undefined;\n  this._conferences = undefined;\n  this._connectApps = undefined;\n  this._incomingPhoneNumbers = undefined;\n  this._keys = undefined;\n  this._messages = undefined;\n  this._newKeys = undefined;\n  this._newSigningKeys = undefined;\n  this._notifications = undefined;\n  this._outgoingCallerIds = undefined;\n  this._queues = undefined;\n  this._recordings = undefined;\n  this._signingKeys = undefined;\n  this._sip = undefined;\n  this._shortCodes = undefined;\n  this._tokens = undefined;\n  this._transcriptions = undefined;\n  this._usage = undefined;\n  this._validationRequests = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Status': _.get(opts, 'status')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(AccountContext.prototype, 'addresses', {\n  get: function () {\n    if (!this._addresses) {\n      this._addresses = new AddressList(this._version, this._solution.sid);\n    }\n    return this._addresses;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'applications', {\n  get: function () {\n    if (!this._applications) {\n      this._applications = new ApplicationList(this._version, this._solution.sid);\n    }\n    return this._applications;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'authorizedConnectApps', {\n  get: function () {\n    if (!this._authorizedConnectApps) {\n      this._authorizedConnectApps = new AuthorizedConnectAppList(this._version, this._solution.sid);\n    }\n    return this._authorizedConnectApps;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'availablePhoneNumbers', {\n  get: function () {\n    if (!this._availablePhoneNumbers) {\n      this._availablePhoneNumbers = new AvailablePhoneNumberCountryList(this._version, this._solution.sid);\n    }\n    return this._availablePhoneNumbers;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'balance', {\n  get: function () {\n    if (!this._balance) {\n      this._balance = new BalanceList(this._version, this._solution.sid);\n    }\n    return this._balance;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'calls', {\n  get: function () {\n    if (!this._calls) {\n      this._calls = new CallList(this._version, this._solution.sid);\n    }\n    return this._calls;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'conferences', {\n  get: function () {\n    if (!this._conferences) {\n      this._conferences = new ConferenceList(this._version, this._solution.sid);\n    }\n    return this._conferences;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'connectApps', {\n  get: function () {\n    if (!this._connectApps) {\n      this._connectApps = new ConnectAppList(this._version, this._solution.sid);\n    }\n    return this._connectApps;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'incomingPhoneNumbers', {\n  get: function () {\n    if (!this._incomingPhoneNumbers) {\n      this._incomingPhoneNumbers = new IncomingPhoneNumberList(this._version, this._solution.sid);\n    }\n    return this._incomingPhoneNumbers;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'keys', {\n  get: function () {\n    if (!this._keys) {\n      this._keys = new KeyList(this._version, this._solution.sid);\n    }\n    return this._keys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'messages', {\n  get: function () {\n    if (!this._messages) {\n      this._messages = new MessageList(this._version, this._solution.sid);\n    }\n    return this._messages;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'newKeys', {\n  get: function () {\n    if (!this._newKeys) {\n      this._newKeys = new NewKeyList(this._version, this._solution.sid);\n    }\n    return this._newKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'newSigningKeys', {\n  get: function () {\n    if (!this._newSigningKeys) {\n      this._newSigningKeys = new NewSigningKeyList(this._version, this._solution.sid);\n    }\n    return this._newSigningKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'notifications', {\n  get: function () {\n    if (!this._notifications) {\n      this._notifications = new NotificationList(this._version, this._solution.sid);\n    }\n    return this._notifications;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'outgoingCallerIds', {\n  get: function () {\n    if (!this._outgoingCallerIds) {\n      this._outgoingCallerIds = new OutgoingCallerIdList(this._version, this._solution.sid);\n    }\n    return this._outgoingCallerIds;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'queues', {\n  get: function () {\n    if (!this._queues) {\n      this._queues = new QueueList(this._version, this._solution.sid);\n    }\n    return this._queues;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'recordings', {\n  get: function () {\n    if (!this._recordings) {\n      this._recordings = new RecordingList(this._version, this._solution.sid);\n    }\n    return this._recordings;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'signingKeys', {\n  get: function () {\n    if (!this._signingKeys) {\n      this._signingKeys = new SigningKeyList(this._version, this._solution.sid);\n    }\n    return this._signingKeys;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'sip', {\n  get: function () {\n    if (!this._sip) {\n      this._sip = new SipList(this._version, this._solution.sid);\n    }\n    return this._sip;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'shortCodes', {\n  get: function () {\n    if (!this._shortCodes) {\n      this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n    }\n    return this._shortCodes;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'tokens', {\n  get: function () {\n    if (!this._tokens) {\n      this._tokens = new TokenList(this._version, this._solution.sid);\n    }\n    return this._tokens;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'transcriptions', {\n  get: function () {\n    if (!this._transcriptions) {\n      this._transcriptions = new TranscriptionList(this._version, this._solution.sid);\n    }\n    return this._transcriptions;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'usage', {\n  get: function () {\n    if (!this._usage) {\n      this._usage = new UsageList(this._version, this._solution.sid);\n    }\n    return this._usage;\n  }\n});\nObject.defineProperty(AccountContext.prototype, 'validationRequests', {\n  get: function () {\n    if (!this._validationRequests) {\n      this._validationRequests = new ValidationRequestList(this._version, this._solution.sid);\n    }\n    return this._validationRequests;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nAccountContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  AccountList: AccountList,\n  AccountPage: AccountPage,\n  AccountInstance: AccountInstance,\n  AccountContext: AccountContext\n};","map":{"version":3,"names":["Q","require","_","util","AddressList","ApplicationList","AuthorizedConnectAppList","AvailablePhoneNumberCountryList","BalanceList","CallList","ConferenceList","ConnectAppList","IncomingPhoneNumberList","KeyList","MessageList","NewKeyList","NewSigningKeyList","NotificationList","OutgoingCallerIdList","Page","QueueList","RecordingList","ShortCodeList","SigningKeyList","SipList","TokenList","TranscriptionList","UsageList","ValidationRequestList","deserialize","values","AccountList","AccountPage","AccountInstance","AccountContext","version","AccountListInstance","sid","get","_version","_solution","_uri","template","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","pageLimit","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","authToken","auth_token","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","ownerAccountSid","owner_account_sid","status","subresourceUris","subresource_uris","type","_context","undefined","Object","defineProperty","fetch","_proxy","update","addresses","applications","authorizedConnectApps","availablePhoneNumbers","balance","calls","conferences","connectApps","incomingPhoneNumbers","keys","messages","newKeys","newSigningKeys","notifications","outgoingCallerIds","queues","recordings","signingKeys","sip","shortCodes","tokens","transcriptions","usage","validationRequests","_addresses","_applications","_authorizedConnectApps","_availablePhoneNumbers","_balance","_calls","_conferences","_connectApps","_incomingPhoneNumbers","_keys","_messages","_newKeys","_newSigningKeys","_notifications","_outgoingCallerIds","_queues","_recordings","_signingKeys","_sip","_shortCodes","_tokens","_transcriptions","_usage","_validationRequests","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/api/v2010/account.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AddressList = require('./account/address').AddressList;\nvar ApplicationList = require('./account/application').ApplicationList;\nvar AuthorizedConnectAppList = require(\n    './account/authorizedConnectApp').AuthorizedConnectAppList;\nvar AvailablePhoneNumberCountryList = require(\n    './account/availablePhoneNumber').AvailablePhoneNumberCountryList;\nvar BalanceList = require('./account/balance').BalanceList;\nvar CallList = require('./account/call').CallList;\nvar ConferenceList = require('./account/conference').ConferenceList;\nvar ConnectAppList = require('./account/connectApp').ConnectAppList;\nvar IncomingPhoneNumberList = require(\n    './account/incomingPhoneNumber').IncomingPhoneNumberList;\nvar KeyList = require('./account/key').KeyList;\nvar MessageList = require('./account/message').MessageList;\nvar NewKeyList = require('./account/newKey').NewKeyList;\nvar NewSigningKeyList = require('./account/newSigningKey').NewSigningKeyList;\nvar NotificationList = require('./account/notification').NotificationList;\nvar OutgoingCallerIdList = require(\n    './account/outgoingCallerId').OutgoingCallerIdList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar QueueList = require('./account/queue').QueueList;\nvar RecordingList = require('./account/recording').RecordingList;\nvar ShortCodeList = require('./account/shortCode').ShortCodeList;\nvar SigningKeyList = require('./account/signingKey').SigningKeyList;\nvar SipList = require('./account/sip').SipList;\nvar TokenList = require('./account/token').TokenList;\nvar TranscriptionList = require('./account/transcription').TranscriptionList;\nvar UsageList = require('./account/usage').UsageList;\nvar ValidationRequestList = require(\n    './account/validationRequest').ValidationRequestList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar AccountList;\nvar AccountPage;\nvar AccountInstance;\nvar AccountContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountList\n *\n * @constructor Twilio.Api.V2010.AccountList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n */\n/* jshint ignore:end */\nAccountList = function AccountList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function accounts\n   * @memberof Twilio.Api.V2010#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  function AccountListInstance(sid) {\n    return AccountListInstance.get(sid);\n  }\n\n  AccountListInstance._version = version;\n  // Path Solution\n  AccountListInstance._solution = {};\n  AccountListInstance._uri = _.template(\n    '/Accounts.json' // jshint ignore:line\n  )(AccountListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a AccountInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of the account\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AccountInstance\n   */\n  /* jshint ignore:end */\n  AccountListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'FriendlyName': _.get(opts, 'friendlyName')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams AccountInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AccountListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AccountInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - FriendlyName to filter on\n   * @param {account.status} [opts.status] - Status to filter on\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AccountInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AccountListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AccountPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a account\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @param {string} sid - Fetch by unique Account Sid\n   *\n   * @returns {Twilio.Api.V2010.AccountContext}\n   */\n  /* jshint ignore:end */\n  AccountListInstance.get = function get(sid) {\n    return new AccountContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AccountListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AccountListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AccountListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountPage\n *\n * @constructor Twilio.Api.V2010.AccountPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AccountSolution} solution - Path solution\n *\n * @returns AccountPage\n */\n/* jshint ignore:end */\nAccountPage = function AccountPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AccountPage.prototype, Page.prototype);\nAccountPage.prototype.constructor = AccountPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AccountInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @param {AccountPayload} payload - Payload response from the API\n *\n * @returns AccountInstance\n */\n/* jshint ignore:end */\nAccountPage.prototype.getInstance = function getInstance(payload) {\n  return new AccountInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccountPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountInstance\n *\n * @property {string} authToken - The authorization token for this account\n * @property {Date} dateCreated - The date this account was created\n * @property {Date} dateUpdated - The date this account was last updated\n * @property {string} friendlyName - A human readable description of this account\n * @property {string} ownerAccountSid -\n *          The unique 34 character id representing the parent of this account\n * @property {string} sid -\n *          A 34 character string that uniquely identifies this resource.\n * @property {account.status} status - The status of this account\n * @property {string} subresourceUris - Account Instance Subresources\n * @property {account.type} type - The type of this account\n * @property {string} uri -\n *          The URI for this resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {AccountPayload} payload - The instance payload\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountInstance = function AccountInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.authToken = payload.auth_token; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.ownerAccountSid = payload.owner_account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.subresourceUris = payload.subresource_uris; // jshint ignore:line\n  this.type = payload.type; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(AccountInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new AccountContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the addresses\n *\n * @function addresses\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AddressList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.addresses = function addresses() {\n  return this._proxy.addresses;\n};\n\n/* jshint ignore:start */\n/**\n * Access the applications\n *\n * @function applications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ApplicationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.applications = function applications() {\n  return this._proxy.applications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the authorizedConnectApps\n *\n * @function authorizedConnectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.authorizedConnectApps = function\n    authorizedConnectApps() {\n  return this._proxy.authorizedConnectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the availablePhoneNumbers\n *\n * @function availablePhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.availablePhoneNumbers = function\n    availablePhoneNumbers() {\n  return this._proxy.availablePhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the balance\n *\n * @function balance\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.BalanceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.balance = function balance() {\n  return this._proxy.balance;\n};\n\n/* jshint ignore:start */\n/**\n * Access the calls\n *\n * @function calls\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.CallList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.calls = function calls() {\n  return this._proxy.calls;\n};\n\n/* jshint ignore:start */\n/**\n * Access the conferences\n *\n * @function conferences\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConferenceList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.conferences = function conferences() {\n  return this._proxy.conferences;\n};\n\n/* jshint ignore:start */\n/**\n * Access the connectApps\n *\n * @function connectApps\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ConnectAppList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.connectApps = function connectApps() {\n  return this._proxy.connectApps;\n};\n\n/* jshint ignore:start */\n/**\n * Access the incomingPhoneNumbers\n *\n * @function incomingPhoneNumbers\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.incomingPhoneNumbers = function incomingPhoneNumbers()\n    {\n  return this._proxy.incomingPhoneNumbers;\n};\n\n/* jshint ignore:start */\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.KeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the messages\n *\n * @function messages\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.MessageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.messages = function messages() {\n  return this._proxy.messages;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newKeys\n *\n * @function newKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newKeys = function newKeys() {\n  return this._proxy.newKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the newSigningKeys\n *\n * @function newSigningKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NewSigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.newSigningKeys = function newSigningKeys() {\n  return this._proxy.newSigningKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the notifications\n *\n * @function notifications\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.NotificationList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.notifications = function notifications() {\n  return this._proxy.notifications;\n};\n\n/* jshint ignore:start */\n/**\n * Access the outgoingCallerIds\n *\n * @function outgoingCallerIds\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.outgoingCallerIds = function outgoingCallerIds() {\n  return this._proxy.outgoingCallerIds;\n};\n\n/* jshint ignore:start */\n/**\n * Access the queues\n *\n * @function queues\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.QueueList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.queues = function queues() {\n  return this._proxy.queues;\n};\n\n/* jshint ignore:start */\n/**\n * Access the recordings\n *\n * @function recordings\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.RecordingList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.recordings = function recordings() {\n  return this._proxy.recordings;\n};\n\n/* jshint ignore:start */\n/**\n * Access the signingKeys\n *\n * @function signingKeys\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SigningKeyList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.signingKeys = function signingKeys() {\n  return this._proxy.signingKeys;\n};\n\n/* jshint ignore:start */\n/**\n * Access the sip\n *\n * @function sip\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.SipList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.sip = function sip() {\n  return this._proxy.sip;\n};\n\n/* jshint ignore:start */\n/**\n * Access the shortCodes\n *\n * @function shortCodes\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ShortCodeList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.shortCodes = function shortCodes() {\n  return this._proxy.shortCodes;\n};\n\n/* jshint ignore:start */\n/**\n * Access the tokens\n *\n * @function tokens\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TokenList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.tokens = function tokens() {\n  return this._proxy.tokens;\n};\n\n/* jshint ignore:start */\n/**\n * Access the transcriptions\n *\n * @function transcriptions\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.TranscriptionList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.transcriptions = function transcriptions() {\n  return this._proxy.transcriptions;\n};\n\n/* jshint ignore:start */\n/**\n * Access the usage\n *\n * @function usage\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.UsageList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.usage = function usage() {\n  return this._proxy.usage;\n};\n\n/* jshint ignore:start */\n/**\n * Access the validationRequests\n *\n * @function validationRequests\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.ValidationRequestList}\n */\n/* jshint ignore:end */\nAccountInstance.prototype.validationRequests = function validationRequests() {\n  return this._proxy.validationRequests;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAccountInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AccountContext\n *\n * @constructor Twilio.Api.V2010.AccountContext\n *\n * @property {Twilio.Api.V2010.AccountContext.AddressList} addresses -\n *          addresses resource\n * @property {Twilio.Api.V2010.AccountContext.ApplicationList} applications -\n *          applications resource\n * @property {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList} authorizedConnectApps -\n *          authorizedConnectApps resource\n * @property {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList} availablePhoneNumbers -\n *          availablePhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.BalanceList} balance -\n *          balance resource\n * @property {Twilio.Api.V2010.AccountContext.CallList} calls - calls resource\n * @property {Twilio.Api.V2010.AccountContext.ConferenceList} conferences -\n *          conferences resource\n * @property {Twilio.Api.V2010.AccountContext.ConnectAppList} connectApps -\n *          connectApps resource\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList} incomingPhoneNumbers -\n *          incomingPhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.KeyList} keys - keys resource\n * @property {Twilio.Api.V2010.AccountContext.MessageList} messages -\n *          messages resource\n * @property {Twilio.Api.V2010.AccountContext.NewKeyList} newKeys -\n *          newKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NewSigningKeyList} newSigningKeys -\n *          newSigningKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NotificationList} notifications -\n *          notifications resource\n * @property {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList} outgoingCallerIds -\n *          outgoingCallerIds resource\n * @property {Twilio.Api.V2010.AccountContext.QueueList} queues - queues resource\n * @property {Twilio.Api.V2010.AccountContext.RecordingList} recordings -\n *          recordings resource\n * @property {Twilio.Api.V2010.AccountContext.SigningKeyList} signingKeys -\n *          signingKeys resource\n * @property {Twilio.Api.V2010.AccountContext.SipList} sip - sip resource\n * @property {Twilio.Api.V2010.AccountContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Api.V2010.AccountContext.TokenList} tokens - tokens resource\n * @property {Twilio.Api.V2010.AccountContext.TranscriptionList} transcriptions -\n *          transcriptions resource\n * @property {Twilio.Api.V2010.AccountContext.UsageList} usage - usage resource\n * @property {Twilio.Api.V2010.AccountContext.ValidationRequestList} validationRequests -\n *          validationRequests resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} sid - Fetch by unique Account Sid\n */\n/* jshint ignore:end */\nAccountContext = function AccountContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/Accounts/<%= sid %>.json' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._addresses = undefined;\n  this._applications = undefined;\n  this._authorizedConnectApps = undefined;\n  this._availablePhoneNumbers = undefined;\n  this._balance = undefined;\n  this._calls = undefined;\n  this._conferences = undefined;\n  this._connectApps = undefined;\n  this._incomingPhoneNumbers = undefined;\n  this._keys = undefined;\n  this._messages = undefined;\n  this._newKeys = undefined;\n  this._newSigningKeys = undefined;\n  this._notifications = undefined;\n  this._outgoingCallerIds = undefined;\n  this._queues = undefined;\n  this._recordings = undefined;\n  this._signingKeys = undefined;\n  this._sip = undefined;\n  this._shortCodes = undefined;\n  this._tokens = undefined;\n  this._transcriptions = undefined;\n  this._usage = undefined;\n  this._validationRequests = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AccountInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AccountInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - FriendlyName to update\n * @param {account.status} [opts.status] - Status to update the Account with\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AccountInstance\n */\n/* jshint ignore:end */\nAccountContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AccountInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AccountContext.prototype,\n  'addresses', {\n  get: function() {\n    if (!this._addresses) {\n      this._addresses = new AddressList(this._version, this._solution.sid);\n    }\n    return this._addresses;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'applications', {\n  get: function() {\n    if (!this._applications) {\n      this._applications = new ApplicationList(this._version, this._solution.sid);\n    }\n    return this._applications;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'authorizedConnectApps', {\n  get: function() {\n    if (!this._authorizedConnectApps) {\n      this._authorizedConnectApps = new AuthorizedConnectAppList(this._version, this._solution.sid);\n    }\n    return this._authorizedConnectApps;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'availablePhoneNumbers', {\n  get: function() {\n    if (!this._availablePhoneNumbers) {\n      this._availablePhoneNumbers = new AvailablePhoneNumberCountryList(\n        this._version,\n        this._solution.sid\n      );\n    }\n    return this._availablePhoneNumbers;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'balance', {\n  get: function() {\n    if (!this._balance) {\n      this._balance = new BalanceList(this._version, this._solution.sid);\n    }\n    return this._balance;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'calls', {\n  get: function() {\n    if (!this._calls) {\n      this._calls = new CallList(this._version, this._solution.sid);\n    }\n    return this._calls;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'conferences', {\n  get: function() {\n    if (!this._conferences) {\n      this._conferences = new ConferenceList(this._version, this._solution.sid);\n    }\n    return this._conferences;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'connectApps', {\n  get: function() {\n    if (!this._connectApps) {\n      this._connectApps = new ConnectAppList(this._version, this._solution.sid);\n    }\n    return this._connectApps;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'incomingPhoneNumbers', {\n  get: function() {\n    if (!this._incomingPhoneNumbers) {\n      this._incomingPhoneNumbers = new IncomingPhoneNumberList(this._version, this._solution.sid);\n    }\n    return this._incomingPhoneNumbers;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'keys', {\n  get: function() {\n    if (!this._keys) {\n      this._keys = new KeyList(this._version, this._solution.sid);\n    }\n    return this._keys;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'messages', {\n  get: function() {\n    if (!this._messages) {\n      this._messages = new MessageList(this._version, this._solution.sid);\n    }\n    return this._messages;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'newKeys', {\n  get: function() {\n    if (!this._newKeys) {\n      this._newKeys = new NewKeyList(this._version, this._solution.sid);\n    }\n    return this._newKeys;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'newSigningKeys', {\n  get: function() {\n    if (!this._newSigningKeys) {\n      this._newSigningKeys = new NewSigningKeyList(this._version, this._solution.sid);\n    }\n    return this._newSigningKeys;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'notifications', {\n  get: function() {\n    if (!this._notifications) {\n      this._notifications = new NotificationList(this._version, this._solution.sid);\n    }\n    return this._notifications;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'outgoingCallerIds', {\n  get: function() {\n    if (!this._outgoingCallerIds) {\n      this._outgoingCallerIds = new OutgoingCallerIdList(this._version, this._solution.sid);\n    }\n    return this._outgoingCallerIds;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'queues', {\n  get: function() {\n    if (!this._queues) {\n      this._queues = new QueueList(this._version, this._solution.sid);\n    }\n    return this._queues;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'recordings', {\n  get: function() {\n    if (!this._recordings) {\n      this._recordings = new RecordingList(this._version, this._solution.sid);\n    }\n    return this._recordings;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'signingKeys', {\n  get: function() {\n    if (!this._signingKeys) {\n      this._signingKeys = new SigningKeyList(this._version, this._solution.sid);\n    }\n    return this._signingKeys;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'sip', {\n  get: function() {\n    if (!this._sip) {\n      this._sip = new SipList(this._version, this._solution.sid);\n    }\n    return this._sip;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'shortCodes', {\n  get: function() {\n    if (!this._shortCodes) {\n      this._shortCodes = new ShortCodeList(this._version, this._solution.sid);\n    }\n    return this._shortCodes;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'tokens', {\n  get: function() {\n    if (!this._tokens) {\n      this._tokens = new TokenList(this._version, this._solution.sid);\n    }\n    return this._tokens;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'transcriptions', {\n  get: function() {\n    if (!this._transcriptions) {\n      this._transcriptions = new TranscriptionList(this._version, this._solution.sid);\n    }\n    return this._transcriptions;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'usage', {\n  get: function() {\n    if (!this._usage) {\n      this._usage = new UsageList(this._version, this._solution.sid);\n    }\n    return this._usage;\n  }\n});\n\nObject.defineProperty(AccountContext.prototype,\n  'validationRequests', {\n  get: function() {\n    if (!this._validationRequests) {\n      this._validationRequests = new ValidationRequestList(this._version, this._solution.sid);\n    }\n    return this._validationRequests;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAccountContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAccountContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AccountList: AccountList,\n  AccountPage: AccountPage,\n  AccountInstance: AccountInstance,\n  AccountContext: AccountContext\n};\n"],"mappings":"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G,eAAe,CAACoE,SAAS,CAACiC,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;EAC/D,OAAO,IAAI,CAACH,MAAM,CAACG,YAAY;AACjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArG,eAAe,CAACoE,SAAS,CAACkC,qBAAqB,GAAG,SAC9CA,qBAAqBA,CAAA,EAAG;EAC1B,OAAO,IAAI,CAACJ,MAAM,CAACI,qBAAqB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtG,eAAe,CAACoE,SAAS,CAACmC,qBAAqB,GAAG,SAC9CA,qBAAqBA,CAAA,EAAG;EAC1B,OAAO,IAAI,CAACL,MAAM,CAACK,qBAAqB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvG,eAAe,CAACoE,SAAS,CAACoC,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;EACrD,OAAO,IAAI,CAACN,MAAM,CAACM,OAAO;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxG,eAAe,CAACoE,SAAS,CAACqC,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;EACjD,OAAO,IAAI,CAACP,MAAM,CAACO,KAAK;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAzG,eAAe,CAACoE,SAAS,CAACsC,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACR,MAAM,CAACQ,WAAW;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1G,eAAe,CAACoE,SAAS,CAACuC,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACT,MAAM,CAACS,WAAW;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3G,eAAe,CAACoE,SAAS,CAACwC,oBAAoB,GAAG,SAASA,oBAAoBA,CAAA,EAC1E;EACF,OAAO,IAAI,CAACV,MAAM,CAACU,oBAAoB;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5G,eAAe,CAACoE,SAAS,CAACyC,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAG;EAC/C,OAAO,IAAI,CAACX,MAAM,CAACW,IAAI;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA7G,eAAe,CAACoE,SAAS,CAAC0C,QAAQ,GAAG,SAASA,QAAQA,CAAA,EAAG;EACvD,OAAO,IAAI,CAACZ,MAAM,CAACY,QAAQ;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9G,eAAe,CAACoE,SAAS,CAAC2C,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;EACrD,OAAO,IAAI,CAACb,MAAM,CAACa,OAAO;AAC5B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA/G,eAAe,CAACoE,SAAS,CAAC4C,cAAc,GAAG,SAASA,cAAcA,CAAA,EAAG;EACnE,OAAO,IAAI,CAACd,MAAM,CAACc,cAAc;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhH,eAAe,CAACoE,SAAS,CAAC6C,aAAa,GAAG,SAASA,aAAaA,CAAA,EAAG;EACjE,OAAO,IAAI,CAACf,MAAM,CAACe,aAAa;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjH,eAAe,CAACoE,SAAS,CAAC8C,iBAAiB,GAAG,SAASA,iBAAiBA,CAAA,EAAG;EACzE,OAAO,IAAI,CAAChB,MAAM,CAACgB,iBAAiB;AACtC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlH,eAAe,CAACoE,SAAS,CAAC+C,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACnD,OAAO,IAAI,CAACjB,MAAM,CAACiB,MAAM;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnH,eAAe,CAACoE,SAAS,CAACgD,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC3D,OAAO,IAAI,CAAClB,MAAM,CAACkB,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApH,eAAe,CAACoE,SAAS,CAACiD,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;EAC7D,OAAO,IAAI,CAACnB,MAAM,CAACmB,WAAW;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArH,eAAe,CAACoE,SAAS,CAACkD,GAAG,GAAG,SAASA,GAAGA,CAAA,EAAG;EAC7C,OAAO,IAAI,CAACpB,MAAM,CAACoB,GAAG;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtH,eAAe,CAACoE,SAAS,CAACmD,UAAU,GAAG,SAASA,UAAUA,CAAA,EAAG;EAC3D,OAAO,IAAI,CAACrB,MAAM,CAACqB,UAAU;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvH,eAAe,CAACoE,SAAS,CAACoD,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EACnD,OAAO,IAAI,CAACtB,MAAM,CAACsB,MAAM;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxH,eAAe,CAACoE,SAAS,CAACqD,cAAc,GAAG,SAASA,cAAcA,CAAA,EAAG;EACnE,OAAO,IAAI,CAACvB,MAAM,CAACuB,cAAc;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAzH,eAAe,CAACoE,SAAS,CAACsD,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;EACjD,OAAO,IAAI,CAACxB,MAAM,CAACwB,KAAK;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;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"},"metadata":{},"sourceType":"script","externalDependencies":[]}