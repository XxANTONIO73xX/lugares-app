{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar TaskQueueStatisticsList;\nvar TaskQueueStatisticsPage;\nvar TaskQueueStatisticsInstance;\nvar TaskQueueStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsList = function TaskQueueStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueStatisticsListInstance(sid) {\n    return TaskQueueStatisticsListInstance.get(sid);\n  }\n  TaskQueueStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.get = function get() {\n    return new TaskQueueStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  TaskQueueStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return TaskQueueStatisticsListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage = function TaskQueueStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(TaskQueueStatisticsPage.prototype, Page.prototype);\nTaskQueueStatisticsPage.prototype.constructor = TaskQueueStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @param {TaskQueueStatisticsPayload} payload - Payload response from the API\n *\n * @returns TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskQueueStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} cumulative - The cumulative\n * @property {string} realtime - The realtime\n * @property {string} taskQueueSid - The task_queue_sid\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance = function TaskQueueStatisticsInstance(version, payload, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n};\nObject.defineProperty(TaskQueueStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskQueueStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] - Filter cumulative statistics by an end date.\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nTaskQueueStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext = function TaskQueueStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  this._uri = _.template('/Workspaces/<%= workspaceSid %>/TaskQueues/<%= taskQueueSid %>/Statistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] - Filter cumulative statistics by an end date.\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskQueueStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nTaskQueueStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  TaskQueueStatisticsList: TaskQueueStatisticsList,\n  TaskQueueStatisticsPage: TaskQueueStatisticsPage,\n  TaskQueueStatisticsInstance: TaskQueueStatisticsInstance,\n  TaskQueueStatisticsContext: TaskQueueStatisticsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","TaskQueueStatisticsList","TaskQueueStatisticsPage","TaskQueueStatisticsInstance","TaskQueueStatisticsContext","version","workspaceSid","taskQueueSid","TaskQueueStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","cumulative","realtime","task_queue_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","template","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue/taskQueueStatistics.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskQueueStatisticsList;\nvar TaskQueueStatisticsPage;\nvar TaskQueueStatisticsInstance;\nvar TaskQueueStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsList = function TaskQueueStatisticsList(version,\n                                                            workspaceSid,\n                                                            taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueStatisticsListInstance(sid) {\n    return TaskQueueStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.get = function get() {\n    return new TaskQueueStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage = function TaskQueueStatisticsPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueStatisticsPage.prototype, Page.prototype);\nTaskQueueStatisticsPage.prototype.constructor = TaskQueueStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @param {TaskQueueStatisticsPayload} payload - Payload response from the API\n *\n * @returns TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.taskQueueSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} cumulative - The cumulative\n * @property {string} realtime - The realtime\n * @property {string} taskQueueSid - The task_queue_sid\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance = function TaskQueueStatisticsInstance(version,\n    payload, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n};\n\nObject.defineProperty(TaskQueueStatisticsInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new TaskQueueStatisticsContext(\n        this._version,\n        this._solution.workspaceSid,\n        this._solution.taskQueueSid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] - Filter cumulative statistics by an end date.\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} taskQueueSid - The task_queue_sid\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext = function TaskQueueStatisticsContext(version,\n    workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n  this._uri = _.template(\n    '/Workspaces/<%= workspaceSid %>/TaskQueues/<%= taskQueueSid %>/Statistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] - Filter cumulative statistics by an end date.\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {string} [opts.taskChannel] -\n *          Filter real-time and cumulative statistics by TaskChannel.\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated values for viewing splits of tasks canceled and accepted above the given threshold in seconds.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskQueueStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueStatisticsList: TaskQueueStatisticsList,\n  TaskQueueStatisticsPage: TaskQueueStatisticsPage,\n  TaskQueueStatisticsInstance: TaskQueueStatisticsInstance,\n  TaskQueueStatisticsContext: TaskQueueStatisticsContext\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAE;AACjD,IAAII,SAAS,GAAGJ,OAAO,CACnB,+BAA+B,CAAC,CAAC,CAAE;AACvC,IAAIK,MAAM,GAAGL,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAE;;AAErD,IAAIM,uBAAuB;AAC3B,IAAIC,uBAAuB;AAC3B,IAAIC,2BAA2B;AAC/B,IAAIC,0BAA0B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,uBAAuB,GAAG,SAASA,uBAAuBA,CAACI,OAAO,EACNC,YAAY,EACZC,YAAY,EAAE;EACxE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,SAASC,+BAA+BA,CAACC,GAAG,EAAE;IAC5C,OAAOD,+BAA+B,CAACE,GAAG,CAACD,GAAG,CAAC;EACjD;EAEAD,+BAA+B,CAACG,QAAQ,GAAGN,OAAO;EAClD;EACAG,+BAA+B,CAACI,SAAS,GAAG;IAC1CN,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA;EAChB,CAAC;EACD;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAC,+BAA+B,CAACE,GAAG,GAAG,SAASA,GAAGA,CAAA,EAAG;IACnD,OAAO,IAAIN,0BAA0B,CACnC,IAAI,CAACO,QAAQ,EACb,IAAI,CAACC,SAAS,CAACN,YAAY,EAC3B,IAAI,CAACM,SAAS,CAACL,YACjB,CAAC;EACH,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAC,+BAA+B,CAACK,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IACzD,OAAO,IAAI,CAACD,SAAS;EACvB,CAAC;EAEDJ,+BAA+B,CAACX,IAAI,CAACiB,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EACzEC,OAAO,EAAE;IACX,OAAOpB,IAAI,CAACiB,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;EAC7C,CAAC;EAED,OAAOT,+BAA+B;AACxC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,uBAAuB,GAAG,SAASA,uBAAuBA,CAACG,OAAO,EAAEa,QAAQ,EAChBC,QAAQ,EAAE;EACpE;EACA,IAAI,CAACP,SAAS,GAAGO,QAAQ;EAEzBrB,IAAI,CAACsB,SAAS,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,EAAEjB,OAAO,EAAEa,QAAQ,EAAE,IAAI,CAACN,SAAS,CAAC;AAC1E,CAAC;AAEDhB,CAAC,CAAC2B,MAAM,CAACrB,uBAAuB,CAACkB,SAAS,EAAEtB,IAAI,CAACsB,SAAS,CAAC;AAC3DlB,uBAAuB,CAACkB,SAAS,CAACC,WAAW,GAAGnB,uBAAuB;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,uBAAuB,CAACkB,SAAS,CAACI,WAAW,GAAG,SAASA,WAAWA,CAACC,OAAO,EAAE;EAC5E,OAAO,IAAItB,2BAA2B,CACpC,IAAI,CAACQ,QAAQ,EACbc,OAAO,EACP,IAAI,CAACb,SAAS,CAACN,YAAY,EAC3B,IAAI,CAACM,SAAS,CAACL,YACjB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,uBAAuB,CAACkB,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC3D,IAAIa,KAAK,GAAG,CAAC,CAAC;EACd9B,CAAC,CAAC+B,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAACjC,CAAC,CAACkC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAEjC,CAAC,CAACmC,UAAU,CAACH,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAEDxB,uBAAuB,CAACkB,SAAS,CAACvB,IAAI,CAACiB,OAAO,CAACC,MAAM,CAAC,GAAG,SAASD,OAAOA,CAACE,KAAK,EAC3EC,OAAO,EAAE;EACX,OAAOpB,IAAI,CAACiB,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAd,2BAA2B,GAAG,SAASA,2BAA2BA,CAACE,OAAO,EACtEoB,OAAO,EAAEnB,YAAY,EAAEC,YAAY,EAAE;EACvC,IAAI,CAACI,QAAQ,GAAGN,OAAO;;EAEvB;EACA,IAAI,CAAC2B,UAAU,GAAGP,OAAO,CAACQ,WAAW,CAAC,CAAC;EACvC,IAAI,CAACC,UAAU,GAAGT,OAAO,CAACS,UAAU,CAAC,CAAC;EACtC,IAAI,CAACC,QAAQ,GAAGV,OAAO,CAACU,QAAQ,CAAC,CAAC;EAClC,IAAI,CAAC5B,YAAY,GAAGkB,OAAO,CAACW,cAAc,CAAC,CAAC;EAC5C,IAAI,CAAC9B,YAAY,GAAGmB,OAAO,CAACY,aAAa,CAAC,CAAC;EAC3C,IAAI,CAACC,GAAG,GAAGb,OAAO,CAACa,GAAG,CAAC,CAAC;;EAExB;EACA,IAAI,CAACC,QAAQ,GAAGC,SAAS;EACzB,IAAI,CAAC5B,SAAS,GAAG;IAACN,YAAY,EAAEA,YAAY;IAAEC,YAAY,EAAEA;EAAc,CAAC;AAC7E,CAAC;AAEDkC,MAAM,CAACC,cAAc,CAACvC,2BAA2B,CAACiB,SAAS,EACzD,QAAQ,EAAE;EACVV,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAAC6B,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAInC,0BAA0B,CAC5C,IAAI,CAACO,QAAQ,EACb,IAAI,CAACC,SAAS,CAACN,YAAY,EAC3B,IAAI,CAACM,SAAS,CAACL,YACjB,CAAC;IACH;IAEA,OAAO,IAAI,CAACgC,QAAQ;EACtB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApC,2BAA2B,CAACiB,SAAS,CAACuB,KAAK,GAAG,SAASA,KAAKA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC3E,OAAO,IAAI,CAACC,MAAM,CAACH,KAAK,CAACC,IAAI,EAAEC,QAAQ,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1C,2BAA2B,CAACiB,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC/D,IAAIa,KAAK,GAAG,CAAC,CAAC;EACd9B,CAAC,CAAC+B,MAAM,CAAC,IAAI,EAAE,UAASC,KAAK,EAAEC,GAAG,EAAE;IAClC,IAAI,CAACjC,CAAC,CAACkC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,IAAI,CAAEjC,CAAC,CAACmC,UAAU,CAACH,KAAK,CAAC,EAAE;MACpDF,KAAK,CAACG,GAAG,CAAC,GAAGD,KAAK;IACpB;EACF,CAAC,CAAC;EACF,OAAOF,KAAK;AACd,CAAC;AAEDvB,2BAA2B,CAACiB,SAAS,CAACvB,IAAI,CAACiB,OAAO,CAACC,MAAM,CAAC,GAAG,SACzDD,OAAOA,CAACE,KAAK,EAAEC,OAAO,EAAE;EAC1B,OAAOpB,IAAI,CAACiB,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,0BAA0B,GAAG,SAASA,0BAA0BA,CAACC,OAAO,EACpEC,YAAY,EAAEC,YAAY,EAAE;EAC9B,IAAI,CAACI,QAAQ,GAAGN,OAAO;;EAEvB;EACA,IAAI,CAACO,SAAS,GAAG;IAACN,YAAY,EAAEA,YAAY;IAAEC,YAAY,EAAEA;EAAc,CAAC;EAC3E,IAAI,CAACwC,IAAI,GAAGnD,CAAC,CAACoD,QAAQ,CACpB,2EAA2E,CAAC;EAC9E,CAAC,CAAC,IAAI,CAACpC,SAAS,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,0BAA0B,CAACgB,SAAS,CAACuB,KAAK,GAAG,SAASA,KAAKA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC1E,IAAIjD,CAAC,CAACmC,UAAU,CAACa,IAAI,CAAC,EAAE;IACtBC,QAAQ,GAAGD,IAAI;IACfA,IAAI,GAAG,CAAC,CAAC;EACX;EACAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIK,QAAQ,GAAGvD,CAAC,CAACwD,KAAK,CAAC,CAAC;EACxB,IAAIC,IAAI,GAAGnD,MAAM,CAACoD,EAAE,CAAC;IACnB,SAAS,EAAErD,SAAS,CAACsD,eAAe,CAACzD,CAAC,CAACc,GAAG,CAACkC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC5D,SAAS,EAAEhD,CAAC,CAACc,GAAG,CAACkC,IAAI,EAAE,SAAS,CAAC;IACjC,WAAW,EAAE7C,SAAS,CAACsD,eAAe,CAACzD,CAAC,CAACc,GAAG,CAACkC,IAAI,EAAE,WAAW,CAAC,CAAC;IAChE,aAAa,EAAEhD,CAAC,CAACc,GAAG,CAACkC,IAAI,EAAE,aAAa,CAAC;IACzC,iBAAiB,EAAEhD,CAAC,CAACc,GAAG,CAACkC,IAAI,EAAE,iBAAiB;EAClD,CAAC,CAAC;EAEF,IAAIU,OAAO,GAAG,IAAI,CAAC3C,QAAQ,CAACgC,KAAK,CAAC;IAACY,GAAG,EAAE,IAAI,CAACR,IAAI;IAAES,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAEN;EAAI,CAAC,CAAC;EAEhFG,OAAO,GAAGA,OAAO,CAACI,IAAI,CAAC,UAASjC,OAAO,EAAE;IACvCwB,QAAQ,CAACU,OAAO,CAAC,IAAIxD,2BAA2B,CAC9C,IAAI,CAACQ,QAAQ,EACbc,OAAO,EACP,IAAI,CAACb,SAAS,CAACN,YAAY,EAC3B,IAAI,CAACM,SAAS,CAACL,YACjB,CAAC,CAAC;EACJ,CAAC,CAACqD,IAAI,CAAC,IAAI,CAAC,CAAC;EAEbN,OAAO,CAACO,KAAK,CAAC,UAASC,KAAK,EAAE;IAC5Bb,QAAQ,CAACc,MAAM,CAACD,KAAK,CAAC;EACxB,CAAC,CAAC;EAEF,IAAIlE,CAAC,CAACmC,UAAU,CAACc,QAAQ,CAAC,EAAE;IAC1BI,QAAQ,CAACK,OAAO,CAACU,OAAO,CAACnB,QAAQ,CAAC;EACpC;EAEA,OAAOI,QAAQ,CAACK,OAAO;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlD,0BAA0B,CAACgB,SAAS,CAACP,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC9D,OAAO,IAAI,CAACD,SAAS;AACvB,CAAC;AAEDR,0BAA0B,CAACgB,SAAS,CAACvB,IAAI,CAACiB,OAAO,CAACC,MAAM,CAAC,GAAG,SACxDD,OAAOA,CAACE,KAAK,EAAEC,OAAO,EAAE;EAC1B,OAAOpB,IAAI,CAACiB,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,EAAEI,OAAO,CAAC;AAC7C,CAAC;AAEDgD,MAAM,CAACC,OAAO,GAAG;EACfjE,uBAAuB,EAAEA,uBAAuB;EAChDC,uBAAuB,EAAEA,uBAAuB;EAChDC,2BAA2B,EAAEA,2BAA2B;EACxDC,0BAA0B,EAAEA;AAC9B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}