{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar NotificationList;\nvar NotificationPage;\nvar NotificationInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationList\n *\n * @param {Twilio.Notify.V1} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n */\n/* jshint ignore:end */\nNotificationList = function NotificationList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function notifications\n   * @memberof Twilio.Notify.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Notify.V1.ServiceContext.NotificationContext}\n   */\n  /* jshint ignore:end */\n  function NotificationListInstance(sid) {\n    return NotificationListInstance.get(sid);\n  }\n  NotificationListInstance._version = version;\n  // Path Solution\n  NotificationListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  NotificationListInstance._uri = _.template('/Services/<%= serviceSid %>/Notifications' // jshint ignore:line\n  )(NotificationListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a NotificationInstance\n   *\n   * @function create\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.body] - Indicates the notification body text.\n   * @param {notification.priority} [opts.priority] -\n   *          Two priorities defined: low and high.\n   * @param {number} [opts.ttl] -\n   *          This parameter specifies how long the notification is valid.\n   * @param {string} [opts.title] - Indicates the notification title.\n   * @param {string} [opts.sound] - Indicates a sound to be played.\n   * @param {string} [opts.action] -\n   *          Specifies the actions to be displayed for the notification.\n   * @param {string} [opts.data] -\n   *          This parameter specifies the custom key-value pairs of the notification's payload.\n   * @param {string} [opts.apn] -\n   *          APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.\n   * @param {string} [opts.gcm] -\n   *          GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.\n   * @param {string} [opts.sms] -\n   *          SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.\n   * @param {string} [opts.facebookMessenger] -\n   *          Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.\n   * @param {string} [opts.fcm] -\n   *          FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.\n   * @param {string|list} [opts.segment] - The segment\n   * @param {string} [opts.alexa] - The alexa\n   * @param {string|list} [opts.toBinding] -\n   *          The destination address in a JSON object.\n   * @param {string|list} [opts.identity] -\n   *          Delivery will be attempted only to Bindings with an Identity in this list.\n   * @param {string|list} [opts.tag] -\n   *          Delivery will be attempted only to Bindings that have all of the Tags in this list.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed NotificationInstance\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': serialize.map(_.get(opts, 'identity'), function (e) {\n        return e;\n      }),\n      'Tag': serialize.map(_.get(opts, 'tag'), function (e) {\n        return e;\n      }),\n      'Body': _.get(opts, 'body'),\n      'Priority': _.get(opts, 'priority'),\n      'Ttl': _.get(opts, 'ttl'),\n      'Title': _.get(opts, 'title'),\n      'Sound': _.get(opts, 'sound'),\n      'Action': _.get(opts, 'action'),\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Apn': serialize.object(_.get(opts, 'apn')),\n      'Gcm': serialize.object(_.get(opts, 'gcm')),\n      'Sms': serialize.object(_.get(opts, 'sms')),\n      'FacebookMessenger': serialize.object(_.get(opts, 'facebookMessenger')),\n      'Fcm': serialize.object(_.get(opts, 'fcm')),\n      'Segment': serialize.map(_.get(opts, 'segment'), function (e) {\n        return e;\n      }),\n      'Alexa': serialize.object(_.get(opts, 'alexa')),\n      'ToBinding': serialize.map(_.get(opts, 'toBinding'), function (e) {\n        return e;\n      })\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new NotificationInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  NotificationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return NotificationListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {NotificationSolution} solution - Path solution\n *\n * @returns NotificationPage\n */\n/* jshint ignore:end */\nNotificationPage = function NotificationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(NotificationPage.prototype, Page.prototype);\nNotificationPage.prototype.constructor = NotificationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of NotificationInstance\n *\n * @function getInstance\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @param {NotificationPayload} payload - Payload response from the API\n *\n * @returns NotificationInstance\n */\n/* jshint ignore:end */\nNotificationPage.prototype.getInstance = function getInstance(payload) {\n  return new NotificationInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nNotificationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationInstance\n *\n * @property {string} sid - The sid\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {Date} dateCreated - The date_created\n * @property {string} identities - List of Identities.\n * @property {string} tags - List of Tags\n * @property {string} segments - The segments\n * @property {notification.priority} priority -\n *          Two priorities defined: low and high.\n * @property {number} ttl -\n *          This parameter specifies how long the notification is valid.\n * @property {string} title - Indicates the notification title.\n * @property {string} body - Indicates the notification body text.\n * @property {string} sound - Indicates a sound to be played.\n * @property {string} action -\n *          Specifies the actions to be displayed for the notification.\n * @property {string} data -\n *          This parameter specifies the custom key-value pairs of the notification's payload.\n * @property {string} apn -\n *          APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.\n * @property {string} gcm -\n *          GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.\n * @property {string} fcm -\n *          FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.\n * @property {string} sms -\n *          SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.\n * @property {string} facebookMessenger -\n *          Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.\n * @property {string} alexa - The alexa\n *\n * @param {V1} version - Version of the resource\n * @param {NotificationPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n */\n/* jshint ignore:end */\nNotificationInstance = function NotificationInstance(version, payload, serviceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.identities = payload.identities; // jshint ignore:line\n  this.tags = payload.tags; // jshint ignore:line\n  this.segments = payload.segments; // jshint ignore:line\n  this.priority = payload.priority; // jshint ignore:line\n  this.ttl = deserialize.integer(payload.ttl); // jshint ignore:line\n  this.title = payload.title; // jshint ignore:line\n  this.body = payload.body; // jshint ignore:line\n  this.sound = payload.sound; // jshint ignore:line\n  this.action = payload.action; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.apn = payload.apn; // jshint ignore:line\n  this.gcm = payload.gcm; // jshint ignore:line\n  this.fcm = payload.fcm; // jshint ignore:line\n  this.sms = payload.sms; // jshint ignore:line\n  this.facebookMessenger = payload.facebook_messenger; // jshint ignore:line\n  this.alexa = payload.alexa; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nNotificationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  NotificationList: NotificationList,\n  NotificationPage: NotificationPage,\n  NotificationInstance: NotificationInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","NotificationList","NotificationPage","NotificationInstance","version","serviceSid","NotificationListInstance","sid","get","_version","_solution","_uri","template","create","opts","callback","isFunction","deferred","defer","data","of","map","e","object","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","service_sid","dateCreated","iso8601DateTime","date_created","identities","tags","segments","priority","ttl","integer","title","body","sound","action","apn","gcm","fcm","sms","facebookMessenger","facebook_messenger","alexa","_context","undefined","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/notify/v1/service/notification.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar NotificationList;\nvar NotificationPage;\nvar NotificationInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationList\n *\n * @param {Twilio.Notify.V1} version - Version of the resource\n * @param {string} serviceSid - The service_sid\n */\n/* jshint ignore:end */\nNotificationList = function NotificationList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function notifications\n   * @memberof Twilio.Notify.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Notify.V1.ServiceContext.NotificationContext}\n   */\n  /* jshint ignore:end */\n  function NotificationListInstance(sid) {\n    return NotificationListInstance.get(sid);\n  }\n\n  NotificationListInstance._version = version;\n  // Path Solution\n  NotificationListInstance._solution = {serviceSid: serviceSid};\n  NotificationListInstance._uri = _.template(\n    '/Services/<%= serviceSid %>/Notifications' // jshint ignore:line\n  )(NotificationListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a NotificationInstance\n   *\n   * @function create\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.body] - Indicates the notification body text.\n   * @param {notification.priority} [opts.priority] -\n   *          Two priorities defined: low and high.\n   * @param {number} [opts.ttl] -\n   *          This parameter specifies how long the notification is valid.\n   * @param {string} [opts.title] - Indicates the notification title.\n   * @param {string} [opts.sound] - Indicates a sound to be played.\n   * @param {string} [opts.action] -\n   *          Specifies the actions to be displayed for the notification.\n   * @param {string} [opts.data] -\n   *          This parameter specifies the custom key-value pairs of the notification's payload.\n   * @param {string} [opts.apn] -\n   *          APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.\n   * @param {string} [opts.gcm] -\n   *          GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.\n   * @param {string} [opts.sms] -\n   *          SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.\n   * @param {string} [opts.facebookMessenger] -\n   *          Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.\n   * @param {string} [opts.fcm] -\n   *          FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.\n   * @param {string|list} [opts.segment] - The segment\n   * @param {string} [opts.alexa] - The alexa\n   * @param {string|list} [opts.toBinding] -\n   *          The destination address in a JSON object.\n   * @param {string|list} [opts.identity] -\n   *          Delivery will be attempted only to Bindings with an Identity in this list.\n   * @param {string|list} [opts.tag] -\n   *          Delivery will be attempted only to Bindings that have all of the Tags in this list.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed NotificationInstance\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': serialize.map(_.get(opts, 'identity'), function(e) { return e; }),\n      'Tag': serialize.map(_.get(opts, 'tag'), function(e) { return e; }),\n      'Body': _.get(opts, 'body'),\n      'Priority': _.get(opts, 'priority'),\n      'Ttl': _.get(opts, 'ttl'),\n      'Title': _.get(opts, 'title'),\n      'Sound': _.get(opts, 'sound'),\n      'Action': _.get(opts, 'action'),\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Apn': serialize.object(_.get(opts, 'apn')),\n      'Gcm': serialize.object(_.get(opts, 'gcm')),\n      'Sms': serialize.object(_.get(opts, 'sms')),\n      'FacebookMessenger': serialize.object(_.get(opts, 'facebookMessenger')),\n      'Fcm': serialize.object(_.get(opts, 'fcm')),\n      'Segment': serialize.map(_.get(opts, 'segment'), function(e) { return e; }),\n      'Alexa': serialize.object(_.get(opts, 'alexa')),\n      'ToBinding': serialize.map(_.get(opts, 'toBinding'), function(e) { return e; })\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new NotificationInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  NotificationListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return NotificationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {NotificationSolution} solution - Path solution\n *\n * @returns NotificationPage\n */\n/* jshint ignore:end */\nNotificationPage = function NotificationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(NotificationPage.prototype, Page.prototype);\nNotificationPage.prototype.constructor = NotificationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of NotificationInstance\n *\n * @function getInstance\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @param {NotificationPayload} payload - Payload response from the API\n *\n * @returns NotificationInstance\n */\n/* jshint ignore:end */\nNotificationPage.prototype.getInstance = function getInstance(payload) {\n  return new NotificationInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nNotificationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationInstance\n *\n * @property {string} sid - The sid\n * @property {string} accountSid - The account_sid\n * @property {string} serviceSid - The service_sid\n * @property {Date} dateCreated - The date_created\n * @property {string} identities - List of Identities.\n * @property {string} tags - List of Tags\n * @property {string} segments - The segments\n * @property {notification.priority} priority -\n *          Two priorities defined: low and high.\n * @property {number} ttl -\n *          This parameter specifies how long the notification is valid.\n * @property {string} title - Indicates the notification title.\n * @property {string} body - Indicates the notification body text.\n * @property {string} sound - Indicates a sound to be played.\n * @property {string} action -\n *          Specifies the actions to be displayed for the notification.\n * @property {string} data -\n *          This parameter specifies the custom key-value pairs of the notification's payload.\n * @property {string} apn -\n *          APNS specific payload that overrides corresponding attributes in a generic payload for Bindings with the apn BindingType.\n * @property {string} gcm -\n *          GCM specific payload that overrides corresponding attributes in generic payload for Bindings with gcm BindingType.\n * @property {string} fcm -\n *          FCM specific payload that overrides corresponding attributes in generic payload for Bindings with fcm BindingType.\n * @property {string} sms -\n *          SMS specific payload that overrides corresponding attributes in generic payload for Bindings with sms BindingType.\n * @property {string} facebookMessenger -\n *          Messenger specific payload that overrides corresponding attributes in generic payload for Bindings with facebook-messenger BindingType.\n * @property {string} alexa - The alexa\n *\n * @param {V1} version - Version of the resource\n * @param {NotificationPayload} payload - The instance payload\n * @param {sid} serviceSid - The service_sid\n */\n/* jshint ignore:end */\nNotificationInstance = function NotificationInstance(version, payload,\n                                                      serviceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.identities = payload.identities; // jshint ignore:line\n  this.tags = payload.tags; // jshint ignore:line\n  this.segments = payload.segments; // jshint ignore:line\n  this.priority = payload.priority; // jshint ignore:line\n  this.ttl = deserialize.integer(payload.ttl); // jshint ignore:line\n  this.title = payload.title; // jshint ignore:line\n  this.body = payload.body; // jshint ignore:line\n  this.sound = payload.sound; // jshint ignore:line\n  this.action = payload.action; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.apn = payload.apn; // jshint ignore:line\n  this.gcm = payload.gcm; // jshint ignore:line\n  this.fcm = payload.fcm; // jshint ignore:line\n  this.sms = payload.sms; // jshint ignore:line\n  this.facebookMessenger = payload.facebook_messenger; // jshint ignore:line\n  this.alexa = payload.alexa; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nNotificationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  NotificationList: NotificationList,\n  NotificationPage: NotificationPage,\n  NotificationInstance: NotificationInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}