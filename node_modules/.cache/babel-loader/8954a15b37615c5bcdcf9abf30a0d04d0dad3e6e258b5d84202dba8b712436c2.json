{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar AssignedAddOnList = require('./incomingPhoneNumber/assignedAddOn').AssignedAddOnList;\nvar LocalList = require('./incomingPhoneNumber/local').LocalList;\nvar MobileList = require('./incomingPhoneNumber/mobile').MobileList;\nvar Page = require('../../../../base/Page'); /* jshint ignore:line */\nvar TollFreeList = require('./incomingPhoneNumber/tollFree').TollFreeList;\nvar deserialize = require('../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../base/values'); /* jshint ignore:line */\n\nvar IncomingPhoneNumberList;\nvar IncomingPhoneNumberPage;\nvar IncomingPhoneNumberInstance;\nvar IncomingPhoneNumberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberList = function IncomingPhoneNumberList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function incomingPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function IncomingPhoneNumberListInstance(sid) {\n    return IncomingPhoneNumberListInstance.get(sid);\n  }\n  IncomingPhoneNumberListInstance._version = version;\n  // Path Solution\n  IncomingPhoneNumberListInstance._solution = {\n    accountSid: accountSid\n  };\n  IncomingPhoneNumberListInstance._uri = _.template('/Accounts/<%= accountSid %>/IncomingPhoneNumbers.json' // jshint ignore:line\n  )(IncomingPhoneNumberListInstance._solution);\n\n  // Components\n  IncomingPhoneNumberListInstance._local = undefined;\n  IncomingPhoneNumberListInstance._mobile = undefined;\n  IncomingPhoneNumberListInstance._tollFree = undefined;\n\n  /* jshint ignore:start */\n  /**\n   * Streams IncomingPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists IncomingPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of IncomingPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a IncomingPhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL we should call to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n   *          Status determining whether the new phone number is enabled for emergency calling\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.phoneNumber] -\n   *          The phone number to purchase in E.164 format\n   * @param {string} [opts.areaCode] - The desired area code for the new phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'AreaCode': _.get(opts, 'areaCode'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a incoming_phone_number\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.get = function get(sid) {\n    return new IncomingPhoneNumberContext(this._version, this._solution.accountSid, sid);\n  };\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'local', {\n    get: function local() {\n      if (!this._local) {\n        this._local = new LocalList(this._version, this._solution.accountSid);\n      }\n      return this._local;\n    }\n  });\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'mobile', {\n    get: function mobile() {\n      if (!this._mobile) {\n        this._mobile = new MobileList(this._version, this._solution.accountSid);\n      }\n      return this._mobile;\n    }\n  });\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'tollFree', {\n    get: function tollFree() {\n      if (!this._tollFree) {\n        this._tollFree = new TollFreeList(this._version, this._solution.accountSid);\n      }\n      return this._tollFree;\n    }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  IncomingPhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return IncomingPhoneNumberListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {IncomingPhoneNumberSolution} solution - Path solution\n *\n * @returns IncomingPhoneNumberPage\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage = function IncomingPhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(IncomingPhoneNumberPage.prototype, Page.prototype);\nIncomingPhoneNumberPage.prototype.constructor = IncomingPhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of IncomingPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @param {IncomingPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nIncomingPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {incoming_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {string} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {incoming_phone_number.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n *\n * @param {V2010} version - Version of the resource\n * @param {IncomingPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance = function IncomingPhoneNumberInstance(version, payload, accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.origin = payload.origin; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(IncomingPhoneNumberInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new IncomingPhoneNumberContext(this._version, this._solution.accountSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Whether the phone number is enabled for emergency calling\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the assignedAddOns\n *\n * @function assignedAddOns\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList}\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.assignedAddOns = function assignedAddOns() {\n  return this._proxy.assignedAddOns;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nIncomingPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext\n *\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList} assignedAddOns -\n *          assignedAddOns resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext = function IncomingPhoneNumberContext(version, accountSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid\n  };\n  this._uri = _.template('/Accounts/<%= accountSid %>/IncomingPhoneNumbers/<%= sid %>.json' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._assignedAddOns = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Whether the phone number is enabled for emergency calling\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AccountSid': _.get(opts, 'accountSid'),\n    'ApiVersion': _.get(opts, 'apiVersion'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n    'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n    'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n    'TrunkSid': _.get(opts, 'trunkSid'),\n    'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n    'IdentitySid': _.get(opts, 'identitySid'),\n    'AddressSid': _.get(opts, 'addressSid')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\nObject.defineProperty(IncomingPhoneNumberContext.prototype, 'assignedAddOns', {\n  get: function () {\n    if (!this._assignedAddOns) {\n      this._assignedAddOns = new AssignedAddOnList(this._version, this._solution.accountSid, this._solution.sid);\n    }\n    return this._assignedAddOns;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nIncomingPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  IncomingPhoneNumberList: IncomingPhoneNumberList,\n  IncomingPhoneNumberPage: IncomingPhoneNumberPage,\n  IncomingPhoneNumberInstance: IncomingPhoneNumberInstance,\n  IncomingPhoneNumberContext: IncomingPhoneNumberContext\n};","map":{"version":3,"names":["Q","require","_","util","AssignedAddOnList","LocalList","MobileList","Page","TollFreeList","deserialize","serialize","values","IncomingPhoneNumberList","IncomingPhoneNumberPage","IncomingPhoneNumberInstance","IncomingPhoneNumberContext","version","accountSid","IncomingPhoneNumberListInstance","sid","get","_version","_solution","_uri","template","_local","undefined","_mobile","_tollFree","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","bool","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","Object","defineProperty","local","mobile","tollFree","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","addressSid","address_sid","addressRequirements","address_requirements","apiVersion","api_version","beta","capabilities","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","identitySid","identity_sid","phoneNumber","phone_number","origin","smsApplicationSid","sms_application_sid","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","statusCallback","status_callback","statusCallbackMethod","status_callback_method","trunkSid","trunk_sid","voiceApplicationSid","voice_application_sid","voiceCallerIdLookup","voice_caller_id_lookup","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","emergencyStatus","emergency_status","emergencyAddressSid","emergency_address_sid","_context","update","_proxy","fetch","remove","assignedAddOns","_assignedAddOns","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/api/v2010/account/incomingPhoneNumber.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AssignedAddOnList = require(\n    './incomingPhoneNumber/assignedAddOn').AssignedAddOnList;\nvar LocalList = require('./incomingPhoneNumber/local').LocalList;\nvar MobileList = require('./incomingPhoneNumber/mobile').MobileList;\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar TollFreeList = require('./incomingPhoneNumber/tollFree').TollFreeList;\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar IncomingPhoneNumberList;\nvar IncomingPhoneNumberPage;\nvar IncomingPhoneNumberInstance;\nvar IncomingPhoneNumberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberList = function IncomingPhoneNumberList(version, accountSid)\n                                                            {\n  /* jshint ignore:start */\n  /**\n   * @function incomingPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function IncomingPhoneNumberListInstance(sid) {\n    return IncomingPhoneNumberListInstance.get(sid);\n  }\n\n  IncomingPhoneNumberListInstance._version = version;\n  // Path Solution\n  IncomingPhoneNumberListInstance._solution = {accountSid: accountSid};\n  IncomingPhoneNumberListInstance._uri = _.template(\n    '/Accounts/<%= accountSid %>/IncomingPhoneNumbers.json' // jshint ignore:line\n  )(IncomingPhoneNumberListInstance._solution);\n\n  // Components\n  IncomingPhoneNumberListInstance._local = undefined;\n  IncomingPhoneNumberListInstance._mobile = undefined;\n  IncomingPhoneNumberListInstance._tollFree = undefined;\n\n  /* jshint ignore:start */\n  /**\n   * Streams IncomingPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists IncomingPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of IncomingPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.getPage = function getPage(targetUrl, callback)\n                                                              {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a IncomingPhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL we should call to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n   *          Status determining whether the new phone number is enabled for emergency calling\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.phoneNumber] -\n   *          The phone number to purchase in E.164 format\n   * @param {string} [opts.areaCode] - The desired area code for the new phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'AreaCode': _.get(opts, 'areaCode'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a incoming_phone_number\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.get = function get(sid) {\n    return new IncomingPhoneNumberContext(this._version, this._solution.accountSid, sid);\n  };\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'local', {\n    get: function local() {\n      if (!this._local) {\n        this._local = new LocalList(this._version, this._solution.accountSid);\n      }\n\n      return this._local;\n    }\n  });\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'mobile', {\n    get: function mobile() {\n      if (!this._mobile) {\n        this._mobile = new MobileList(this._version, this._solution.accountSid);\n      }\n\n      return this._mobile;\n    }\n  });\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'tollFree', {\n    get: function tollFree() {\n      if (!this._tollFree) {\n        this._tollFree = new TollFreeList(this._version, this._solution.accountSid);\n      }\n\n      return this._tollFree;\n    }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  IncomingPhoneNumberListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return IncomingPhoneNumberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {IncomingPhoneNumberSolution} solution - Path solution\n *\n * @returns IncomingPhoneNumberPage\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage = function IncomingPhoneNumberPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(IncomingPhoneNumberPage.prototype, Page.prototype);\nIncomingPhoneNumberPage.prototype.constructor = IncomingPhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of IncomingPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @param {IncomingPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nIncomingPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {incoming_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {string} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {incoming_phone_number.emergency_status} emergencyStatus -\n *          Whether the phone number is enabled for emergency calling\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n *\n * @param {V2010} version - Version of the resource\n * @param {IncomingPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance = function IncomingPhoneNumberInstance(version,\n    payload, accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.origin = payload.origin; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(IncomingPhoneNumberInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new IncomingPhoneNumberContext(\n        this._version,\n        this._solution.accountSid,\n        this._solution.sid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Whether the phone number is enabled for emergency calling\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the assignedAddOns\n *\n * @function assignedAddOns\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList}\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.assignedAddOns = function assignedAddOns()\n    {\n  return this._proxy.assignedAddOns;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nIncomingPhoneNumberInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext\n *\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList} assignedAddOns -\n *          assignedAddOns resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext = function IncomingPhoneNumberContext(version,\n    accountSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, sid: sid, };\n  this._uri = _.template(\n    '/Accounts/<%= accountSid %>/IncomingPhoneNumbers/<%= sid %>.json' // jshint ignore:line\n  )(this._solution);\n\n  // Dependents\n  this._assignedAddOns = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Whether the phone number is enabled for emergency calling\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'AccountSid': _.get(opts, 'accountSid'),\n    'ApiVersion': _.get(opts, 'apiVersion'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n    'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n    'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n    'TrunkSid': _.get(opts, 'trunkSid'),\n    'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n    'IdentitySid': _.get(opts, 'identitySid'),\n    'AddressSid': _.get(opts, 'addressSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(IncomingPhoneNumberContext.prototype,\n  'assignedAddOns', {\n  get: function() {\n    if (!this._assignedAddOns) {\n      this._assignedAddOns = new AssignedAddOnList(\n        this._version,\n        this._solution.accountSid,\n        this._solution.sid\n      );\n    }\n    return this._assignedAddOns;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nIncomingPhoneNumberContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  IncomingPhoneNumberList: IncomingPhoneNumberList,\n  IncomingPhoneNumberPage: IncomingPhoneNumberPage,\n  IncomingPhoneNumberInstance: IncomingPhoneNumberInstance,\n  IncomingPhoneNumberContext: IncomingPhoneNumberContext\n};\n"],"mappings":"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E,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC,IAAI,CAACwI,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAI7I,0BAA0B,CAC5C,IAAI,CAACM,QAAQ,EACb,IAAI,CAACC,SAAS,CAACL,UAAU,EACzB,IAAI,CAACK,SAAS,CAACH,GACjB,CAAC;IACH;IAEA,OAAO,IAAI,CAACyI,QAAQ;EACtB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9I,2BAA2B,CAAC+E,SAAS,CAACgE,MAAM,GAAG,SAASA,MAAMA,CAAC/H,IAAI,EAAEC,QAAQ,EAAE;EAC7E,OAAO,IAAI,CAAC+H,MAAM,CAACD,MAAM,CAAC/H,IAAI,EAAEC,QAAQ,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,2BAA2B,CAAC+E,SAAS,CAACkE,KAAK,GAAG,SAASA,KAAKA,CAAChI,QAAQ,EAAE;EACrE,OAAO,IAAI,CAAC+H,MAAM,CAACC,KAAK,CAAChI,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,2BAA2B,CAAC+E,SAAS,CAACmE,MAAM,GAAG,SAASA,MAAMA,CAACjI,QAAQ,EAAE;EACvE,OAAO,IAAI,CAAC+H,MAAM,CAACE,MAAM,CAACjI,QAAQ,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,2BAA2B,CAAC+E,SAAS,CAACoE,cAAc,GAAG,SAASA,cAAcA,CAAA,EAC1E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"},"metadata":{},"sourceType":"script","externalDependencies":[]}