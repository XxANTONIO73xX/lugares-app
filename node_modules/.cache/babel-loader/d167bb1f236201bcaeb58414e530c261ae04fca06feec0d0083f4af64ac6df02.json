{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../../base/values'); /* jshint ignore:line */\n\nvar ChallengeList;\nvar ChallengePage;\nvar ChallengeInstance;\nvar ChallengeContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList\n *\n * @param {Twilio.Authy.V1} version - Version of the resource\n * @param {string} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {string} factorSid - Factor Sid.\n */\n/* jshint ignore:end */\nChallengeList = function ChallengeList(version, serviceSid, identity, factorSid) {\n  /* jshint ignore:start */\n  /**\n   * @function challenges\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext}\n   */\n  /* jshint ignore:end */\n  function ChallengeListInstance(sid) {\n    return ChallengeListInstance.get(sid);\n  }\n  ChallengeListInstance._version = version;\n  // Path Solution\n  ChallengeListInstance._solution = {\n    serviceSid: serviceSid,\n    identity: identity,\n    factorSid: factorSid\n  };\n  ChallengeListInstance._uri = _.template('/Services/<%= serviceSid %>/Entities/<%= identity %>/Factors/<%= factorSid %>/Challenges' // jshint ignore:line\n  )(ChallengeListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a ChallengeInstance\n   *\n   * @function create\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {Date} [opts.expirationDate] -\n   *          The future date in which this Challenge will expire\n   * @param {string} [opts.details] -\n   *          Public details provided to contextualize the Challenge\n   * @param {string} [opts.hiddenDetails] -\n   *          Hidden details provided to contextualize the Challenge\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ChallengeInstance\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'ExpirationDate': serialize.iso8601DateTime(_.get(opts, 'expirationDate')),\n      'Details': _.get(opts, 'details'),\n      'HiddenDetails': _.get(opts, 'hiddenDetails')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ChallengeInstance(this._version, payload, this._solution.serviceSid, this._solution.identity, this._solution.factorSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a challenge\n   *\n   * @function get\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this Challenge, or `latest`.\n   *\n   * @returns {Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext}\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.get = function get(sid) {\n    return new ChallengeContext(this._version, this._solution.serviceSid, this._solution.identity, this._solution.factorSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  ChallengeListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return ChallengeListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChallengeSolution} solution - Path solution\n *\n * @returns ChallengePage\n */\n/* jshint ignore:end */\nChallengePage = function ChallengePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(ChallengePage.prototype, Page.prototype);\nChallengePage.prototype.constructor = ChallengePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ChallengeInstance\n *\n * @function getInstance\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage#\n *\n * @param {ChallengePayload} payload - Payload response from the API\n *\n * @returns ChallengeInstance\n */\n/* jshint ignore:end */\nChallengePage.prototype.getInstance = function getInstance(payload) {\n  return new ChallengeInstance(this._version, payload, this._solution.serviceSid, this._solution.identity, this._solution.factorSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nChallengePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance\n *\n * @property {string} sid - A string that uniquely identifies this Challenge.\n * @property {string} accountSid - Account Sid.\n * @property {string} serviceSid - Service Sid.\n * @property {string} entitySid - Entity Sid.\n * @property {string} identity - Unique identity of the Entity\n * @property {string} factorSid - Factor Sid.\n * @property {Date} dateCreated - The date this Challenge was created\n * @property {Date} dateUpdated - The date this Challenge was updated\n * @property {Date} dateResponded - The date this Challenge was responded\n * @property {Date} expirationDate - The date this Challenge is expired\n * @property {challenge.challenge_statuses} status - The Status of this Challenge\n * @property {challenge.challenge_reasons} respondedReason -\n *          The Reason of this Challenge `status`\n * @property {string} details -\n *          Public details provided to contextualize the Challenge\n * @property {string} hiddenDetails -\n *          Hidden details provided to contextualize the Challenge\n * @property {challenge.factor_types} factorType -\n *          The Factor Type of this Challenge\n * @property {challenge.factor_strengths} factorStrength -\n *          The Factor Strength of this Challenge\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {ChallengePayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {sid} factorSid - Factor Sid.\n * @param {string} sid -\n *          A string that uniquely identifies this Challenge, or `latest`.\n */\n/* jshint ignore:end */\nChallengeInstance = function ChallengeInstance(version, payload, serviceSid, identity, factorSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.entitySid = payload.entity_sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.factorSid = payload.factor_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.dateResponded = deserialize.iso8601DateTime(payload.date_responded); // jshint ignore:line\n  this.expirationDate = deserialize.iso8601DateTime(payload.expiration_date); // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.respondedReason = payload.responded_reason; // jshint ignore:line\n  this.details = payload.details; // jshint ignore:line\n  this.hiddenDetails = payload.hidden_details; // jshint ignore:line\n  this.factorType = payload.factor_type; // jshint ignore:line\n  this.factorStrength = payload.factor_strength; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    identity: identity,\n    factorSid: factorSid,\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(ChallengeInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ChallengeContext(this._version, this._solution.serviceSid, this._solution.identity, this._solution.factorSid, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * remove a ChallengeInstance\n *\n * @function remove\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ChallengeInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ChallengeInstance\n *\n * @function update\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authPayload] - Optional payload to verify the Challenge\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nChallengeInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {sid} factorSid - Factor Sid.\n * @param {string} sid -\n *          A string that uniquely identifies this Challenge, or `latest`.\n */\n/* jshint ignore:end */\nChallengeContext = function ChallengeContext(version, serviceSid, identity, factorSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    serviceSid: serviceSid,\n    identity: identity,\n    factorSid: factorSid,\n    sid: sid\n  };\n  this._uri = _.template('/Services/<%= serviceSid %>/Entities/<%= identity %>/Factors/<%= factorSid %>/Challenges/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ChallengeInstance\n *\n * @function remove\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ChallengeInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ChallengeInstance(this._version, payload, this._solution.serviceSid, this._solution.identity, this._solution.factorSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ChallengeInstance\n *\n * @function update\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authPayload] - Optional payload to verify the Challenge\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AuthPayload': _.get(opts, 'authPayload')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ChallengeInstance(this._version, payload, this._solution.serviceSid, this._solution.identity, this._solution.factorSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengeContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nChallengeContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  ChallengeList: ChallengeList,\n  ChallengePage: ChallengePage,\n  ChallengeInstance: ChallengeInstance,\n  ChallengeContext: ChallengeContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","ChallengeList","ChallengePage","ChallengeInstance","ChallengeContext","version","serviceSid","identity","factorSid","ChallengeListInstance","sid","get","_version","_solution","_uri","template","create","opts","callback","isFunction","deferred","defer","data","of","iso8601DateTime","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","service_sid","entitySid","entity_sid","factor_sid","dateCreated","date_created","dateUpdated","date_updated","dateResponded","date_responded","expirationDate","expiration_date","status","respondedReason","responded_reason","details","hiddenDetails","hidden_details","factorType","factor_type","factorStrength","factor_strength","url","_context","undefined","Object","defineProperty","remove","_proxy","fetch","update","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/authy/v1/service/entity/factor/challenge.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../../base/values');  /* jshint ignore:line */\n\nvar ChallengeList;\nvar ChallengePage;\nvar ChallengeInstance;\nvar ChallengeContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList\n *\n * @param {Twilio.Authy.V1} version - Version of the resource\n * @param {string} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {string} factorSid - Factor Sid.\n */\n/* jshint ignore:end */\nChallengeList = function ChallengeList(version, serviceSid, identity, factorSid)\n                                        {\n  /* jshint ignore:start */\n  /**\n   * @function challenges\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext}\n   */\n  /* jshint ignore:end */\n  function ChallengeListInstance(sid) {\n    return ChallengeListInstance.get(sid);\n  }\n\n  ChallengeListInstance._version = version;\n  // Path Solution\n  ChallengeListInstance._solution = {\n    serviceSid: serviceSid,\n    identity: identity,\n    factorSid: factorSid\n  };\n  ChallengeListInstance._uri = _.template(\n    '/Services/<%= serviceSid %>/Entities/<%= identity %>/Factors/<%= factorSid %>/Challenges' // jshint ignore:line\n  )(ChallengeListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * create a ChallengeInstance\n   *\n   * @function create\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {Date} [opts.expirationDate] -\n   *          The future date in which this Challenge will expire\n   * @param {string} [opts.details] -\n   *          Public details provided to contextualize the Challenge\n   * @param {string} [opts.hiddenDetails] -\n   *          Hidden details provided to contextualize the Challenge\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ChallengeInstance\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'ExpirationDate': serialize.iso8601DateTime(_.get(opts, 'expirationDate')),\n      'Details': _.get(opts, 'details'),\n      'HiddenDetails': _.get(opts, 'hiddenDetails')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ChallengeInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.identity,\n        this._solution.factorSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a challenge\n   *\n   * @function get\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this Challenge, or `latest`.\n   *\n   * @returns {Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext}\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.get = function get(sid) {\n    return new ChallengeContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.identity,\n      this._solution.factorSid,\n      sid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ChallengeListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ChallengeListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ChallengeListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChallengeSolution} solution - Path solution\n *\n * @returns ChallengePage\n */\n/* jshint ignore:end */\nChallengePage = function ChallengePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ChallengePage.prototype, Page.prototype);\nChallengePage.prototype.constructor = ChallengePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ChallengeInstance\n *\n * @function getInstance\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage#\n *\n * @param {ChallengePayload} payload - Payload response from the API\n *\n * @returns ChallengeInstance\n */\n/* jshint ignore:end */\nChallengePage.prototype.getInstance = function getInstance(payload) {\n  return new ChallengeInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.identity,\n    this._solution.factorSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChallengePage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance\n *\n * @property {string} sid - A string that uniquely identifies this Challenge.\n * @property {string} accountSid - Account Sid.\n * @property {string} serviceSid - Service Sid.\n * @property {string} entitySid - Entity Sid.\n * @property {string} identity - Unique identity of the Entity\n * @property {string} factorSid - Factor Sid.\n * @property {Date} dateCreated - The date this Challenge was created\n * @property {Date} dateUpdated - The date this Challenge was updated\n * @property {Date} dateResponded - The date this Challenge was responded\n * @property {Date} expirationDate - The date this Challenge is expired\n * @property {challenge.challenge_statuses} status - The Status of this Challenge\n * @property {challenge.challenge_reasons} respondedReason -\n *          The Reason of this Challenge `status`\n * @property {string} details -\n *          Public details provided to contextualize the Challenge\n * @property {string} hiddenDetails -\n *          Hidden details provided to contextualize the Challenge\n * @property {challenge.factor_types} factorType -\n *          The Factor Type of this Challenge\n * @property {challenge.factor_strengths} factorStrength -\n *          The Factor Strength of this Challenge\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {ChallengePayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {sid} factorSid - Factor Sid.\n * @param {string} sid -\n *          A string that uniquely identifies this Challenge, or `latest`.\n */\n/* jshint ignore:end */\nChallengeInstance = function ChallengeInstance(version, payload, serviceSid,\n                                                identity, factorSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.entitySid = payload.entity_sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.factorSid = payload.factor_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.dateResponded = deserialize.iso8601DateTime(payload.date_responded); // jshint ignore:line\n  this.expirationDate = deserialize.iso8601DateTime(payload.expiration_date); // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.respondedReason = payload.responded_reason; // jshint ignore:line\n  this.details = payload.details; // jshint ignore:line\n  this.hiddenDetails = payload.hidden_details; // jshint ignore:line\n  this.factorType = payload.factor_type; // jshint ignore:line\n  this.factorStrength = payload.factor_strength; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    identity: identity,\n    factorSid: factorSid,\n    sid: sid || this.sid,\n  };\n};\n\nObject.defineProperty(ChallengeInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new ChallengeContext(\n        this._version,\n        this._solution.serviceSid,\n        this._solution.identity,\n        this._solution.factorSid,\n        this._solution.sid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * remove a ChallengeInstance\n *\n * @function remove\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ChallengeInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ChallengeInstance\n *\n * @function update\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authPayload] - Optional payload to verify the Challenge\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengeInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChallengeInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChallengeContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {string} identity - Unique identity of the Entity\n * @param {sid} factorSid - Factor Sid.\n * @param {string} sid -\n *          A string that uniquely identifies this Challenge, or `latest`.\n */\n/* jshint ignore:end */\nChallengeContext = function ChallengeContext(version, serviceSid, identity,\n                                              factorSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, identity: identity, factorSid: factorSid, sid: sid, };\n  this._uri = _.template(\n    '/Services/<%= serviceSid %>/Entities/<%= identity %>/Factors/<%= factorSid %>/Challenges/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ChallengeInstance\n *\n * @function remove\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ChallengeInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ChallengeInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.identity,\n      this._solution.factorSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ChallengeInstance\n *\n * @function update\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authPayload] - Optional payload to verify the Challenge\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChallengeInstance\n */\n/* jshint ignore:end */\nChallengeContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'AuthPayload': _.get(opts, 'authPayload')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ChallengeInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.identity,\n      this._solution.factorSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.ServiceContext.EntityContext.FactorContext.ChallengeContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChallengeContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nChallengeContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ChallengeList: ChallengeList,\n  ChallengePage: ChallengePage,\n  ChallengeInstance: ChallengeInstance,\n  ChallengeContext: ChallengeContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}