{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar Policy = require('./TaskRouterCapability').Policy;\nvar EVENT_URL_BASE = 'https://event-bridge.twilio.com/v1/wschannels';\nvar TASKROUTER_BASE_URL = 'https://taskrouter.twilio.com';\nvar TASKROUTER_VERSION = 'v1';\n\n/**\n * Build the default Policies for a worker\n *\n * @param {string} version TaskRouter version\n * @param {string} workspaceSid workspace sid\n * @param {string} workerSid worker sid\n * @returns {Array<Policy>} list of Policies\n */\nfunction defaultWorkerPolicies(version, workspaceSid, workerSid) {\n  var activities = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Activities'], '/'),\n    method: 'GET',\n    allow: true\n  });\n  var tasks = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Tasks', '**'], '/'),\n    method: 'GET',\n    allow: true\n  });\n  var reservations = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Workers', workerSid, 'Reservations', '**'], '/'),\n    method: 'GET',\n    allow: true\n  });\n  var workerFetch = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Workers', workerSid], '/'),\n    method: 'GET',\n    allow: true\n  });\n  return [activities, tasks, reservations, workerFetch];\n}\n\n/**\n * Build the default Event Bridge Policies\n *\n * @param {string} accountSid account sid\n * @param {string} channelId channel id\n * @returns {Array<Policy>} list of Policies\n */\nfunction defaultEventBridgePolicies(accountSid, channelId) {\n  var url = _.join([EVENT_URL_BASE, accountSid, channelId], '/');\n  return [new Policy({\n    url: url,\n    method: 'GET',\n    allow: true\n  }), new Policy({\n    url: url,\n    method: 'POST',\n    allow: true\n  })];\n}\n\n/**\n * Generate TaskRouter workspace url\n *\n * @param {string} [workspaceSid] workspace sid or '**' for all workspaces\n * @return {string} generated url\n */\nfunction workspacesUrl(workspaceSid) {\n  return _.join(_.filter([TASKROUTER_BASE_URL, TASKROUTER_VERSION, 'Workspaces', workspaceSid], _.isString), '/');\n}\n\n/**\n * Generate TaskRouter task queue url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [taskQueueSid] task queue sid or '**' for all task queues\n * @return {string} generated url\n */\nfunction taskQueuesUrl(workspaceSid, taskQueueSid) {\n  return _.join(_.filter([workspacesUrl(workspaceSid), 'TaskQueues', taskQueueSid], _.isString), '/');\n}\n\n/**\n * Generate TaskRouter task url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [taskSid] task sid or '**' for all tasks\n * @returns {string} generated url\n */\nfunction tasksUrl(workspaceSid, taskSid) {\n  return _.join(_.filter([workspacesUrl(workspaceSid), 'Tasks', taskSid], _.isString), '/');\n}\n\n/**\n * Generate TaskRouter activity url\n * \n * @param {string} workspaceSid workspace sid\n * @param {string} [activitySid] activity sid or '**' for all activities\n * @returns {string} generated url\n */\nfunction activitiesUrl(workspaceSid, activitySid) {\n  return _.join(_.filter([workspacesUrl(workspaceSid), 'Activities', activitySid], _.isString), '/');\n}\n\n/**\n * Generate TaskRouter worker url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [workerSid] worker sid or '**' for all workers\n * @returns {string} generated url\n */\nfunction workersUrl(workspaceSid, workerSid) {\n  return _.join(_.filter([workspacesUrl(workspaceSid), 'Workers', workerSid], _.isString), '/');\n}\n\n/**\n * Generate TaskRouter worker reservation url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} workerSid worker sid\n * @param {string} [reservationSid] reservation sid or '**' for all reservations\n * @returns {string} generated url\n */\nfunction reservationsUrl(workspaceSid, workerSid, reservationSid) {\n  return _.join(_.filter([workersUrl(workspaceSid, workerSid), 'Reservations', reservationSid], _.isString), '/');\n}\nmodule.exports = {\n  defaultWorkerPolicies: defaultWorkerPolicies,\n  defaultEventBridgePolicies: defaultEventBridgePolicies,\n  workspacesUrl: workspacesUrl,\n  taskQueuesUrl: taskQueuesUrl,\n  tasksUrl: tasksUrl,\n  activitiesUrl: activitiesUrl,\n  workersUrl: workersUrl,\n  reservationsUrl: reservationsUrl\n};","map":{"version":3,"names":["_","require","Policy","EVENT_URL_BASE","TASKROUTER_BASE_URL","TASKROUTER_VERSION","defaultWorkerPolicies","version","workspaceSid","workerSid","activities","url","join","method","allow","tasks","reservations","workerFetch","defaultEventBridgePolicies","accountSid","channelId","workspacesUrl","filter","isString","taskQueuesUrl","taskQueueSid","tasksUrl","taskSid","activitiesUrl","activitySid","workersUrl","reservationsUrl","reservationSid","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/jwt/taskrouter/util.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar Policy = require('./TaskRouterCapability').Policy;\n\nvar EVENT_URL_BASE = 'https://event-bridge.twilio.com/v1/wschannels';\nvar TASKROUTER_BASE_URL = 'https://taskrouter.twilio.com';\nvar TASKROUTER_VERSION = 'v1';\n\n/**\n * Build the default Policies for a worker\n *\n * @param {string} version TaskRouter version\n * @param {string} workspaceSid workspace sid\n * @param {string} workerSid worker sid\n * @returns {Array<Policy>} list of Policies\n */\nfunction defaultWorkerPolicies(version, workspaceSid, workerSid) {\n  var activities = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Activities'], '/'),\n    method: 'GET',\n    allow: true\n  });\n  var tasks = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Tasks', '**'], '/'),\n    method: 'GET',\n    allow: true\n  });\n  var reservations = new Policy({\n    url: _.join(\n      [TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Workers', workerSid, 'Reservations', '**'],\n      '/'\n    ),\n    method: 'GET',\n    allow: true\n  });\n  var workerFetch = new Policy({\n    url: _.join([TASKROUTER_BASE_URL, version, 'Workspaces', workspaceSid, 'Workers', workerSid], '/'),\n    method: 'GET',\n    allow: true\n  });\n\n  return [activities, tasks, reservations, workerFetch];\n}\n\n/**\n * Build the default Event Bridge Policies\n *\n * @param {string} accountSid account sid\n * @param {string} channelId channel id\n * @returns {Array<Policy>} list of Policies\n */\nfunction defaultEventBridgePolicies(accountSid, channelId) {\n  var url = _.join([EVENT_URL_BASE, accountSid, channelId], '/');\n  return [\n    new Policy({\n      url: url,\n      method: 'GET',\n      allow: true\n    }),\n    new Policy({\n      url: url,\n      method: 'POST',\n      allow: true\n    })\n  ];\n}\n\n/**\n * Generate TaskRouter workspace url\n *\n * @param {string} [workspaceSid] workspace sid or '**' for all workspaces\n * @return {string} generated url\n */\nfunction workspacesUrl(workspaceSid) {\n  return _.join(\n    _.filter([TASKROUTER_BASE_URL, TASKROUTER_VERSION, 'Workspaces', workspaceSid], _.isString),\n    '/'\n  );\n}\n\n/**\n * Generate TaskRouter task queue url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [taskQueueSid] task queue sid or '**' for all task queues\n * @return {string} generated url\n */\nfunction taskQueuesUrl(workspaceSid, taskQueueSid) {\n  return _.join(\n    _.filter([workspacesUrl(workspaceSid), 'TaskQueues', taskQueueSid], _.isString),\n    '/'\n  );\n}\n\n/**\n * Generate TaskRouter task url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [taskSid] task sid or '**' for all tasks\n * @returns {string} generated url\n */\nfunction tasksUrl(workspaceSid, taskSid) {\n  return _.join(\n    _.filter([workspacesUrl(workspaceSid), 'Tasks', taskSid], _.isString),\n    '/'\n  );\n}\n\n/**\n * Generate TaskRouter activity url\n * \n * @param {string} workspaceSid workspace sid\n * @param {string} [activitySid] activity sid or '**' for all activities\n * @returns {string} generated url\n */\nfunction activitiesUrl(workspaceSid, activitySid) {\n  return _.join(\n    _.filter([workspacesUrl(workspaceSid), 'Activities', activitySid], _.isString),\n    '/'\n  );\n}\n\n/**\n * Generate TaskRouter worker url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} [workerSid] worker sid or '**' for all workers\n * @returns {string} generated url\n */\nfunction workersUrl(workspaceSid, workerSid) {\n  return _.join(\n    _.filter([workspacesUrl(workspaceSid), 'Workers', workerSid], _.isString),\n    '/'\n  );\n}\n\n/**\n * Generate TaskRouter worker reservation url\n *\n * @param {string} workspaceSid workspace sid\n * @param {string} workerSid worker sid\n * @param {string} [reservationSid] reservation sid or '**' for all reservations\n * @returns {string} generated url\n */\nfunction reservationsUrl(workspaceSid, workerSid, reservationSid) {\n  return _.join(\n    _.filter([workersUrl(workspaceSid, workerSid), 'Reservations', reservationSid], _.isString),\n    '/'\n  );\n}\n\n\nmodule.exports = {\n  defaultWorkerPolicies: defaultWorkerPolicies,\n  defaultEventBridgePolicies: defaultEventBridgePolicies,\n\n  workspacesUrl: workspacesUrl,\n  taskQueuesUrl: taskQueuesUrl,\n  tasksUrl: tasksUrl,\n  activitiesUrl: activitiesUrl,\n  workersUrl: workersUrl,\n  reservationsUrl: reservationsUrl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}