{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar HighriskSpecialPrefixList;\nvar HighriskSpecialPrefixPage;\nvar HighriskSpecialPrefixInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n * @param {string} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixList = function HighriskSpecialPrefixList(version, isoCode) {\n  /* jshint ignore:start */\n  /**\n   * @function highriskSpecialPrefixes\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixContext}\n   */\n  /* jshint ignore:end */\n  function HighriskSpecialPrefixListInstance(sid) {\n    return HighriskSpecialPrefixListInstance.get(sid);\n  }\n  HighriskSpecialPrefixListInstance._version = version;\n  // Path Solution\n  HighriskSpecialPrefixListInstance._solution = {\n    isoCode: isoCode\n  };\n  HighriskSpecialPrefixListInstance._uri = _.template('/DialingPermissions/Countries/<%= isoCode %>/HighRiskSpecialPrefixes' // jshint ignore:line\n  )(HighriskSpecialPrefixListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams HighriskSpecialPrefixInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HighriskSpecialPrefixInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HighriskSpecialPrefixInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HighriskSpecialPrefixInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  HighriskSpecialPrefixListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return HighriskSpecialPrefixListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HighriskSpecialPrefixSolution} solution - Path solution\n *\n * @returns HighriskSpecialPrefixPage\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage = function HighriskSpecialPrefixPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(HighriskSpecialPrefixPage.prototype, Page.prototype);\nHighriskSpecialPrefixPage.prototype.constructor = HighriskSpecialPrefixPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HighriskSpecialPrefixInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @param {HighriskSpecialPrefixPayload} payload - Payload response from the API\n *\n * @returns HighriskSpecialPrefixInstance\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.getInstance = function getInstance(payload) {\n  return new HighriskSpecialPrefixInstance(this._version, payload, this._solution.isoCode);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nHighriskSpecialPrefixPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance\n *\n * @property {string} prefix -\n *          A prefix that includes the E.164 assigned country code\n *\n * @param {V1} version - Version of the resource\n * @param {HighriskSpecialPrefixPayload} payload - The instance payload\n * @param {iso_country_code} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance = function HighriskSpecialPrefixInstance(version, payload, isoCode) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.prefix = payload.prefix; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    isoCode: isoCode\n  };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nHighriskSpecialPrefixInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  HighriskSpecialPrefixList: HighriskSpecialPrefixList,\n  HighriskSpecialPrefixPage: HighriskSpecialPrefixPage,\n  HighriskSpecialPrefixInstance: HighriskSpecialPrefixInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","HighriskSpecialPrefixList","HighriskSpecialPrefixPage","HighriskSpecialPrefixInstance","version","isoCode","HighriskSpecialPrefixListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","prefix","_context","undefined","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/voice/v1/dialingPermissions/country/highriskSpecialPrefix.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar HighriskSpecialPrefixList;\nvar HighriskSpecialPrefixPage;\nvar HighriskSpecialPrefixInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n * @param {string} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixList = function HighriskSpecialPrefixList(version, isoCode)\n    {\n  /* jshint ignore:start */\n  /**\n   * @function highriskSpecialPrefixes\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixContext}\n   */\n  /* jshint ignore:end */\n  function HighriskSpecialPrefixListInstance(sid) {\n    return HighriskSpecialPrefixListInstance.get(sid);\n  }\n\n  HighriskSpecialPrefixListInstance._version = version;\n  // Path Solution\n  HighriskSpecialPrefixListInstance._solution = {isoCode: isoCode};\n  HighriskSpecialPrefixListInstance._uri = _.template(\n    '/DialingPermissions/Countries/<%= isoCode %>/HighRiskSpecialPrefixes' // jshint ignore:line\n  )(HighriskSpecialPrefixListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams HighriskSpecialPrefixInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HighriskSpecialPrefixInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HighriskSpecialPrefixInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HighriskSpecialPrefixInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.getPage = function getPage(targetUrl,\n      callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HighriskSpecialPrefixPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HighriskSpecialPrefixListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HighriskSpecialPrefixListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HighriskSpecialPrefixListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HighriskSpecialPrefixSolution} solution - Path solution\n *\n * @returns HighriskSpecialPrefixPage\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage = function HighriskSpecialPrefixPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HighriskSpecialPrefixPage.prototype, Page.prototype);\nHighriskSpecialPrefixPage.prototype.constructor = HighriskSpecialPrefixPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HighriskSpecialPrefixInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @param {HighriskSpecialPrefixPayload} payload - Payload response from the API\n *\n * @returns HighriskSpecialPrefixInstance\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.getInstance = function getInstance(payload)\n    {\n  return new HighriskSpecialPrefixInstance(this._version, payload, this._solution.isoCode);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHighriskSpecialPrefixPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HighriskSpecialPrefixContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance\n *\n * @property {string} prefix -\n *          A prefix that includes the E.164 assigned country code\n *\n * @param {V1} version - Version of the resource\n * @param {HighriskSpecialPrefixPayload} payload - The instance payload\n * @param {iso_country_code} isoCode - The ISO country code\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance = function HighriskSpecialPrefixInstance(version,\n    payload, isoCode) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.prefix = payload.prefix; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {isoCode: isoCode, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.DialingPermissionsContext.CountryContext.HighriskSpecialPrefixInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHighriskSpecialPrefixInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHighriskSpecialPrefixInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HighriskSpecialPrefixList: HighriskSpecialPrefixList,\n  HighriskSpecialPrefixPage: HighriskSpecialPrefixPage,\n  HighriskSpecialPrefixInstance: HighriskSpecialPrefixInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}