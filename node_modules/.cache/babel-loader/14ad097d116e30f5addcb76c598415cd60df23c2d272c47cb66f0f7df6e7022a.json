{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../base/Page'); /* jshint ignore:line */\nvar deserialize = require('../../../base/deserialize'); /* jshint ignore:line */\nvar serialize = require('../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../base/values'); /* jshint ignore:line */\n\nvar HostedNumberOrderList;\nvar HostedNumberOrderPage;\nvar HostedNumberOrderInstance;\nvar HostedNumberOrderContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nHostedNumberOrderList = function HostedNumberOrderList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function hostedNumberOrders\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  function HostedNumberOrderListInstance(sid) {\n    return HostedNumberOrderListInstance.get(sid);\n  }\n  HostedNumberOrderListInstance._version = version;\n  // Path Solution\n  HostedNumberOrderListInstance._solution = {};\n  HostedNumberOrderListInstance._uri = _.template('/HostedNumberOrders' // jshint ignore:line\n  )(HostedNumberOrderListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams HostedNumberOrderInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n          currentResource++;\n          callback(instance, onComplete);\n        });\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HostedNumberOrderInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'IncomingPhoneNumberSid': _.get(opts, 'incomingPhoneNumberSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a HostedNumberOrderInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - An E164 formatted phone number.\n   * @param {boolean} opts.smsCapability - Specify SMS capability to host.\n   * @param {string} [opts.accountSid] - Account Sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {string} [opts.smsUrl] - SMS URL.\n   * @param {string} [opts.smsMethod] - SMS Method.\n   * @param {string} [opts.smsFallbackUrl] - SMS Fallback URL.\n   * @param {string} [opts.smsFallbackMethod] - SMS Fallback Method.\n   * @param {string} [opts.statusCallbackUrl] - Status Callback URL.\n   * @param {string} [opts.statusCallbackMethod] - Status Callback Method.\n   * @param {string} [opts.smsApplicationSid] - SMS Application Sid.\n   * @param {string} [opts.addressSid] - Address sid.\n   * @param {string} [opts.email] - Email.\n   * @param {hosted_number_order.verification_type} [opts.verificationType] -\n   *          Verification Type.\n   * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n    if (_.isUndefined(opts.smsCapability)) {\n      throw new Error('Required parameter \"opts.smsCapability\" missing.');\n    }\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'SmsCapability': serialize.bool(_.get(opts, 'smsCapability')),\n      'AccountSid': _.get(opts, 'accountSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n        return e;\n      }),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'VerificationType': _.get(opts, 'verificationType'),\n      'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid')\n    });\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a hosted_number_order\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} sid - HostedNumberOrder sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.get = function get(sid) {\n    return new HostedNumberOrderContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  HostedNumberOrderListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return HostedNumberOrderListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HostedNumberOrderSolution} solution - Path solution\n *\n * @returns HostedNumberOrderPage\n */\n/* jshint ignore:end */\nHostedNumberOrderPage = function HostedNumberOrderPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(HostedNumberOrderPage.prototype, Page.prototype);\nHostedNumberOrderPage.prototype.constructor = HostedNumberOrderPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HostedNumberOrderInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @param {HostedNumberOrderPayload} payload - Payload response from the API\n *\n * @returns HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.getInstance = function getInstance(payload) {\n  return new HostedNumberOrderInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nHostedNumberOrderPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderInstance\n *\n * @property {string} sid - HostedNumberOrder sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} incomingPhoneNumberSid - IncomingPhoneNumber sid.\n * @property {string} addressSid - Address sid.\n * @property {string} signingDocumentSid - LOA document sid.\n * @property {string} phoneNumber - An E164 formatted phone number.\n * @property {string} capabilities - A mapping of phone number capabilities.\n * @property {string} friendlyName - A human readable description of this resource.\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @property {hosted_number_order.status} status -\n *          The Status of this HostedNumberOrder.\n * @property {string} failureReason -\n *          Why a hosted_number_order reached status \"action-required\"\n * @property {Date} dateCreated - The date this HostedNumberOrder was created.\n * @property {Date} dateUpdated - The date this HostedNumberOrder was updated.\n * @property {number} verificationAttempts -\n *          The number of attempts made to verify ownership of the phone number.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {string} url - The URL of this HostedNumberOrder.\n * @property {hosted_number_order.verification_type} verificationType -\n *          The method used for verifying ownership of the number to be hosted.\n * @property {string} verificationDocumentSid - Verification Document Sid.\n * @property {string} extension -\n *          Phone extension to use for ownership verification call.\n * @property {number} callDelay -\n *          Seconds (0-30) to delay ownership verification call by.\n * @property {string} verificationCode -\n *          The digits passed during the ownership verification call.\n * @property {string} verificationCallSids -\n *          List of IDs for ownership verification calls.\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {HostedNumberOrderPayload} payload - The instance payload\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance = function HostedNumberOrderInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.incomingPhoneNumberSid = payload.incoming_phone_number_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.signingDocumentSid = payload.signing_document_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.failureReason = payload.failure_reason; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.verificationAttempts = deserialize.integer(payload.verification_attempts); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.verificationType = payload.verification_type; // jshint ignore:line\n  this.verificationDocumentSid = payload.verification_document_sid; // jshint ignore:line\n  this.extension = payload.extension; // jshint ignore:line\n  this.callDelay = deserialize.integer(payload.call_delay); // jshint ignore:line\n  this.verificationCode = payload.verification_code; // jshint ignore:line\n  this.verificationCallSids = payload.verification_call_sids; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\nObject.defineProperty(HostedNumberOrderInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new HostedNumberOrderContext(this._version, this._solution.sid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nHostedNumberOrderInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderContext\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderContext = function HostedNumberOrderContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    sid: sid\n  };\n  this._uri = _.template('/HostedNumberOrders/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n      return e;\n    }),\n    'Status': _.get(opts, 'status'),\n    'VerificationCode': _.get(opts, 'verificationCode'),\n    'VerificationType': _.get(opts, 'verificationType'),\n    'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid'),\n    'Extension': _.get(opts, 'extension'),\n    'CallDelay': _.get(opts, 'callDelay')\n  });\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nHostedNumberOrderContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  HostedNumberOrderList: HostedNumberOrderList,\n  HostedNumberOrderPage: HostedNumberOrderPage,\n  HostedNumberOrderInstance: HostedNumberOrderInstance,\n  HostedNumberOrderContext: HostedNumberOrderContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","HostedNumberOrderList","HostedNumberOrderPage","HostedNumberOrderInstance","HostedNumberOrderContext","version","HostedNumberOrderListInstance","sid","get","_version","_solution","_uri","template","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","phoneNumber","smsCapability","bool","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","incomingPhoneNumberSid","incoming_phone_number_sid","addressSid","address_sid","signingDocumentSid","signing_document_sid","phone_number","capabilities","friendlyName","friendly_name","uniqueName","unique_name","status","failureReason","failure_reason","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","verificationAttempts","integer","verification_attempts","email","ccEmails","cc_emails","url","verificationType","verification_type","verificationDocumentSid","verification_document_sid","extension","callDelay","call_delay","verificationCode","verification_code","verificationCallSids","verification_call_sids","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/preview/hosted_numbers/hostedNumberOrder.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar HostedNumberOrderList;\nvar HostedNumberOrderPage;\nvar HostedNumberOrderInstance;\nvar HostedNumberOrderContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nHostedNumberOrderList = function HostedNumberOrderList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function hostedNumberOrders\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  function HostedNumberOrderListInstance(sid) {\n    return HostedNumberOrderListInstance.get(sid);\n  }\n\n  HostedNumberOrderListInstance._version = version;\n  // Path Solution\n  HostedNumberOrderListInstance._solution = {};\n  HostedNumberOrderListInstance._uri = _.template(\n    '/HostedNumberOrders' // jshint ignore:line\n  )(HostedNumberOrderListInstance._solution);\n  /* jshint ignore:start */\n  /**\n   * Streams HostedNumberOrderInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists HostedNumberOrderInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'IncomingPhoneNumberSid': _.get(opts, 'incomingPhoneNumberSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a HostedNumberOrderInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - An E164 formatted phone number.\n   * @param {boolean} opts.smsCapability - Specify SMS capability to host.\n   * @param {string} [opts.accountSid] - Account Sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {string} [opts.smsUrl] - SMS URL.\n   * @param {string} [opts.smsMethod] - SMS Method.\n   * @param {string} [opts.smsFallbackUrl] - SMS Fallback URL.\n   * @param {string} [opts.smsFallbackMethod] - SMS Fallback Method.\n   * @param {string} [opts.statusCallbackUrl] - Status Callback URL.\n   * @param {string} [opts.statusCallbackMethod] - Status Callback Method.\n   * @param {string} [opts.smsApplicationSid] - SMS Application Sid.\n   * @param {string} [opts.addressSid] - Address sid.\n   * @param {string} [opts.email] - Email.\n   * @param {hosted_number_order.verification_type} [opts.verificationType] -\n   *          Verification Type.\n   * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n    if (_.isUndefined(opts.smsCapability)) {\n      throw new Error('Required parameter \"opts.smsCapability\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'SmsCapability': serialize.bool(_.get(opts, 'smsCapability')),\n      'AccountSid': _.get(opts, 'accountSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'VerificationType': _.get(opts, 'verificationType'),\n      'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a hosted_number_order\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} sid - HostedNumberOrder sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.get = function get(sid) {\n    return new HostedNumberOrderContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  HostedNumberOrderListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HostedNumberOrderListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HostedNumberOrderListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HostedNumberOrderSolution} solution - Path solution\n *\n * @returns HostedNumberOrderPage\n */\n/* jshint ignore:end */\nHostedNumberOrderPage = function HostedNumberOrderPage(version, response,\n                                                        solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HostedNumberOrderPage.prototype, Page.prototype);\nHostedNumberOrderPage.prototype.constructor = HostedNumberOrderPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of HostedNumberOrderInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @param {HostedNumberOrderPayload} payload - Payload response from the API\n *\n * @returns HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.getInstance = function getInstance(payload) {\n  return new HostedNumberOrderInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHostedNumberOrderPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderInstance\n *\n * @property {string} sid - HostedNumberOrder sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} incomingPhoneNumberSid - IncomingPhoneNumber sid.\n * @property {string} addressSid - Address sid.\n * @property {string} signingDocumentSid - LOA document sid.\n * @property {string} phoneNumber - An E164 formatted phone number.\n * @property {string} capabilities - A mapping of phone number capabilities.\n * @property {string} friendlyName - A human readable description of this resource.\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @property {hosted_number_order.status} status -\n *          The Status of this HostedNumberOrder.\n * @property {string} failureReason -\n *          Why a hosted_number_order reached status \"action-required\"\n * @property {Date} dateCreated - The date this HostedNumberOrder was created.\n * @property {Date} dateUpdated - The date this HostedNumberOrder was updated.\n * @property {number} verificationAttempts -\n *          The number of attempts made to verify ownership of the phone number.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {string} url - The URL of this HostedNumberOrder.\n * @property {hosted_number_order.verification_type} verificationType -\n *          The method used for verifying ownership of the number to be hosted.\n * @property {string} verificationDocumentSid - Verification Document Sid.\n * @property {string} extension -\n *          Phone extension to use for ownership verification call.\n * @property {number} callDelay -\n *          Seconds (0-30) to delay ownership verification call by.\n * @property {string} verificationCode -\n *          The digits passed during the ownership verification call.\n * @property {string} verificationCallSids -\n *          List of IDs for ownership verification calls.\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {HostedNumberOrderPayload} payload - The instance payload\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance = function HostedNumberOrderInstance(version, payload,\n    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.incomingPhoneNumberSid = payload.incoming_phone_number_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.signingDocumentSid = payload.signing_document_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.failureReason = payload.failure_reason; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.verificationAttempts = deserialize.integer(payload.verification_attempts); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.verificationType = payload.verification_type; // jshint ignore:line\n  this.verificationDocumentSid = payload.verification_document_sid; // jshint ignore:line\n  this.extension = payload.extension; // jshint ignore:line\n  this.callDelay = deserialize.integer(payload.call_delay); // jshint ignore:line\n  this.verificationCode = payload.verification_code; // jshint ignore:line\n  this.verificationCallSids = payload.verification_call_sids; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(HostedNumberOrderInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new HostedNumberOrderContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nHostedNumberOrderInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderContext\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - HostedNumberOrder sid.\n */\n/* jshint ignore:end */\nHostedNumberOrderContext = function HostedNumberOrderContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = _.template(\n    '/HostedNumberOrders/<%= sid %>' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n    'Status': _.get(opts, 'status'),\n    'VerificationCode': _.get(opts, 'verificationCode'),\n    'VerificationType': _.get(opts, 'verificationType'),\n    'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid'),\n    'Extension': _.get(opts, 'extension'),\n    'CallDelay': _.get(opts, 'callDelay')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nHostedNumberOrderContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nHostedNumberOrderContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HostedNumberOrderList: HostedNumberOrderList,\n  HostedNumberOrderPage: HostedNumberOrderPage,\n  HostedNumberOrderInstance: HostedNumberOrderInstance,\n  HostedNumberOrderContext: HostedNumberOrderContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}