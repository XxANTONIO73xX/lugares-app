{"ast":null,"code":"'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\nvar Q = require('q'); /* jshint ignore:line */\nvar _ = require('lodash'); /* jshint ignore:line */\nvar util = require('util'); /* jshint ignore:line */\nvar Page = require('../../../../../base/Page'); /* jshint ignore:line */\nvar serialize = require('../../../../../base/serialize'); /* jshint ignore:line */\nvar values = require('../../../../../base/values'); /* jshint ignore:line */\n\nvar WorkerStatisticsList;\nvar WorkerStatisticsPage;\nvar WorkerStatisticsInstance;\nvar WorkerStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsList = function WorkerStatisticsList(version, workspaceSid, workerSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkerStatisticsListInstance(sid) {\n    return WorkerStatisticsListInstance.get(sid);\n  }\n  WorkerStatisticsListInstance._version = version;\n  // Path Solution\n  WorkerStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a worker_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.get = function get() {\n    return new WorkerStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workerSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n  WorkerStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n  return WorkerStatisticsListInstance;\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkerStatisticsSolution} solution - Path solution\n *\n * @returns WorkerStatisticsPage\n */\n/* jshint ignore:end */\nWorkerStatisticsPage = function WorkerStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n_.extend(WorkerStatisticsPage.prototype, Page.prototype);\nWorkerStatisticsPage.prototype.constructor = WorkerStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkerStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @param {WorkerStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkerStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workerSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkerStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} cumulative - The cumulative\n * @property {string} workerSid - The worker_sid\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {WorkerStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance = function WorkerStatisticsInstance(version, payload, workspaceSid, workerSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.workerSid = payload.worker_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n};\nObject.defineProperty(WorkerStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkerStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workerSid);\n    }\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {Date} [opts.endDate] - Filter cumulative statistics by a end date.\n * @param {string} [opts.taskChannel] -\n *          Filter cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\nWorkerStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsContext = function WorkerStatisticsContext(version, workspaceSid, workerSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n  this._uri = _.template('/Workspaces/<%= workspaceSid %>/Workers/<%= workerSid %>/Statistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {Date} [opts.endDate] - Filter cumulative statistics by a end date.\n * @param {string} [opts.taskChannel] -\n *          Filter cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkerStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workerSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\nWorkerStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\nmodule.exports = {\n  WorkerStatisticsList: WorkerStatisticsList,\n  WorkerStatisticsPage: WorkerStatisticsPage,\n  WorkerStatisticsInstance: WorkerStatisticsInstance,\n  WorkerStatisticsContext: WorkerStatisticsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","WorkerStatisticsList","WorkerStatisticsPage","WorkerStatisticsInstance","WorkerStatisticsContext","version","workspaceSid","workerSid","WorkerStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","cumulative","worker_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","template","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["C:/Users/spoon/Documents/GitHub/SDI/transportes-app/frontend/node_modules/twilio/lib/rest/taskrouter/v1/workspace/worker/workerStatistics.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkerStatisticsList;\nvar WorkerStatisticsPage;\nvar WorkerStatisticsInstance;\nvar WorkerStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid - The workspace_sid\n * @param {string} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsList = function WorkerStatisticsList(version, workspaceSid,\n                                                      workerSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkerStatisticsListInstance(sid) {\n    return WorkerStatisticsListInstance.get(sid);\n  }\n\n  WorkerStatisticsListInstance._version = version;\n  // Path Solution\n  WorkerStatisticsListInstance._solution = {workspaceSid: workspaceSid, workerSid: workerSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a worker_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.get = function get() {\n    return new WorkerStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.workerSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkerStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkerStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkerStatisticsSolution} solution - Path solution\n *\n * @returns WorkerStatisticsPage\n */\n/* jshint ignore:end */\nWorkerStatisticsPage = function WorkerStatisticsPage(version, response,\n                                                      solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkerStatisticsPage.prototype, Page.prototype);\nWorkerStatisticsPage.prototype.constructor = WorkerStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkerStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @param {WorkerStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkerStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.workerSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkerStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance\n *\n * @property {string} accountSid - The account_sid\n * @property {string} cumulative - The cumulative\n * @property {string} workerSid - The worker_sid\n * @property {string} workspaceSid - The workspace_sid\n * @property {string} url - The url\n *\n * @param {V1} version - Version of the resource\n * @param {WorkerStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance = function WorkerStatisticsInstance(version, payload,\n    workspaceSid, workerSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.workerSid = payload.worker_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, workerSid: workerSid, };\n};\n\nObject.defineProperty(WorkerStatisticsInstance.prototype,\n  '_proxy', {\n  get: function() {\n    if (!this._context) {\n      this._context = new WorkerStatisticsContext(\n        this._version,\n        this._solution.workspaceSid,\n        this._solution.workerSid\n      );\n    }\n\n    return this._context;\n  }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {Date} [opts.endDate] - Filter cumulative statistics by a end date.\n * @param {string} [opts.taskChannel] -\n *          Filter cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkerStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The workspace_sid\n * @param {sid} workerSid - The worker_sid\n */\n/* jshint ignore:end */\nWorkerStatisticsContext = function WorkerStatisticsContext(version,\n                                                            workspaceSid,\n                                                            workerSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, workerSid: workerSid, };\n  this._uri = _.template(\n    '/Workspaces/<%= workspaceSid %>/Workers/<%= workerSid %>/Statistics' // jshint ignore:line\n  )(this._solution);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Filter cumulative statistics by up to 'x' minutes in the past.\n * @param {Date} [opts.startDate] - Filter cumulative statistics by a start date.\n * @param {Date} [opts.endDate] - Filter cumulative statistics by a end date.\n * @param {string} [opts.taskChannel] -\n *          Filter cumulative statistics by TaskChannel.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkerStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.workerSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkerStatisticsContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkerStatisticsList: WorkerStatisticsList,\n  WorkerStatisticsPage: WorkerStatisticsPage,\n  WorkerStatisticsInstance: WorkerStatisticsInstance,\n  WorkerStatisticsContext: WorkerStatisticsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}